<?xml version="1.0" encoding="utf-8"?>
<package xmlns='http://ns.saxonica.com/xslt/export' xmlns:fn='http://www.w3.org/2005/xpath-functions' xmlns:xs='http://www.w3.org/2001/XMLSchema' xmlns:vv='http://saxon.sf.net/generated-variable' xmlns:java-type='http://saxon.sf.net/java-type' when='2022-03-06T10:13:26.409906-05:00' id='0' version='30' packageVersion='1' saxonVersion='9.9.1.7' target='JS' targetVersion='1' relocatable='true' implicit='true'>
 <co id='0' binds='1 1 1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Candidate' flags='os' line='172' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='173'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <att line='174' name='ObjectId'>
     <convert from='xs:untypedAtomic' to='xs:string'>
      <cast as='xs:untypedAtomic' emptiable='0'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='@id'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line='175'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='BallotName'/>
       </vc>
      </filter>
     </fn>
     <elem line='176' name='BallotName' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='177' bSlot='0'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotName'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='180'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='CampaignSlogan'/>
       </vc>
      </filter>
     </fn>
     <elem line='181' name='CampaignSlogan' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='182' bSlot='1'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CampaignSlogan'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='185'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ContactInformation'/>
       </vc>
      </filter>
     </fn>
     <elem line='186' name='ContactInformation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='187' bSlot='2'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContactInformation'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='190'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ExternalIdentifier'/>
       </vc>
      </filter>
     </fn>
     <forEach line='191'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='192' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='193' bSlot='3'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='197'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='FileDate'/>
       </vc>
      </filter>
     </fn>
     <elem line='198' name='FileDate' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='199' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='FileDate'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='202'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='IsIncumbent'/>
       </vc>
      </filter>
     </fn>
     <elem line='203' name='IsIncumbent' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='204' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='IsIncumbent'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='207'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='IsTopTicket'/>
       </vc>
      </filter>
     </fn>
     <elem line='208' name='IsTopTicket' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='209' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='IsTopTicket'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='212'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='PartyId'/>
       </vc>
      </filter>
     </fn>
     <elem line='213' name='PartyId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='214' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='PartyId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='217'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='PersonId'/>
       </vc>
      </filter>
     </fn>
     <elem line='218' name='PersonId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='219' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='PersonId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='222'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='PostElectionStatus'/>
       </vc>
      </filter>
     </fn>
     <elem line='223' name='PostElectionStatus' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='224' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='PostElectionStatus'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='227'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='PreElectionStatus'/>
       </vc>
      </filter>
     </fn>
     <elem line='228' name='PreElectionStatus' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='229' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='PreElectionStatus'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='2' binds='3'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}BallotCounts' flags='os' line='27' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='28'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='29'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='30' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='BallotCounts'/>
     </att>
    </choose>
    <callT line='32' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Counts' bSlot='0'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
    <choose line='35'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='BallotsCast'/>
       </vc>
      </filter>
     </fn>
     <elem line='36' name='BallotsCast' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='37' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='BallotsCast'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='40'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='BallotsOutstanding'/>
       </vc>
      </filter>
     </fn>
     <elem line='41' name='BallotsOutstanding' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='42' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='BallotsOutstanding'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='45'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='BallotsRejected'/>
       </vc>
      </filter>
     </fn>
     <elem line='46' name='BallotsRejected' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='47' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='BallotsRejected'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='4' binds=''>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Term' flags='os' line='1468' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1469'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='1470'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Label'/>
       </vc>
      </filter>
     </fn>
     <att line='1471' name='Label'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <slash simple='1'>
             <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
              <dot flags='a'/>
             </treat>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            </slash>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Label'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <choose line='1473'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='StartDate'/>
       </vc>
      </filter>
     </fn>
     <elem line='1474' name='StartDate' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1475' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='StartDate'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1478'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='EndDate'/>
       </vc>
      </filter>
     </fn>
     <elem line='1479' name='EndDate' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1480' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='EndDate'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1483'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Type'/>
       </vc>
      </filter>
     </fn>
     <elem line='1484' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1485' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Type'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='5' binds='1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}ContestSelection' flags='os' line='490' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='491'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <att line='492' name='ObjectId'>
     <convert from='xs:untypedAtomic' to='xs:string'>
      <cast as='xs:untypedAtomic' emptiable='0'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='@id'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line='493'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='SequenceOrder'/>
       </vc>
      </filter>
     </fn>
     <elem line='494' name='SequenceOrder' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='495' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='SequenceOrder'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='498'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='VoteCounts'/>
       </vc>
      </filter>
     </fn>
     <forEach line='499'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='VoteCounts'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='500' name='VoteCounts' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='501' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='6' binds='1 1 1 1 1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Party' flags='os' line='1082' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1083'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <att line='1084' name='ObjectId'>
     <convert from='xs:untypedAtomic' to='xs:string'>
      <cast as='xs:untypedAtomic' emptiable='0'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='@id'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line='1085'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Abbreviation'/>
       </vc>
      </filter>
     </fn>
     <elem line='1086' name='Abbreviation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='1087' bSlot='0'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Abbreviation'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='1090'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Color'/>
       </vc>
      </filter>
     </fn>
     <elem line='1091' name='Color' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1092' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Color'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1095'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ContactInformation'/>
       </vc>
      </filter>
     </fn>
     <elem line='1096' name='ContactInformation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='1097' bSlot='1'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContactInformation'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='1100'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ExternalIdentifier'/>
       </vc>
      </filter>
     </fn>
     <forEach line='1101'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='1102' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='1103' bSlot='2'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='1107'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='IsRecognizedParty'/>
       </vc>
      </filter>
     </fn>
     <elem line='1108' name='IsRecognizedParty' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1109' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='IsRecognizedParty'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1112'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='LeaderPersonIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='1113' name='LeaderPersonIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1119' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='1115' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='LeaderPersonIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='1116'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1122'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='LogoUri'/>
       </vc>
      </filter>
     </fn>
     <forEach line='1123'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='LogoUri'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='1124' name='LogoUri' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='1125' bSlot='3'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='1129'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Name'/>
       </vc>
      </filter>
     </fn>
     <elem line='1130' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='1131' bSlot='4'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='1134'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='PartyScopeGpUnitIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='1135' name='PartyScopeGpUnitIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1141' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='1137' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='PartyScopeGpUnitIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='1138'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1144'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Slogan'/>
       </vc>
      </filter>
     </fn>
     <elem line='1145' name='Slogan' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='1146' bSlot='5'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Slogan'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='7' binds=''>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}AnnotatedUri' flags='os' line='20' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='21'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='22'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Annotation'/>
       </vc>
      </filter>
     </fn>
     <att line='23' name='Annotation'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <slash simple='1'>
             <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
              <dot flags='a'/>
             </treat>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            </slash>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Annotation'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <valueOf line='25'>
     <fn name='string-join'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <data>
        <filter flags='b'>
         <slash simple='1'>
          <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
           <dot flags='a'/>
          </treat>
          <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         </slash>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Content'/>
         </vc>
        </filter>
       </data>
      </convert>
      <str val=' '/>
     </fn>
    </valueOf>
   </sequence>
  </template>
 </co>
 <co id='8' binds='1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}InternationalizedText' flags='os' line='881' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='882'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='883'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Label'/>
       </vc>
      </filter>
     </fn>
     <att line='884' name='Label'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <slash simple='1'>
             <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
              <dot flags='a'/>
             </treat>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            </slash>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Label'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <choose line='886'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Text'/>
       </vc>
      </filter>
     </fn>
     <forEach line='887'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Text'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='888' name='Text' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='889' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='9' binds=''>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Hours' flags='os' line='860' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='861'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='862'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Label'/>
       </vc>
      </filter>
     </fn>
     <att line='863' name='Label'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <slash simple='1'>
             <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
              <dot flags='a'/>
             </treat>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            </slash>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Label'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <choose line='865'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Day'/>
       </vc>
      </filter>
     </fn>
     <elem line='866' name='Day' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='867' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Day'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='870'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='StartTime'/>
       </vc>
      </filter>
     </fn>
     <elem line='871' name='StartTime' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='872' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='StartTime'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='875'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='EndTime'/>
       </vc>
      </filter>
     </fn>
     <elem line='876' name='EndTime' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='877' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='EndTime'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='10' binds='1 1 1 1 1 1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}ContactInformation' flags='os' line='340' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='341'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='342'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Label'/>
       </vc>
      </filter>
     </fn>
     <att line='343' name='Label'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <slash simple='1'>
             <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
              <dot flags='a'/>
             </treat>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            </slash>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Label'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <choose line='345'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='AddressLine'/>
       </vc>
      </filter>
     </fn>
     <forEach line='346'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='AddressLine'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
      </slash>
      <elem line='347' name='AddressLine' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='348' flags='l'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line='352'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Directions'/>
       </vc>
      </filter>
     </fn>
     <elem line='353' name='Directions' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='354' bSlot='0'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Directions'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='357'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Email'/>
       </vc>
      </filter>
     </fn>
     <forEach line='358'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Email'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='359' name='Email' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='360' bSlot='1'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='364'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Fax'/>
       </vc>
      </filter>
     </fn>
     <forEach line='365'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Fax'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='366' name='Fax' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='367' bSlot='2'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='371'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='LatLng'/>
       </vc>
      </filter>
     </fn>
     <elem line='372' name='LatLng' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='373' bSlot='3'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='LatLng'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='376'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Name'/>
       </vc>
      </filter>
     </fn>
     <elem line='377' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='378' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Name'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='381'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Phone'/>
       </vc>
      </filter>
     </fn>
     <forEach line='382'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Phone'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='383' name='Phone' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='384' bSlot='4'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='388'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Schedule'/>
       </vc>
      </filter>
     </fn>
     <forEach line='389'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Schedule'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='390' name='Schedule' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='391' bSlot='5'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='395'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Uri'/>
       </vc>
      </filter>
     </fn>
     <forEach line='396'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Uri'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='397' name='Uri' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='398' bSlot='6'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='11' binds='12'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}OrderedContest' flags='os' line='1009' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1010'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='1011'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='1012' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='OrderedContest'/>
     </att>
    </choose>
    <callT line='1014' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}OrderedContent' bSlot='0'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
    <choose line='1017'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ContestId'/>
       </vc>
      </filter>
     </fn>
     <elem line='1018' name='ContestId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1019' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='ContestId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1022'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OrderedContestSelectionIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='1023' name='OrderedContestSelectionIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1029' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='1025' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='OrderedContestSelectionIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='1026'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='13' binds='1'>
  <template name='Q{}start' flags='os' line='5' module='err_v2_json2xml.xsl' slots='2'>
   <let role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='6' var='Q{}xml' as='document-node()' slot='0' eval='16'>
    <doc line='7' validation='preserve'>
     <elem name='ElectionReport' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='dl'>
      <applyT line='8' bSlot='0'>
       <fn role='select' name='json-to-xml'>
        <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||fn:json-to-xml'>
         <check card='?' diag='0|0||fn:json-to-xml'>
          <cvUntyped to='xs:string'>
           <data>
            <dot flags='a'/>
           </data>
          </cvUntyped>
         </check>
        </treat>
       </fn>
      </applyT>
     </elem>
    </doc>
    <copyOf line='11' flags='vc'>
     <varRef name='Q{}xml' slot='0'/>
    </copyOf>
   </let>
  </template>
 </co>
 <co id='14' binds='5'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}PartySelection' flags='os' line='1172' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1173'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='1174'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='1175' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='PartySelection'/>
     </att>
    </choose>
    <callT line='1177' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}ContestSelection' bSlot='0'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
    <choose line='1180'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='PartyIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='1181' name='PartyIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1187' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='1183' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='PartyIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='1184'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='15' binds='12 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}OrderedHeader' flags='os' line='1033' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1034'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='1035'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='1036' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='OrderedHeader'/>
     </att>
    </choose>
    <callT line='1038' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}OrderedContent' bSlot='0'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
    <choose line='1041'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='HeaderId'/>
       </vc>
      </filter>
     </fn>
     <elem line='1042' name='HeaderId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1043' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='HeaderId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1046'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OrderedContent'/>
       </vc>
      </filter>
     </fn>
     <forEach line='1047'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OrderedContent'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='1048' name='OrderedContent' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='1049' bSlot='1'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='16' binds='6'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Coalition' flags='os' line='311' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='312'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='313'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='314' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='Coalition'/>
     </att>
    </choose>
    <callT line='316' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Party' bSlot='0'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
    <choose line='319'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ContestIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='320' name='ContestIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='326' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='322' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='ContestIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='323'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='329'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='PartyIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='330' name='PartyIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='336' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='332' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='PartyIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='333'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='17' binds='5'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}CandidateSelection' flags='os' line='277' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='278'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='279'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='280' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='CandidateSelection'/>
     </att>
    </choose>
    <callT line='282' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}ContestSelection' bSlot='0'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
    <choose line='285'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='CandidateIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='286' name='CandidateIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='292' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='288' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='CandidateIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='289'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='295'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='EndorsementPartyIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='296' name='EndorsementPartyIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='302' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='298' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='EndorsementPartyIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='299'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='305'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='IsWriteIn'/>
       </vc>
      </filter>
     </fn>
     <elem line='306' name='IsWriteIn' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='307' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='IsWriteIn'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='18' binds='19'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}RetentionContest' flags='os' line='1383' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1384'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='1385'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='1386' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='RetentionContest'/>
     </att>
    </choose>
    <callT line='1388' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}BallotMeasureContest' bSlot='0'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
    <choose line='1391'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='CandidateId'/>
       </vc>
      </filter>
     </fn>
     <elem line='1392' name='CandidateId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1393' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='CandidateId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1396'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OfficeId'/>
       </vc>
      </filter>
     </fn>
     <elem line='1397' name='OfficeId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1398' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OfficeId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='20' binds='1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}OfficeGroup' flags='os' line='978' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='979'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='980'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Label'/>
       </vc>
      </filter>
     </fn>
     <att line='981' name='Label'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <slash simple='1'>
             <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
              <dot flags='a'/>
             </treat>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            </slash>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Label'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <choose line='983'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Name'/>
       </vc>
      </filter>
     </fn>
     <elem line='984' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='985' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Name'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='988'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OfficeIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='989' name='OfficeIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='995' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='991' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='OfficeIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='992'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='998'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='SubOfficeGroup'/>
       </vc>
      </filter>
     </fn>
     <forEach line='999'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='SubOfficeGroup'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='1000' name='SubOfficeGroup' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='1001' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='21' binds='1 1 1 1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Office' flags='os' line='922' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='923'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <att line='924' name='ObjectId'>
     <convert from='xs:untypedAtomic' to='xs:string'>
      <cast as='xs:untypedAtomic' emptiable='0'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='@id'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line='925'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ContactInformation'/>
       </vc>
      </filter>
     </fn>
     <elem line='926' name='ContactInformation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='927' bSlot='0'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContactInformation'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='930'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Description'/>
       </vc>
      </filter>
     </fn>
     <elem line='931' name='Description' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='932' bSlot='1'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Description'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='935'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ElectionDistrictId'/>
       </vc>
      </filter>
     </fn>
     <elem line='936' name='ElectionDistrictId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='937' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='ElectionDistrictId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='940'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ExternalIdentifier'/>
       </vc>
      </filter>
     </fn>
     <forEach line='941'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='942' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='943' bSlot='2'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='947'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='FilingDeadline'/>
       </vc>
      </filter>
     </fn>
     <elem line='948' name='FilingDeadline' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='949' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='FilingDeadline'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='952'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='IsPartisan'/>
       </vc>
      </filter>
     </fn>
     <elem line='953' name='IsPartisan' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='954' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='IsPartisan'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='957'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Name'/>
       </vc>
      </filter>
     </fn>
     <elem line='958' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='959' bSlot='3'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='962'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OfficeHolderPersonIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='963' name='OfficeHolderPersonIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='969' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='965' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='OfficeHolderPersonIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='966'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='972'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Term'/>
       </vc>
      </filter>
     </fn>
     <elem line='973' name='Term' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='974' bSlot='4'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Term'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='22' binds='1 1 1 1 1 1 1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}ElectionReport' flags='os' line='683' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='684'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='685'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Election'/>
       </vc>
      </filter>
     </fn>
     <forEach line='686'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Election'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='687' name='Election' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='688' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='692'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ExternalIdentifier'/>
       </vc>
      </filter>
     </fn>
     <forEach line='693'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='694' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='695' bSlot='1'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='699'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Format'/>
       </vc>
      </filter>
     </fn>
     <elem line='700' name='Format' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='701' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Format'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='704'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='GeneratedDate'/>
       </vc>
      </filter>
     </fn>
     <elem line='705' name='GeneratedDate' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='706' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='GeneratedDate'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='709'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='GpUnit'/>
       </vc>
      </filter>
     </fn>
     <forEach line='710'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='GpUnit'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='711' name='GpUnit' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='712' bSlot='2'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='716'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Header'/>
       </vc>
      </filter>
     </fn>
     <forEach line='717'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Header'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='718' name='Header' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='719' bSlot='3'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='723'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Issuer'/>
       </vc>
      </filter>
     </fn>
     <elem line='724' name='Issuer' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='725' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Issuer'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='728'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='IssuerAbbreviation'/>
       </vc>
      </filter>
     </fn>
     <elem line='729' name='IssuerAbbreviation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='730' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='IssuerAbbreviation'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='733'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='IsTest'/>
       </vc>
      </filter>
     </fn>
     <elem line='734' name='IsTest' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='735' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='IsTest'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='738'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Notes'/>
       </vc>
      </filter>
     </fn>
     <elem line='739' name='Notes' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='740' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Notes'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='743'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Office'/>
       </vc>
      </filter>
     </fn>
     <forEach line='744'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Office'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='745' name='Office' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='746' bSlot='4'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='750'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OfficeGroup'/>
       </vc>
      </filter>
     </fn>
     <forEach line='751'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OfficeGroup'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='752' name='OfficeGroup' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='753' bSlot='5'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='757'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Party'/>
       </vc>
      </filter>
     </fn>
     <forEach line='758'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Party'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='759' name='Party' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='760' bSlot='6'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='764'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Person'/>
       </vc>
      </filter>
     </fn>
     <forEach line='765'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Person'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='766' name='Person' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='767' bSlot='7'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='771'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='SequenceStart'/>
       </vc>
      </filter>
     </fn>
     <elem line='772' name='SequenceStart' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='773' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='SequenceStart'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='776'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='SequenceEnd'/>
       </vc>
      </filter>
     </fn>
     <elem line='777' name='SequenceEnd' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='778' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='SequenceEnd'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='781'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Status'/>
       </vc>
      </filter>
     </fn>
     <elem line='782' name='Status' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='783' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Status'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='786'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='TestType'/>
       </vc>
      </filter>
     </fn>
     <elem line='787' name='TestType' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='788' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='TestType'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='791'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='VendorApplicationId'/>
       </vc>
      </filter>
     </fn>
     <elem line='792' name='VendorApplicationId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='793' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='VendorApplicationId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='23' binds=''>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}DeviceClass' flags='os' line='557' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='558'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='559'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Manufacturer'/>
       </vc>
      </filter>
     </fn>
     <elem line='560' name='Manufacturer' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='561' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Manufacturer'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='564'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Model'/>
       </vc>
      </filter>
     </fn>
     <elem line='565' name='Model' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='566' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Model'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='569'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Type'/>
       </vc>
      </filter>
     </fn>
     <elem line='570' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='571' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Type'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='574'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OtherType'/>
       </vc>
      </filter>
     </fn>
     <elem line='575' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='576' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OtherType'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='24' binds='1 1 1 1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Person' flags='os' line='1191' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1192'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <att line='1193' name='ObjectId'>
     <convert from='xs:untypedAtomic' to='xs:string'>
      <cast as='xs:untypedAtomic' emptiable='0'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='@id'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line='1194'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ContactInformation'/>
       </vc>
      </filter>
     </fn>
     <forEach line='1195'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContactInformation'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='1196' name='ContactInformation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='1197' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='1201'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='DateOfBirth'/>
       </vc>
      </filter>
     </fn>
     <elem line='1202' name='DateOfBirth' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1203' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='DateOfBirth'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1206'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ExternalIdentifier'/>
       </vc>
      </filter>
     </fn>
     <forEach line='1207'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='1208' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='1209' bSlot='1'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='1213'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='FirstName'/>
       </vc>
      </filter>
     </fn>
     <elem line='1214' name='FirstName' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1215' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='FirstName'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1218'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='FullName'/>
       </vc>
      </filter>
     </fn>
     <elem line='1219' name='FullName' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='1220' bSlot='2'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='FullName'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='1223'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Gender'/>
       </vc>
      </filter>
     </fn>
     <elem line='1224' name='Gender' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1225' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Gender'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1228'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='LastName'/>
       </vc>
      </filter>
     </fn>
     <elem line='1229' name='LastName' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1230' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='LastName'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1233'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='MiddleName'/>
       </vc>
      </filter>
     </fn>
     <forEach line='1234'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='MiddleName'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
      </slash>
      <elem line='1235' name='MiddleName' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='1236' flags='l'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line='1240'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Nickname'/>
       </vc>
      </filter>
     </fn>
     <elem line='1241' name='Nickname' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1242' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Nickname'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1245'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='PartyId'/>
       </vc>
      </filter>
     </fn>
     <elem line='1246' name='PartyId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1247' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='PartyId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1250'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Prefix'/>
       </vc>
      </filter>
     </fn>
     <elem line='1251' name='Prefix' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1252' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Prefix'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1255'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Profession'/>
       </vc>
      </filter>
     </fn>
     <elem line='1256' name='Profession' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='1257' bSlot='3'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Profession'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='1260'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Suffix'/>
       </vc>
      </filter>
     </fn>
     <elem line='1261' name='Suffix' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1262' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Suffix'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1265'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Title'/>
       </vc>
      </filter>
     </fn>
     <elem line='1266' name='Title' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='1267' bSlot='4'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Title'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='25' binds=''>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}ExternalIdentifier' flags='os' line='797' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='798'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='799'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Label'/>
       </vc>
      </filter>
     </fn>
     <att line='800' name='Label'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <slash simple='1'>
             <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
              <dot flags='a'/>
             </treat>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            </slash>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Label'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <choose line='802'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Type'/>
       </vc>
      </filter>
     </fn>
     <elem line='803' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='804' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Type'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='807'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OtherType'/>
       </vc>
      </filter>
     </fn>
     <elem line='808' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='809' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OtherType'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='812'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Value'/>
       </vc>
      </filter>
     </fn>
     <elem line='813' name='Value' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='814' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Value'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='26' binds=''>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}SpatialExtent' flags='os' line='1455' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1456'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='1457'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Coordinates'/>
       </vc>
      </filter>
     </fn>
     <elem line='1458' name='Coordinates' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1459' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Coordinates'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1462'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Format'/>
       </vc>
      </filter>
     </fn>
     <elem line='1463' name='Format' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1464' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Format'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='27' binds=''>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}LatLng' flags='os' line='901' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='902'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='903'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Label'/>
       </vc>
      </filter>
     </fn>
     <att line='904' name='Label'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <slash simple='1'>
             <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
              <dot flags='a'/>
             </treat>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            </slash>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Label'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <choose line='906'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Latitude'/>
       </vc>
      </filter>
     </fn>
     <elem line='907' name='Latitude' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='908' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Latitude'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='911'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Longitude'/>
       </vc>
      </filter>
     </fn>
     <elem line='912' name='Longitude' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='913' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Longitude'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='916'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Source'/>
       </vc>
      </filter>
     </fn>
     <elem line='917' name='Source' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='918' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Source'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='28' binds='1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}GpUnit' flags='os' line='818' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='819'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <att line='820' name='ObjectId'>
     <convert from='xs:untypedAtomic' to='xs:string'>
      <cast as='xs:untypedAtomic' emptiable='0'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='@id'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line='821'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ComposingGpUnitIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='822' name='ComposingGpUnitIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='828' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='824' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='ComposingGpUnitIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='825'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='831'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ExternalIdentifier'/>
       </vc>
      </filter>
     </fn>
     <forEach line='832'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='833' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='834' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='838'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Name'/>
       </vc>
      </filter>
     </fn>
     <elem line='839' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='840' bSlot='1'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='29' binds='1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Header' flags='os' line='844' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='845'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <att line='846' name='ObjectId'>
     <convert from='xs:untypedAtomic' to='xs:string'>
      <cast as='xs:untypedAtomic' emptiable='0'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='@id'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line='847'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ExternalIdentifier'/>
       </vc>
      </filter>
     </fn>
     <forEach line='848'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='849' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='850' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='854'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Name'/>
       </vc>
      </filter>
     </fn>
     <elem line='855' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='856' bSlot='1'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='30' binds='1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}OtherCounts' flags='os' line='1054' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1055'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='1056'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='DeviceClass'/>
       </vc>
      </filter>
     </fn>
     <elem line='1057' name='DeviceClass' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='1058' bSlot='0'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='DeviceClass'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='1061'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='GpUnitId'/>
       </vc>
      </filter>
     </fn>
     <elem line='1062' name='GpUnitId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1063' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='GpUnitId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1066'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Overvotes'/>
       </vc>
      </filter>
     </fn>
     <elem line='1067' name='Overvotes' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1068' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Overvotes'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1071'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Undervotes'/>
       </vc>
      </filter>
     </fn>
     <elem line='1072' name='Undervotes' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1073' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Undervotes'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1076'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='WriteIns'/>
       </vc>
      </filter>
     </fn>
     <elem line='1077' name='WriteIns' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1078' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='WriteIns'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='31' binds='1 1 1 1 1 1 1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Election' flags='os' line='580' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='581'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='582'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='BallotCounts'/>
       </vc>
      </filter>
     </fn>
     <forEach line='583'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotCounts'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='584' name='BallotCounts' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='585' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='589'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='BallotStyle'/>
       </vc>
      </filter>
     </fn>
     <forEach line='590'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotStyle'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='591' name='BallotStyle' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='592' bSlot='1'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='596'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Candidate'/>
       </vc>
      </filter>
     </fn>
     <forEach line='597'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Candidate'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='598' name='Candidate' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='599' bSlot='2'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='603'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ContactInformation'/>
       </vc>
      </filter>
     </fn>
     <elem line='604' name='ContactInformation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='605' bSlot='3'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContactInformation'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='608'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Contest'/>
       </vc>
      </filter>
     </fn>
     <forEach line='609'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Contest'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='610' name='Contest' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='611' bSlot='4'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='615'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='CountStatus'/>
       </vc>
      </filter>
     </fn>
     <forEach line='616'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CountStatus'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='617' name='CountStatus' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='618' bSlot='5'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='622'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ElectionScopeId'/>
       </vc>
      </filter>
     </fn>
     <elem line='623' name='ElectionScopeId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='624' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='ElectionScopeId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='627'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ExternalIdentifier'/>
       </vc>
      </filter>
     </fn>
     <forEach line='628'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='629' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='630' bSlot='6'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='634'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Name'/>
       </vc>
      </filter>
     </fn>
     <elem line='635' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='636' bSlot='7'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='639'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='StartDate'/>
       </vc>
      </filter>
     </fn>
     <elem line='640' name='StartDate' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='641' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='StartDate'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='644'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='EndDate'/>
       </vc>
      </filter>
     </fn>
     <elem line='645' name='EndDate' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='646' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='EndDate'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='649'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Type'/>
       </vc>
      </filter>
     </fn>
     <elem line='650' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='651' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Type'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='654'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OtherType'/>
       </vc>
      </filter>
     </fn>
     <elem line='655' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='656' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OtherType'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='3' binds='1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Counts' flags='os' line='524' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='525'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='526'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='DeviceClass'/>
       </vc>
      </filter>
     </fn>
     <elem line='527' name='DeviceClass' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='528' bSlot='0'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='DeviceClass'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='531'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='GpUnitId'/>
       </vc>
      </filter>
     </fn>
     <elem line='532' name='GpUnitId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='533' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='GpUnitId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='536'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='IsSuppressedForPrivacy'/>
       </vc>
      </filter>
     </fn>
     <elem line='537' name='IsSuppressedForPrivacy' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='538' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='IsSuppressedForPrivacy'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='541'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Round'/>
       </vc>
      </filter>
     </fn>
     <elem line='542' name='Round' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='543' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Round'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='546'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Type'/>
       </vc>
      </filter>
     </fn>
     <elem line='547' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='548' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Type'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='551'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OtherType'/>
       </vc>
      </filter>
     </fn>
     <elem line='552' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='553' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OtherType'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='32' binds='1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Schedule' flags='os' line='1402' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1403'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='1404'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Label'/>
       </vc>
      </filter>
     </fn>
     <att line='1405' name='Label'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <slash simple='1'>
             <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
              <dot flags='a'/>
             </treat>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            </slash>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Label'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <choose line='1407'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Hours'/>
       </vc>
      </filter>
     </fn>
     <forEach line='1408'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Hours'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='1409' name='Hours' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='1410' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='1414'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='IsOnlyByAppointment'/>
       </vc>
      </filter>
     </fn>
     <elem line='1415' name='IsOnlyByAppointment' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1416' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='IsOnlyByAppointment'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1419'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='IsOrByAppointment'/>
       </vc>
      </filter>
     </fn>
     <elem line='1420' name='IsOrByAppointment' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1421' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='IsOrByAppointment'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1424'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='IsSubjectToChange'/>
       </vc>
      </filter>
     </fn>
     <elem line='1425' name='IsSubjectToChange' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1426' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='IsSubjectToChange'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1429'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='StartDate'/>
       </vc>
      </filter>
     </fn>
     <elem line='1430' name='StartDate' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1431' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='StartDate'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1434'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='EndDate'/>
       </vc>
      </filter>
     </fn>
     <elem line='1435' name='EndDate' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1436' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='EndDate'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='33' binds='34'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}CandidateContest' flags='os' line='233' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='234'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='235'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='236' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='CandidateContest'/>
     </att>
    </choose>
    <callT line='238' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Contest' bSlot='0'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
    <choose line='241'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='NumberElected'/>
       </vc>
      </filter>
     </fn>
     <elem line='242' name='NumberElected' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='243' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='NumberElected'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='246'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='NumberRunoff'/>
       </vc>
      </filter>
     </fn>
     <elem line='247' name='NumberRunoff' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='248' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='NumberRunoff'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='251'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OfficeIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='252' name='OfficeIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='258' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='254' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='OfficeIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='255'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='261'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='PrimaryPartyIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='262' name='PrimaryPartyIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='268' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='264' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='PrimaryPartyIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='265'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='271'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='VotesAllowed'/>
       </vc>
      </filter>
     </fn>
     <elem line='272' name='VotesAllowed' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='273' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='VotesAllowed'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='35' binds='5 1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}BallotMeasureSelection' flags='os' line='107' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='108'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='109'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='110' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='BallotMeasureSelection'/>
     </att>
    </choose>
    <callT line='112' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}ContestSelection' bSlot='0'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
    <choose line='115'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ExternalIdentifier'/>
       </vc>
      </filter>
     </fn>
     <forEach line='116'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='117' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='118' bSlot='1'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='122'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Selection'/>
       </vc>
      </filter>
     </fn>
     <elem line='123' name='Selection' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='124' bSlot='2'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Selection'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='36' binds=''>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}PartyRegistration' flags='os' line='1159' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1160'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='1161'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Count'/>
       </vc>
      </filter>
     </fn>
     <elem line='1162' name='Count' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1163' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Count'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1166'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='PartyId'/>
       </vc>
      </filter>
     </fn>
     <elem line='1167' name='PartyId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1168' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='PartyId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='19' binds='34 1 1 1 1 1 1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}BallotMeasureContest' flags='os' line='51' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='52'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='53'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='54' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='BallotMeasureContest'/>
     </att>
    </choose>
    <callT line='56' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Contest' bSlot='0'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
    <choose line='59'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ConStatement'/>
       </vc>
      </filter>
     </fn>
     <elem line='60' name='ConStatement' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='61' bSlot='1'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ConStatement'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='64'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='EffectOfAbstain'/>
       </vc>
      </filter>
     </fn>
     <elem line='65' name='EffectOfAbstain' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='66' bSlot='2'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='EffectOfAbstain'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='69'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='FullText'/>
       </vc>
      </filter>
     </fn>
     <elem line='70' name='FullText' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='71' bSlot='3'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='FullText'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='74'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='InfoUri'/>
       </vc>
      </filter>
     </fn>
     <forEach line='75'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='InfoUri'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='76' name='InfoUri' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='77' bSlot='4'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='81'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='PassageThreshold'/>
       </vc>
      </filter>
     </fn>
     <elem line='82' name='PassageThreshold' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='83' bSlot='5'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PassageThreshold'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='86'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ProStatement'/>
       </vc>
      </filter>
     </fn>
     <elem line='87' name='ProStatement' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='88' bSlot='6'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ProStatement'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='91'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='SummaryText'/>
       </vc>
      </filter>
     </fn>
     <elem line='92' name='SummaryText' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='93' bSlot='7'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='SummaryText'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='96'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Type'/>
       </vc>
      </filter>
     </fn>
     <elem line='97' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='98' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Type'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='101'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OtherType'/>
       </vc>
      </filter>
     </fn>
     <elem line='102' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='103' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OtherType'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='37' binds=''>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}LanguageString' flags='os' line='894' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='895'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='896'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Language'/>
       </vc>
      </filter>
     </fn>
     <att line='897' name='Language'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <slash simple='1'>
             <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
              <dot flags='a'/>
             </treat>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            </slash>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Language'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <valueOf line='899'>
     <fn name='string-join'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <data>
        <filter flags='b'>
         <slash simple='1'>
          <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
           <dot flags='a'/>
          </treat>
          <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         </slash>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Content'/>
         </vc>
        </filter>
       </data>
      </convert>
      <str val=' '/>
     </fn>
    </valueOf>
   </sequence>
  </template>
 </co>
 <co id='38' binds='28 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}ReportingDevice' flags='os' line='1271' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1272'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='1273'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='1274' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='ReportingDevice'/>
     </att>
    </choose>
    <callT line='1276' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}GpUnit' bSlot='0'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
    <choose line='1279'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='DeviceClass'/>
       </vc>
      </filter>
     </fn>
     <elem line='1280' name='DeviceClass' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='1281' bSlot='1'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='DeviceClass'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='1284'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='SerialNumber'/>
       </vc>
      </filter>
     </fn>
     <elem line='1285' name='SerialNumber' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1286' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='SerialNumber'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='12' binds=''>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}OrderedContent' flags='os' line='1006' module='err_v2_json2xml.xsl' slots='1'>
   <param role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1007' name='Q{}set_type' slot='0'>
    <true role='select'/>
    <supplied role='conversion' slot='0'/>
   </param>
  </template>
 </co>
 <co id='39' binds='28 1 1 1 1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}ReportingUnit' flags='os' line='1290' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1291'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='1292'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='1293' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='ReportingUnit'/>
     </att>
    </choose>
    <callT line='1295' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}GpUnit' bSlot='0'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
    <choose line='1298'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='AuthorityIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='1299' name='AuthorityIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1305' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='1301' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='AuthorityIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='1302'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1308'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ContactInformation'/>
       </vc>
      </filter>
     </fn>
     <elem line='1309' name='ContactInformation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='1310' bSlot='1'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContactInformation'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='1313'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='CountStatus'/>
       </vc>
      </filter>
     </fn>
     <forEach line='1314'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CountStatus'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='1315' name='CountStatus' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='1316' bSlot='2'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='1320'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ElectionAdministration'/>
       </vc>
      </filter>
     </fn>
     <elem line='1321' name='ElectionAdministration' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='1322' bSlot='3'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ElectionAdministration'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='1325'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='IsDistricted'/>
       </vc>
      </filter>
     </fn>
     <elem line='1326' name='IsDistricted' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1327' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='IsDistricted'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1330'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='IsMailOnly'/>
       </vc>
      </filter>
     </fn>
     <elem line='1331' name='IsMailOnly' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1332' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='IsMailOnly'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1335'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Number'/>
       </vc>
      </filter>
     </fn>
     <elem line='1336' name='Number' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1337' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Number'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1340'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='PartyRegistration'/>
       </vc>
      </filter>
     </fn>
     <forEach line='1341'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PartyRegistration'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='1342' name='PartyRegistration' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='1343' bSlot='4'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='1347'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='SpatialDimension'/>
       </vc>
      </filter>
     </fn>
     <elem line='1348' name='SpatialDimension' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='1349' bSlot='5'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='SpatialDimension'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='1352'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='SubUnitsReported'/>
       </vc>
      </filter>
     </fn>
     <elem line='1353' name='SubUnitsReported' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1354' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='SubUnitsReported'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1357'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='TotalSubUnits'/>
       </vc>
      </filter>
     </fn>
     <elem line='1358' name='TotalSubUnits' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1359' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='TotalSubUnits'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1362'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Type'/>
       </vc>
      </filter>
     </fn>
     <elem line='1363' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1364' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Type'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1367'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OtherType'/>
       </vc>
      </filter>
     </fn>
     <elem line='1368' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1369' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OtherType'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1372'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='VotersParticipated'/>
       </vc>
      </filter>
     </fn>
     <elem line='1373' name='VotersParticipated' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1374' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='VotersParticipated'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='1377'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='VotersRegistered'/>
       </vc>
      </filter>
     </fn>
     <elem line='1378' name='VotersRegistered' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1379' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='VotersRegistered'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='34' binds='1 1 1 1 1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Contest' flags='os' line='403' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='404'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <att line='405' name='ObjectId'>
     <convert from='xs:untypedAtomic' to='xs:string'>
      <cast as='xs:untypedAtomic' emptiable='0'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='@id'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line='406'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Abbreviation'/>
       </vc>
      </filter>
     </fn>
     <elem line='407' name='Abbreviation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='408' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Abbreviation'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='411'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='BallotSubTitle'/>
       </vc>
      </filter>
     </fn>
     <elem line='412' name='BallotSubTitle' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='413' bSlot='0'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotSubTitle'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='416'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='BallotTitle'/>
       </vc>
      </filter>
     </fn>
     <elem line='417' name='BallotTitle' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='418' bSlot='1'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotTitle'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='421'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ContestSelection'/>
       </vc>
      </filter>
     </fn>
     <forEach line='422'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContestSelection'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='423' name='ContestSelection' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='424' bSlot='2'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='428'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='CountStatus'/>
       </vc>
      </filter>
     </fn>
     <forEach line='429'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CountStatus'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='430' name='CountStatus' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='431' bSlot='3'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='435'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ElectionDistrictId'/>
       </vc>
      </filter>
     </fn>
     <elem line='436' name='ElectionDistrictId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='437' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='ElectionDistrictId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='440'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ExternalIdentifier'/>
       </vc>
      </filter>
     </fn>
     <forEach line='441'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='442' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='443' bSlot='4'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='447'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='HasRotation'/>
       </vc>
      </filter>
     </fn>
     <elem line='448' name='HasRotation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='449' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='HasRotation'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='452'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Name'/>
       </vc>
      </filter>
     </fn>
     <elem line='453' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='454' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Name'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='457'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OtherCounts'/>
       </vc>
      </filter>
     </fn>
     <forEach line='458'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherCounts'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='459' name='OtherCounts' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='460' bSlot='5'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='464'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='SequenceOrder'/>
       </vc>
      </filter>
     </fn>
     <elem line='465' name='SequenceOrder' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='466' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='SequenceOrder'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='469'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='SubUnitsReported'/>
       </vc>
      </filter>
     </fn>
     <elem line='470' name='SubUnitsReported' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='471' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='SubUnitsReported'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='474'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='TotalSubUnits'/>
       </vc>
      </filter>
     </fn>
     <elem line='475' name='TotalSubUnits' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='476' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='TotalSubUnits'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='479'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='VoteVariation'/>
       </vc>
      </filter>
     </fn>
     <elem line='480' name='VoteVariation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='481' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='VoteVariation'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='484'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OtherVoteVariation'/>
       </vc>
      </filter>
     </fn>
     <elem line='485' name='OtherVoteVariation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='486' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OtherVoteVariation'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='40' binds='1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}ElectionAdministration' flags='os' line='660' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='661'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='662'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ContactInformation'/>
       </vc>
      </filter>
     </fn>
     <elem line='663' name='ContactInformation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='664' bSlot='0'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContactInformation'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='667'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ElectionOfficialPersonIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='668' name='ElectionOfficialPersonIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='674' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='670' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='ElectionOfficialPersonIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='671'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='677'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Name'/>
       </vc>
      </filter>
     </fn>
     <elem line='678' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='679' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Name'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='41' binds='1 1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}BallotStyle' flags='os' line='128' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='129'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='130'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ExternalIdentifier'/>
       </vc>
      </filter>
     </fn>
     <forEach line='131'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='132' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='133' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='137'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='GpUnitIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='138' name='GpUnitIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='144' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='140' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='GpUnitIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='141'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='147'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ImageUri'/>
       </vc>
      </filter>
     </fn>
     <forEach line='148'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ImageUri'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='149' name='ImageUri' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='150' bSlot='1'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='154'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OrderedContent'/>
       </vc>
      </filter>
     </fn>
     <forEach line='155'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OrderedContent'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='156' name='OrderedContent' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='157' bSlot='2'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='161'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='PartyIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='162' name='PartyIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='168' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='164' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='PartyIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='165'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='42' binds='3'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}VoteCounts' flags='os' line='1489' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1490'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='1491'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='1492' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='VoteCounts'/>
     </att>
    </choose>
    <callT line='1494' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Counts' bSlot='0'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
    <choose line='1497'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Count'/>
       </vc>
      </filter>
     </fn>
     <elem line='1498' name='Count' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='1499' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Count'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='43' binds='1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}SpatialDimension' flags='os' line='1440' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1441'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='1442'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='MapUri'/>
       </vc>
      </filter>
     </fn>
     <forEach line='1443'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='MapUri'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='1444' name='MapUri' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT line='1445' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='1449'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='SpatialExtent'/>
       </vc>
      </filter>
     </fn>
     <elem line='1450' name='SpatialExtent' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <applyT line='1451' bSlot='1'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='SpatialExtent'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='44' binds=''>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}CountStatus' flags='os' line='506' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='507'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='508'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Status'/>
       </vc>
      </filter>
     </fn>
     <elem line='509' name='Status' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='510' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Status'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='513'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Type'/>
       </vc>
      </filter>
     </fn>
     <elem line='514' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='515' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Type'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='518'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OtherType'/>
       </vc>
      </filter>
     </fn>
     <elem line='519' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
      <valueOf line='520' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OtherType'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='45' binds='34'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}PartyContest' flags='os' line='1150' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1151'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='1152'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='1153' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='PartyContest'/>
     </att>
    </choose>
    <callT line='1155' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Contest' bSlot='0' flags='t'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
   </sequence>
  </template>
 </co>
 <co id='1' binds='3 1 1 1 19 28 1 1 1 1 1 28 1 1 1 1 1 1 5 34 1 12 1 12 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 6 5 34 1 1 1 1 1 1 1 5 1 1 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 34 1 1 1 1 1 1 1 1'>
  <mode onNo='TC' flags='dW' patternSlots='0'>
   <templateRule prec='0' prio='0.5' seq='45' rank='1' minImp='0' slots='1' flags='s' line='1489' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1489' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.VoteCounts'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1490'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='1491'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='1492' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='VoteCounts'/>
      </att>
     </choose>
     <callT line='1494' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Counts' bSlot='0'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
     <choose line='1497'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Count'/>
        </vc>
       </filter>
      </fn>
      <elem line='1499' name='Count' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Count'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='44' rank='1' minImp='0' slots='1' flags='s' line='1468' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1468' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.Term'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1469'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='1470'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Label'/>
        </vc>
       </filter>
      </fn>
      <att line='1471' name='Label'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <cast as='xs:untypedAtomic' emptiable='0'>
         <fn name='string-join'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <data>
            <filter flags='b'>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <cast as='xs:string' emptiable='1'>
               <attVal name='Q{}key' chk='0'/>
              </cast>
              <str val='Label'/>
             </vc>
            </filter>
           </data>
          </convert>
          <str val=' '/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line='1473'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='StartDate'/>
        </vc>
       </filter>
      </fn>
      <elem line='1475' name='StartDate' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='StartDate'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1478'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='EndDate'/>
        </vc>
       </filter>
      </fn>
      <elem line='1480' name='EndDate' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='EndDate'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1483'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Type'/>
        </vc>
       </filter>
      </fn>
      <elem line='1485' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Type'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='43' rank='1' minImp='0' slots='1' flags='s' line='1455' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1455' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.SpatialExtent'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1456'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='1457'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Coordinates'/>
        </vc>
       </filter>
      </fn>
      <elem line='1459' name='Coordinates' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Coordinates'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1462'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Format'/>
        </vc>
       </filter>
      </fn>
      <elem line='1464' name='Format' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Format'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='42' rank='1' minImp='0' slots='1' flags='s' line='1440' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1440' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.SpatialDimension'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1441'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='1442'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='MapUri'/>
        </vc>
       </filter>
      </fn>
      <forEach line='1443'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='MapUri'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='1445' name='MapUri' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='1'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='1449'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='SpatialExtent'/>
        </vc>
       </filter>
      </fn>
      <elem line='1451' name='SpatialExtent' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='2'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='SpatialExtent'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='41' rank='1' minImp='0' slots='1' flags='s' line='1402' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1402' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.Schedule'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1403'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='1404'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Label'/>
        </vc>
       </filter>
      </fn>
      <att line='1405' name='Label'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <cast as='xs:untypedAtomic' emptiable='0'>
         <fn name='string-join'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <data>
            <filter flags='b'>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <cast as='xs:string' emptiable='1'>
               <attVal name='Q{}key' chk='0'/>
              </cast>
              <str val='Label'/>
             </vc>
            </filter>
           </data>
          </convert>
          <str val=' '/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line='1407'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Hours'/>
        </vc>
       </filter>
      </fn>
      <forEach line='1408'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Hours'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='1410' name='Hours' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='3'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='1414'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='IsOnlyByAppointment'/>
        </vc>
       </filter>
      </fn>
      <elem line='1416' name='IsOnlyByAppointment' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='IsOnlyByAppointment'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1419'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='IsOrByAppointment'/>
        </vc>
       </filter>
      </fn>
      <elem line='1421' name='IsOrByAppointment' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='IsOrByAppointment'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1424'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='IsSubjectToChange'/>
        </vc>
       </filter>
      </fn>
      <elem line='1426' name='IsSubjectToChange' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='IsSubjectToChange'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1429'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='StartDate'/>
        </vc>
       </filter>
      </fn>
      <elem line='1431' name='StartDate' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='StartDate'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1434'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='EndDate'/>
        </vc>
       </filter>
      </fn>
      <elem line='1436' name='EndDate' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='EndDate'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='40' rank='1' minImp='0' slots='1' flags='s' line='1383' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1383' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.RetentionContest'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1384'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='1385'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='1386' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='RetentionContest'/>
      </att>
     </choose>
     <callT line='1388' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}BallotMeasureContest' bSlot='4'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
     <choose line='1391'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CandidateId'/>
        </vc>
       </filter>
      </fn>
      <elem line='1393' name='CandidateId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='CandidateId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1396'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OfficeId'/>
        </vc>
       </filter>
      </fn>
      <elem line='1398' name='OfficeId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OfficeId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='39' rank='1' minImp='0' slots='1' flags='s' line='1290' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1290' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.ReportingUnit'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1291'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='1292'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='1293' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='ReportingUnit'/>
      </att>
     </choose>
     <callT line='1295' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}GpUnit' bSlot='5'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
     <choose line='1298'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='AuthorityIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='1300' name='AuthorityIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='1305' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='1301' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='AuthorityIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='1302'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1308'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContactInformation'/>
        </vc>
       </filter>
      </fn>
      <elem line='1310' name='ContactInformation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='6'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ContactInformation'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='1313'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CountStatus'/>
        </vc>
       </filter>
      </fn>
      <forEach line='1314'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='CountStatus'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='1316' name='CountStatus' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='7'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='1320'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ElectionAdministration'/>
        </vc>
       </filter>
      </fn>
      <elem line='1322' name='ElectionAdministration' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='8'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ElectionAdministration'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='1325'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='IsDistricted'/>
        </vc>
       </filter>
      </fn>
      <elem line='1327' name='IsDistricted' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='IsDistricted'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1330'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='IsMailOnly'/>
        </vc>
       </filter>
      </fn>
      <elem line='1332' name='IsMailOnly' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='IsMailOnly'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1335'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Number'/>
        </vc>
       </filter>
      </fn>
      <elem line='1337' name='Number' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Number'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1340'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PartyRegistration'/>
        </vc>
       </filter>
      </fn>
      <forEach line='1341'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='PartyRegistration'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='1343' name='PartyRegistration' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='9'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='1347'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='SpatialDimension'/>
        </vc>
       </filter>
      </fn>
      <elem line='1349' name='SpatialDimension' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='10'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='SpatialDimension'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='1352'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='SubUnitsReported'/>
        </vc>
       </filter>
      </fn>
      <elem line='1354' name='SubUnitsReported' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='SubUnitsReported'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1357'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='TotalSubUnits'/>
        </vc>
       </filter>
      </fn>
      <elem line='1359' name='TotalSubUnits' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='TotalSubUnits'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1362'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Type'/>
        </vc>
       </filter>
      </fn>
      <elem line='1364' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Type'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1367'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherType'/>
        </vc>
       </filter>
      </fn>
      <elem line='1369' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OtherType'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1372'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='VotersParticipated'/>
        </vc>
       </filter>
      </fn>
      <elem line='1374' name='VotersParticipated' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='VotersParticipated'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1377'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='VotersRegistered'/>
        </vc>
       </filter>
      </fn>
      <elem line='1379' name='VotersRegistered' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='VotersRegistered'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='38' rank='1' minImp='0' slots='1' flags='s' line='1271' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1271' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.ReportingDevice'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1272'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='1273'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='1274' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='ReportingDevice'/>
      </att>
     </choose>
     <callT line='1276' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}GpUnit' bSlot='11'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
     <choose line='1279'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='DeviceClass'/>
        </vc>
       </filter>
      </fn>
      <elem line='1281' name='DeviceClass' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='12'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='DeviceClass'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='1284'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='SerialNumber'/>
        </vc>
       </filter>
      </fn>
      <elem line='1286' name='SerialNumber' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='SerialNumber'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='37' rank='1' minImp='0' slots='1' flags='s' line='1191' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1191' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.Person'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1192'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <att line='1193' name='ObjectId'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='@id'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line='1194'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContactInformation'/>
        </vc>
       </filter>
      </fn>
      <forEach line='1195'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ContactInformation'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='1197' name='ContactInformation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='13'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='1201'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='DateOfBirth'/>
        </vc>
       </filter>
      </fn>
      <elem line='1203' name='DateOfBirth' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='DateOfBirth'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1206'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
      </fn>
      <forEach line='1207'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ExternalIdentifier'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='1209' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='14'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='1213'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='FirstName'/>
        </vc>
       </filter>
      </fn>
      <elem line='1215' name='FirstName' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='FirstName'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1218'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='FullName'/>
        </vc>
       </filter>
      </fn>
      <elem line='1220' name='FullName' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='15'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='FullName'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='1223'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Gender'/>
        </vc>
       </filter>
      </fn>
      <elem line='1225' name='Gender' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Gender'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1228'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='LastName'/>
        </vc>
       </filter>
      </fn>
      <elem line='1230' name='LastName' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='LastName'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1233'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='MiddleName'/>
        </vc>
       </filter>
      </fn>
      <forEach line='1234'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='MiddleName'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </slash>
       <elem line='1236' name='MiddleName' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <valueOf flags='l'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line='1240'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Nickname'/>
        </vc>
       </filter>
      </fn>
      <elem line='1242' name='Nickname' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Nickname'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1245'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PartyId'/>
        </vc>
       </filter>
      </fn>
      <elem line='1247' name='PartyId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='PartyId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1250'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Prefix'/>
        </vc>
       </filter>
      </fn>
      <elem line='1252' name='Prefix' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Prefix'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1255'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Profession'/>
        </vc>
       </filter>
      </fn>
      <elem line='1257' name='Profession' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='16'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Profession'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='1260'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Suffix'/>
        </vc>
       </filter>
      </fn>
      <elem line='1262' name='Suffix' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Suffix'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1265'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Title'/>
        </vc>
       </filter>
      </fn>
      <elem line='1267' name='Title' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='17'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Title'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='36' rank='1' minImp='0' slots='1' flags='s' line='1172' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1172' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.PartySelection'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1173'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='1174'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='1175' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='PartySelection'/>
      </att>
     </choose>
     <callT line='1177' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}ContestSelection' bSlot='18'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
     <choose line='1180'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PartyIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='1182' name='PartyIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='1187' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='1183' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='PartyIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='1184'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='35' rank='1' minImp='0' slots='1' flags='s' line='1159' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1159' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.PartyRegistration'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1160'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='1161'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Count'/>
        </vc>
       </filter>
      </fn>
      <elem line='1163' name='Count' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Count'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1166'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PartyId'/>
        </vc>
       </filter>
      </fn>
      <elem line='1168' name='PartyId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='PartyId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='34' rank='1' minImp='0' slots='1' flags='s' line='1150' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1150' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.PartyContest'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1151'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='1152'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='1153' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='PartyContest'/>
      </att>
     </choose>
     <callT line='1155' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Contest' bSlot='19' flags='t'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='32' rank='1' minImp='0' slots='1' flags='s' line='1054' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1054' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.OtherCounts'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1055'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='1056'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='DeviceClass'/>
        </vc>
       </filter>
      </fn>
      <elem line='1058' name='DeviceClass' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='20'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='DeviceClass'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='1061'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='GpUnitId'/>
        </vc>
       </filter>
      </fn>
      <elem line='1063' name='GpUnitId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='GpUnitId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1066'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Overvotes'/>
        </vc>
       </filter>
      </fn>
      <elem line='1068' name='Overvotes' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Overvotes'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1071'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Undervotes'/>
        </vc>
       </filter>
      </fn>
      <elem line='1073' name='Undervotes' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Undervotes'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1076'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='WriteIns'/>
        </vc>
       </filter>
      </fn>
      <elem line='1078' name='WriteIns' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='WriteIns'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='31' rank='1' minImp='0' slots='1' flags='s' line='1033' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1033' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.OrderedHeader'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1034'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='1035'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='1036' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='OrderedHeader'/>
      </att>
     </choose>
     <callT line='1038' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}OrderedContent' bSlot='21'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
     <choose line='1041'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='HeaderId'/>
        </vc>
       </filter>
      </fn>
      <elem line='1043' name='HeaderId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='HeaderId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1046'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OrderedContent'/>
        </vc>
       </filter>
      </fn>
      <forEach line='1047'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='OrderedContent'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='1049' name='OrderedContent' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='22'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='30' rank='1' minImp='0' slots='1' flags='s' line='1009' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1009' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.OrderedContest'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1010'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='1011'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='1012' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='OrderedContest'/>
      </att>
     </choose>
     <callT line='1014' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}OrderedContent' bSlot='23'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
     <choose line='1017'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContestId'/>
        </vc>
       </filter>
      </fn>
      <elem line='1019' name='ContestId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='ContestId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1022'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OrderedContestSelectionIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='1024' name='OrderedContestSelectionIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='1029' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='1025' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='OrderedContestSelectionIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='1026'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='28' rank='1' minImp='0' slots='1' flags='s' line='978' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='978' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.OfficeGroup'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='979'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='980'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Label'/>
        </vc>
       </filter>
      </fn>
      <att line='981' name='Label'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <cast as='xs:untypedAtomic' emptiable='0'>
         <fn name='string-join'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <data>
            <filter flags='b'>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <cast as='xs:string' emptiable='1'>
               <attVal name='Q{}key' chk='0'/>
              </cast>
              <str val='Label'/>
             </vc>
            </filter>
           </data>
          </convert>
          <str val=' '/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line='983'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </fn>
      <elem line='985' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Name'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='988'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OfficeIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='990' name='OfficeIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='995' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='991' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='OfficeIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='992'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='998'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='SubOfficeGroup'/>
        </vc>
       </filter>
      </fn>
      <forEach line='999'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='SubOfficeGroup'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='1001' name='SubOfficeGroup' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='24'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='27' rank='1' minImp='0' slots='1' flags='s' line='922' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='922' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.Office'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='923'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <att line='924' name='ObjectId'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='@id'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line='925'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContactInformation'/>
        </vc>
       </filter>
      </fn>
      <elem line='927' name='ContactInformation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='25'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ContactInformation'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='930'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Description'/>
        </vc>
       </filter>
      </fn>
      <elem line='932' name='Description' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='26'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Description'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='935'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ElectionDistrictId'/>
        </vc>
       </filter>
      </fn>
      <elem line='937' name='ElectionDistrictId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='ElectionDistrictId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='940'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
      </fn>
      <forEach line='941'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ExternalIdentifier'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='943' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='27'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='947'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='FilingDeadline'/>
        </vc>
       </filter>
      </fn>
      <elem line='949' name='FilingDeadline' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='FilingDeadline'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='952'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='IsPartisan'/>
        </vc>
       </filter>
      </fn>
      <elem line='954' name='IsPartisan' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='IsPartisan'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='957'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </fn>
      <elem line='959' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='28'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Name'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='962'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OfficeHolderPersonIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='964' name='OfficeHolderPersonIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='969' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='965' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='OfficeHolderPersonIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='966'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='972'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Term'/>
        </vc>
       </filter>
      </fn>
      <elem line='974' name='Term' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='29'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Term'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='26' rank='1' minImp='0' slots='1' flags='s' line='901' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='901' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.LatLng'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='902'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='903'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Label'/>
        </vc>
       </filter>
      </fn>
      <att line='904' name='Label'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <cast as='xs:untypedAtomic' emptiable='0'>
         <fn name='string-join'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <data>
            <filter flags='b'>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <cast as='xs:string' emptiable='1'>
               <attVal name='Q{}key' chk='0'/>
              </cast>
              <str val='Label'/>
             </vc>
            </filter>
           </data>
          </convert>
          <str val=' '/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line='906'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Latitude'/>
        </vc>
       </filter>
      </fn>
      <elem line='908' name='Latitude' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Latitude'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='911'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Longitude'/>
        </vc>
       </filter>
      </fn>
      <elem line='913' name='Longitude' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Longitude'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='916'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Source'/>
        </vc>
       </filter>
      </fn>
      <elem line='918' name='Source' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Source'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='25' rank='1' minImp='0' slots='1' flags='s' line='894' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='894' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.LanguageString'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='895'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='896'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Language'/>
        </vc>
       </filter>
      </fn>
      <att line='897' name='Language'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <cast as='xs:untypedAtomic' emptiable='0'>
         <fn name='string-join'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <data>
            <filter flags='b'>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <cast as='xs:string' emptiable='1'>
               <attVal name='Q{}key' chk='0'/>
              </cast>
              <str val='Language'/>
             </vc>
            </filter>
           </data>
          </convert>
          <str val=' '/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <valueOf line='899'>
      <fn name='string-join'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <data>
         <filter flags='b'>
          <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
          <vc op='eq' onEmpty='0' comp='CCC'>
           <cast as='xs:string' emptiable='1'>
            <attVal name='Q{}key' chk='0'/>
           </cast>
           <str val='Content'/>
          </vc>
         </filter>
        </data>
       </convert>
       <str val=' '/>
      </fn>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='24' rank='1' minImp='0' slots='1' flags='s' line='881' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='881' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.InternationalizedText'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='882'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='883'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Label'/>
        </vc>
       </filter>
      </fn>
      <att line='884' name='Label'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <cast as='xs:untypedAtomic' emptiable='0'>
         <fn name='string-join'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <data>
            <filter flags='b'>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <cast as='xs:string' emptiable='1'>
               <attVal name='Q{}key' chk='0'/>
              </cast>
              <str val='Label'/>
             </vc>
            </filter>
           </data>
          </convert>
          <str val=' '/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line='886'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Text'/>
        </vc>
       </filter>
      </fn>
      <forEach line='887'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Text'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='889' name='Text' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='30'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='23' rank='1' minImp='0' slots='1' flags='s' line='860' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='860' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.Hours'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='861'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='862'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Label'/>
        </vc>
       </filter>
      </fn>
      <att line='863' name='Label'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <cast as='xs:untypedAtomic' emptiable='0'>
         <fn name='string-join'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <data>
            <filter flags='b'>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <cast as='xs:string' emptiable='1'>
               <attVal name='Q{}key' chk='0'/>
              </cast>
              <str val='Label'/>
             </vc>
            </filter>
           </data>
          </convert>
          <str val=' '/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line='865'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Day'/>
        </vc>
       </filter>
      </fn>
      <elem line='867' name='Day' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Day'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='870'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='StartTime'/>
        </vc>
       </filter>
      </fn>
      <elem line='872' name='StartTime' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='StartTime'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='875'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='EndTime'/>
        </vc>
       </filter>
      </fn>
      <elem line='877' name='EndTime' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='EndTime'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='22' rank='1' minImp='0' slots='1' flags='s' line='844' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='844' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.Header'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='845'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <att line='846' name='ObjectId'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='@id'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line='847'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
      </fn>
      <forEach line='848'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ExternalIdentifier'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='850' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='31'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='854'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </fn>
      <elem line='856' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='32'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Name'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='20' rank='1' minImp='0' slots='1' flags='s' line='797' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='797' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.ExternalIdentifier'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='798'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='799'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Label'/>
        </vc>
       </filter>
      </fn>
      <att line='800' name='Label'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <cast as='xs:untypedAtomic' emptiable='0'>
         <fn name='string-join'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <data>
            <filter flags='b'>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <cast as='xs:string' emptiable='1'>
               <attVal name='Q{}key' chk='0'/>
              </cast>
              <str val='Label'/>
             </vc>
            </filter>
           </data>
          </convert>
          <str val=' '/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line='802'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Type'/>
        </vc>
       </filter>
      </fn>
      <elem line='804' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Type'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='807'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherType'/>
        </vc>
       </filter>
      </fn>
      <elem line='809' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OtherType'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='812'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Value'/>
        </vc>
       </filter>
      </fn>
      <elem line='814' name='Value' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Value'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='19' rank='1' minImp='0' slots='1' flags='s' line='683' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='683' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.ElectionReport'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='684'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='685'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Election'/>
        </vc>
       </filter>
      </fn>
      <forEach line='686'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Election'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='688' name='Election' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='33'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='692'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
      </fn>
      <forEach line='693'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ExternalIdentifier'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='695' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='34'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='699'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Format'/>
        </vc>
       </filter>
      </fn>
      <elem line='701' name='Format' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Format'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='704'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='GeneratedDate'/>
        </vc>
       </filter>
      </fn>
      <elem line='706' name='GeneratedDate' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='GeneratedDate'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='709'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='GpUnit'/>
        </vc>
       </filter>
      </fn>
      <forEach line='710'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='GpUnit'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='712' name='GpUnit' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='35'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='716'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Header'/>
        </vc>
       </filter>
      </fn>
      <forEach line='717'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Header'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='719' name='Header' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='36'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='723'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Issuer'/>
        </vc>
       </filter>
      </fn>
      <elem line='725' name='Issuer' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Issuer'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='728'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='IssuerAbbreviation'/>
        </vc>
       </filter>
      </fn>
      <elem line='730' name='IssuerAbbreviation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='IssuerAbbreviation'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='733'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='IsTest'/>
        </vc>
       </filter>
      </fn>
      <elem line='735' name='IsTest' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='IsTest'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='738'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Notes'/>
        </vc>
       </filter>
      </fn>
      <elem line='740' name='Notes' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Notes'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='743'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Office'/>
        </vc>
       </filter>
      </fn>
      <forEach line='744'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Office'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='746' name='Office' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='37'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='750'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OfficeGroup'/>
        </vc>
       </filter>
      </fn>
      <forEach line='751'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='OfficeGroup'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='753' name='OfficeGroup' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='38'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='757'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Party'/>
        </vc>
       </filter>
      </fn>
      <forEach line='758'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Party'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='760' name='Party' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='39'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='764'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Person'/>
        </vc>
       </filter>
      </fn>
      <forEach line='765'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Person'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='767' name='Person' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='40'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='771'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='SequenceStart'/>
        </vc>
       </filter>
      </fn>
      <elem line='773' name='SequenceStart' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='SequenceStart'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='776'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='SequenceEnd'/>
        </vc>
       </filter>
      </fn>
      <elem line='778' name='SequenceEnd' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='SequenceEnd'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='781'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Status'/>
        </vc>
       </filter>
      </fn>
      <elem line='783' name='Status' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Status'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='786'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='TestType'/>
        </vc>
       </filter>
      </fn>
      <elem line='788' name='TestType' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='TestType'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='791'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='VendorApplicationId'/>
        </vc>
       </filter>
      </fn>
      <elem line='793' name='VendorApplicationId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='VendorApplicationId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='18' rank='1' minImp='0' slots='1' flags='s' line='660' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='660' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.ElectionAdministration'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='661'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='662'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContactInformation'/>
        </vc>
       </filter>
      </fn>
      <elem line='664' name='ContactInformation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='41'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ContactInformation'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='667'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ElectionOfficialPersonIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='669' name='ElectionOfficialPersonIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='674' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='670' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='ElectionOfficialPersonIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='671'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='677'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </fn>
      <elem line='679' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Name'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='17' rank='1' minImp='0' slots='1' flags='s' line='580' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='580' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.Election'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='581'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='582'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotCounts'/>
        </vc>
       </filter>
      </fn>
      <forEach line='583'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='BallotCounts'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='585' name='BallotCounts' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='42'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='589'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotStyle'/>
        </vc>
       </filter>
      </fn>
      <forEach line='590'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='BallotStyle'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='592' name='BallotStyle' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='43'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='596'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Candidate'/>
        </vc>
       </filter>
      </fn>
      <forEach line='597'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Candidate'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='599' name='Candidate' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='44'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='603'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContactInformation'/>
        </vc>
       </filter>
      </fn>
      <elem line='605' name='ContactInformation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='45'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ContactInformation'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='608'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Contest'/>
        </vc>
       </filter>
      </fn>
      <forEach line='609'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Contest'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='611' name='Contest' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='46'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='615'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CountStatus'/>
        </vc>
       </filter>
      </fn>
      <forEach line='616'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='CountStatus'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='618' name='CountStatus' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='47'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='622'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ElectionScopeId'/>
        </vc>
       </filter>
      </fn>
      <elem line='624' name='ElectionScopeId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='ElectionScopeId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='627'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
      </fn>
      <forEach line='628'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ExternalIdentifier'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='630' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='48'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='634'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </fn>
      <elem line='636' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='49'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Name'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='639'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='StartDate'/>
        </vc>
       </filter>
      </fn>
      <elem line='641' name='StartDate' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='StartDate'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='644'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='EndDate'/>
        </vc>
       </filter>
      </fn>
      <elem line='646' name='EndDate' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='EndDate'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='649'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Type'/>
        </vc>
       </filter>
      </fn>
      <elem line='651' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Type'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='654'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherType'/>
        </vc>
       </filter>
      </fn>
      <elem line='656' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OtherType'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='16' rank='1' minImp='0' slots='1' flags='s' line='557' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='557' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.DeviceClass'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='558'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='559'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Manufacturer'/>
        </vc>
       </filter>
      </fn>
      <elem line='561' name='Manufacturer' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Manufacturer'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='564'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Model'/>
        </vc>
       </filter>
      </fn>
      <elem line='566' name='Model' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Model'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='569'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Type'/>
        </vc>
       </filter>
      </fn>
      <elem line='571' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Type'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='574'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherType'/>
        </vc>
       </filter>
      </fn>
      <elem line='576' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OtherType'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='14' rank='1' minImp='0' slots='1' flags='s' line='506' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='506' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.CountStatus'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='507'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='508'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Status'/>
        </vc>
       </filter>
      </fn>
      <elem line='510' name='Status' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Status'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='513'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Type'/>
        </vc>
       </filter>
      </fn>
      <elem line='515' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Type'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='518'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherType'/>
        </vc>
       </filter>
      </fn>
      <elem line='520' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OtherType'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='11' rank='1' minImp='0' slots='1' flags='s' line='340' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='340' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.ContactInformation'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='341'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='342'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Label'/>
        </vc>
       </filter>
      </fn>
      <att line='343' name='Label'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <cast as='xs:untypedAtomic' emptiable='0'>
         <fn name='string-join'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <data>
            <filter flags='b'>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <cast as='xs:string' emptiable='1'>
               <attVal name='Q{}key' chk='0'/>
              </cast>
              <str val='Label'/>
             </vc>
            </filter>
           </data>
          </convert>
          <str val=' '/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line='345'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='AddressLine'/>
        </vc>
       </filter>
      </fn>
      <forEach line='346'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='AddressLine'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </slash>
       <elem line='348' name='AddressLine' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <valueOf flags='l'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line='352'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Directions'/>
        </vc>
       </filter>
      </fn>
      <elem line='354' name='Directions' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='50'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Directions'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='357'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Email'/>
        </vc>
       </filter>
      </fn>
      <forEach line='358'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Email'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='360' name='Email' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='51'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='364'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Fax'/>
        </vc>
       </filter>
      </fn>
      <forEach line='365'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Fax'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='367' name='Fax' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='52'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='371'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='LatLng'/>
        </vc>
       </filter>
      </fn>
      <elem line='373' name='LatLng' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='53'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='LatLng'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='376'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </fn>
      <elem line='378' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Name'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='381'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Phone'/>
        </vc>
       </filter>
      </fn>
      <forEach line='382'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Phone'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='384' name='Phone' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='54'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='388'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Schedule'/>
        </vc>
       </filter>
      </fn>
      <forEach line='389'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Schedule'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='391' name='Schedule' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='55'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='395'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Uri'/>
        </vc>
       </filter>
      </fn>
      <forEach line='396'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Uri'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='398' name='Uri' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='56'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='10' rank='1' minImp='0' slots='1' flags='s' line='311' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='311' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.Coalition'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='312'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='313'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='314' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='Coalition'/>
      </att>
     </choose>
     <callT line='316' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Party' bSlot='57'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
     <choose line='319'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContestIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='321' name='ContestIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='326' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='322' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='ContestIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='323'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='329'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PartyIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='331' name='PartyIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='336' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='332' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='PartyIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='333'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='9' rank='1' minImp='0' slots='1' flags='s' line='277' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='277' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.CandidateSelection'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='278'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='279'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='280' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='CandidateSelection'/>
      </att>
     </choose>
     <callT line='282' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}ContestSelection' bSlot='58'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
     <choose line='285'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CandidateIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='287' name='CandidateIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='292' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='288' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='CandidateIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='289'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='295'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='EndorsementPartyIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='297' name='EndorsementPartyIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='302' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='298' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='EndorsementPartyIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='299'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='305'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='IsWriteIn'/>
        </vc>
       </filter>
      </fn>
      <elem line='307' name='IsWriteIn' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='IsWriteIn'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='8' rank='1' minImp='0' slots='1' flags='s' line='233' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='233' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.CandidateContest'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='234'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='235'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='236' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='CandidateContest'/>
      </att>
     </choose>
     <callT line='238' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Contest' bSlot='59'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
     <choose line='241'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='NumberElected'/>
        </vc>
       </filter>
      </fn>
      <elem line='243' name='NumberElected' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='NumberElected'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='246'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='NumberRunoff'/>
        </vc>
       </filter>
      </fn>
      <elem line='248' name='NumberRunoff' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='NumberRunoff'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='251'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OfficeIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='253' name='OfficeIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='258' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='254' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='OfficeIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='255'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='261'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PrimaryPartyIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='263' name='PrimaryPartyIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='268' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='264' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='PrimaryPartyIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='265'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='271'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='VotesAllowed'/>
        </vc>
       </filter>
      </fn>
      <elem line='273' name='VotesAllowed' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='VotesAllowed'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='7' rank='1' minImp='0' slots='1' flags='s' line='172' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='172' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.Candidate'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='173'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <att line='174' name='ObjectId'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='@id'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line='175'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotName'/>
        </vc>
       </filter>
      </fn>
      <elem line='177' name='BallotName' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='60'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='BallotName'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='180'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CampaignSlogan'/>
        </vc>
       </filter>
      </fn>
      <elem line='182' name='CampaignSlogan' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='61'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='CampaignSlogan'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='185'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContactInformation'/>
        </vc>
       </filter>
      </fn>
      <elem line='187' name='ContactInformation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='62'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ContactInformation'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='190'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
      </fn>
      <forEach line='191'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ExternalIdentifier'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='193' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='63'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='197'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='FileDate'/>
        </vc>
       </filter>
      </fn>
      <elem line='199' name='FileDate' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='FileDate'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='202'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='IsIncumbent'/>
        </vc>
       </filter>
      </fn>
      <elem line='204' name='IsIncumbent' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='IsIncumbent'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='207'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='IsTopTicket'/>
        </vc>
       </filter>
      </fn>
      <elem line='209' name='IsTopTicket' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='IsTopTicket'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='212'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PartyId'/>
        </vc>
       </filter>
      </fn>
      <elem line='214' name='PartyId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='PartyId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='217'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PersonId'/>
        </vc>
       </filter>
      </fn>
      <elem line='219' name='PersonId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='PersonId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='222'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PostElectionStatus'/>
        </vc>
       </filter>
      </fn>
      <elem line='224' name='PostElectionStatus' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='PostElectionStatus'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='227'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PreElectionStatus'/>
        </vc>
       </filter>
      </fn>
      <elem line='229' name='PreElectionStatus' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='PreElectionStatus'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='6' rank='1' minImp='0' slots='1' flags='s' line='128' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='128' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.BallotStyle'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='129'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='130'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
      </fn>
      <forEach line='131'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ExternalIdentifier'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='133' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='64'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='137'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='GpUnitIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='139' name='GpUnitIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='144' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='140' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='GpUnitIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='141'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='147'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ImageUri'/>
        </vc>
       </filter>
      </fn>
      <forEach line='148'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ImageUri'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='150' name='ImageUri' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='65'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='154'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OrderedContent'/>
        </vc>
       </filter>
      </fn>
      <forEach line='155'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='OrderedContent'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='157' name='OrderedContent' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='66'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='161'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PartyIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='163' name='PartyIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='168' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='164' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='PartyIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='165'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='5' rank='1' minImp='0' slots='1' flags='s' line='107' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='107' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.BallotMeasureSelection'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='108'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='109'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='110' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='BallotMeasureSelection'/>
      </att>
     </choose>
     <callT line='112' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}ContestSelection' bSlot='67'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
     <choose line='115'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
      </fn>
      <forEach line='116'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ExternalIdentifier'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='118' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='68'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='122'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Selection'/>
        </vc>
       </filter>
      </fn>
      <elem line='124' name='Selection' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='69'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Selection'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='3' rank='1' minImp='0' slots='1' flags='s' line='27' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='27' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.BallotCounts'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='28'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='29'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='30' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='BallotCounts'/>
      </att>
     </choose>
     <callT line='32' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Counts' bSlot='70'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
     <choose line='35'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotsCast'/>
        </vc>
       </filter>
      </fn>
      <elem line='37' name='BallotsCast' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='BallotsCast'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='40'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotsOutstanding'/>
        </vc>
       </filter>
      </fn>
      <elem line='42' name='BallotsOutstanding' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='BallotsOutstanding'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='45'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotsRejected'/>
        </vc>
       </filter>
      </fn>
      <elem line='47' name='BallotsRejected' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='BallotsRejected'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='2' rank='1' minImp='0' slots='1' flags='s' line='20' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='20' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.AnnotatedUri'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='21'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='22'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Annotation'/>
        </vc>
       </filter>
      </fn>
      <att line='23' name='Annotation'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <cast as='xs:untypedAtomic' emptiable='0'>
         <fn name='string-join'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <data>
            <filter flags='b'>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <cast as='xs:string' emptiable='1'>
               <attVal name='Q{}key' chk='0'/>
              </cast>
              <str val='Annotation'/>
             </vc>
            </filter>
           </data>
          </convert>
          <str val=' '/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <valueOf line='25'>
      <fn name='string-join'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <data>
         <filter flags='b'>
          <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
          <vc op='eq' onEmpty='0' comp='CCC'>
           <cast as='xs:string' emptiable='1'>
            <attVal name='Q{}key' chk='0'/>
           </cast>
           <str val='Content'/>
          </vc>
         </filter>
        </data>
       </convert>
       <str val=' '/>
      </fn>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='1' rank='1' minImp='0' slots='1' flags='s' line='13' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='13' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.AnnotatedString'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='14'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='15'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Annotation'/>
        </vc>
       </filter>
      </fn>
      <att line='16' name='Annotation'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <cast as='xs:untypedAtomic' emptiable='0'>
         <fn name='string-join'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <data>
            <filter flags='b'>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <cast as='xs:string' emptiable='1'>
               <attVal name='Q{}key' chk='0'/>
              </cast>
              <str val='Annotation'/>
             </vc>
            </filter>
           </data>
          </convert>
          <str val=' '/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <valueOf line='18'>
      <fn name='string-join'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <data>
         <filter flags='b'>
          <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
          <vc op='eq' onEmpty='0' comp='CCC'>
           <cast as='xs:string' emptiable='1'>
            <attVal name='Q{}key' chk='0'/>
           </cast>
           <str val='Content'/>
          </vc>
         </filter>
        </data>
       </convert>
       <str val=' '/>
      </fn>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='-1.0' seq='33' rank='0' minImp='0' slots='1' flags='s' line='1082' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1082' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.Party'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1083'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <att line='1084' name='ObjectId'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='@id'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line='1085'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Abbreviation'/>
        </vc>
       </filter>
      </fn>
      <elem line='1087' name='Abbreviation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='71'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Abbreviation'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='1090'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Color'/>
        </vc>
       </filter>
      </fn>
      <elem line='1092' name='Color' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Color'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1095'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContactInformation'/>
        </vc>
       </filter>
      </fn>
      <elem line='1097' name='ContactInformation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='72'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ContactInformation'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='1100'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
      </fn>
      <forEach line='1101'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ExternalIdentifier'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='1103' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='73'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='1107'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='IsRecognizedParty'/>
        </vc>
       </filter>
      </fn>
      <elem line='1109' name='IsRecognizedParty' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='IsRecognizedParty'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1112'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='LeaderPersonIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='1114' name='LeaderPersonIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='1119' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='1115' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='LeaderPersonIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='1116'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1122'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='LogoUri'/>
        </vc>
       </filter>
      </fn>
      <forEach line='1123'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='LogoUri'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='1125' name='LogoUri' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='74'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='1129'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </fn>
      <elem line='1131' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='75'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Name'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='1134'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PartyScopeGpUnitIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='1136' name='PartyScopeGpUnitIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='1141' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='1137' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='PartyScopeGpUnitIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='1138'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='1144'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Slogan'/>
        </vc>
       </filter>
      </fn>
      <elem line='1146' name='Slogan' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='76'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Slogan'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='-1.0' seq='29' rank='0' minImp='0' slots='1' flags='s' line='1006' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1006' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.OrderedContent'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <param role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='1007' name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
   </templateRule>
   <templateRule prec='0' prio='-1.0' seq='21' rank='0' minImp='0' slots='1' flags='s' line='818' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='818' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.GpUnit'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='819'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <att line='820' name='ObjectId'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='@id'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line='821'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ComposingGpUnitIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='823' name='ComposingGpUnitIds' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf line='828' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='824' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='ComposingGpUnitIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='825'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='831'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
      </fn>
      <forEach line='832'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ExternalIdentifier'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='834' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='77'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='838'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </fn>
      <elem line='840' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='78'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Name'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='-1.0' seq='15' rank='0' minImp='0' slots='1' flags='s' line='524' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='524' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.Counts'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='525'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='526'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='DeviceClass'/>
        </vc>
       </filter>
      </fn>
      <elem line='528' name='DeviceClass' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='79'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='DeviceClass'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='531'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='GpUnitId'/>
        </vc>
       </filter>
      </fn>
      <elem line='533' name='GpUnitId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='GpUnitId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='536'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='IsSuppressedForPrivacy'/>
        </vc>
       </filter>
      </fn>
      <elem line='538' name='IsSuppressedForPrivacy' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='IsSuppressedForPrivacy'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='541'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Round'/>
        </vc>
       </filter>
      </fn>
      <elem line='543' name='Round' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Round'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='546'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Type'/>
        </vc>
       </filter>
      </fn>
      <elem line='548' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Type'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='551'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherType'/>
        </vc>
       </filter>
      </fn>
      <elem line='553' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OtherType'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='-1.0' seq='13' rank='0' minImp='0' slots='1' flags='s' line='490' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='490' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.ContestSelection'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='491'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <att line='492' name='ObjectId'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='@id'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line='493'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='SequenceOrder'/>
        </vc>
       </filter>
      </fn>
      <elem line='495' name='SequenceOrder' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='SequenceOrder'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='498'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='VoteCounts'/>
        </vc>
       </filter>
      </fn>
      <forEach line='499'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='VoteCounts'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='501' name='VoteCounts' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='80'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='-1.0' seq='12' rank='0' minImp='0' slots='1' flags='s' line='403' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='403' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.Contest'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='404'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <att line='405' name='ObjectId'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='@id'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line='406'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Abbreviation'/>
        </vc>
       </filter>
      </fn>
      <elem line='408' name='Abbreviation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Abbreviation'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='411'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotSubTitle'/>
        </vc>
       </filter>
      </fn>
      <elem line='413' name='BallotSubTitle' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='81'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='BallotSubTitle'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='416'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotTitle'/>
        </vc>
       </filter>
      </fn>
      <elem line='418' name='BallotTitle' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='82'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='BallotTitle'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='421'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContestSelection'/>
        </vc>
       </filter>
      </fn>
      <forEach line='422'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ContestSelection'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='424' name='ContestSelection' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='83'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='428'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CountStatus'/>
        </vc>
       </filter>
      </fn>
      <forEach line='429'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='CountStatus'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='431' name='CountStatus' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='84'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='435'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ElectionDistrictId'/>
        </vc>
       </filter>
      </fn>
      <elem line='437' name='ElectionDistrictId' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='ElectionDistrictId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='440'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ExternalIdentifier'/>
        </vc>
       </filter>
      </fn>
      <forEach line='441'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ExternalIdentifier'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='443' name='ExternalIdentifier' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='85'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='447'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='HasRotation'/>
        </vc>
       </filter>
      </fn>
      <elem line='449' name='HasRotation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='HasRotation'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='452'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </fn>
      <elem line='454' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Name'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='457'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherCounts'/>
        </vc>
       </filter>
      </fn>
      <forEach line='458'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='OtherCounts'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='460' name='OtherCounts' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='86'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='464'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='SequenceOrder'/>
        </vc>
       </filter>
      </fn>
      <elem line='466' name='SequenceOrder' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='SequenceOrder'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='469'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='SubUnitsReported'/>
        </vc>
       </filter>
      </fn>
      <elem line='471' name='SubUnitsReported' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='SubUnitsReported'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='474'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='TotalSubUnits'/>
        </vc>
       </filter>
      </fn>
      <elem line='476' name='TotalSubUnits' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='TotalSubUnits'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='479'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='VoteVariation'/>
        </vc>
       </filter>
      </fn>
      <elem line='481' name='VoteVariation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='VoteVariation'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='484'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherVoteVariation'/>
        </vc>
       </filter>
      </fn>
      <elem line='486' name='OtherVoteVariation' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OtherVoteVariation'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='-1.0' seq='4' rank='0' minImp='0' slots='1' flags='s' line='51' module='err_v2_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='51' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='ElectionResults.BallotMeasureContest'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='52'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='53'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='54' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='BallotMeasureContest'/>
      </att>
     </choose>
     <callT line='56' name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}Contest' bSlot='87'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
     <choose line='59'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ConStatement'/>
        </vc>
       </filter>
      </fn>
      <elem line='61' name='ConStatement' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='88'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ConStatement'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='64'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='EffectOfAbstain'/>
        </vc>
       </filter>
      </fn>
      <elem line='66' name='EffectOfAbstain' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='89'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='EffectOfAbstain'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='69'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='FullText'/>
        </vc>
       </filter>
      </fn>
      <elem line='71' name='FullText' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='90'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='FullText'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='74'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='InfoUri'/>
        </vc>
       </filter>
      </fn>
      <forEach line='75'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='InfoUri'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='77' name='InfoUri' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
        <applyT bSlot='91'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='81'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PassageThreshold'/>
        </vc>
       </filter>
      </fn>
      <elem line='83' name='PassageThreshold' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='92'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='PassageThreshold'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='86'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ProStatement'/>
        </vc>
       </filter>
      </fn>
      <elem line='88' name='ProStatement' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='93'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ProStatement'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='91'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='SummaryText'/>
        </vc>
       </filter>
      </fn>
      <elem line='93' name='SummaryText' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <applyT bSlot='94'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='SummaryText'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='96'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Type'/>
        </vc>
       </filter>
      </fn>
      <elem line='98' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Type'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='101'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherType'/>
        </vc>
       </filter>
      </fn>
      <elem line='103' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='d'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OtherType'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='1.0' seq='0' rank='2' minImp='0' slots='2' flags='s' line='5' module='err_v2_json2xml.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2005/xpath-functions}root)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;root&#39;;'/>
    <let role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='6' var='Q{}xml' as='document-node()' slot='1' eval='16'>
     <doc line='7' validation='preserve'>
      <elem line='8' name='ElectionReport' nsuri='http://itl.nist.gov/ns/voting/1500-100/v2' flags='dl'>
       <applyT bSlot='95'>
        <fn role='select' name='json-to-xml'>
         <cvUntyped to='xs:string'>
          <data>
           <dot type='element(Q{http://www.w3.org/2005/xpath-functions}root)'/>
          </data>
         </cvUntyped>
        </fn>
       </applyT>
      </elem>
     </doc>
     <copyOf line='11' flags='vc'>
      <varRef name='Q{}xml' slot='1'/>
     </copyOf>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id='46' binds=''>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-100/v2}AnnotatedString' flags='os' line='13' module='err_v2_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-100/v2 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-100/v2 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='14'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='15'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Annotation'/>
       </vc>
      </filter>
     </fn>
     <att line='16' name='Annotation'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <slash simple='1'>
             <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
              <dot flags='a'/>
             </treat>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            </slash>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Annotation'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <valueOf line='18'>
     <fn name='string-join'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <data>
        <filter flags='b'>
         <slash simple='1'>
          <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
           <dot flags='a'/>
          </treat>
          <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         </slash>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Content'/>
         </vc>
        </filter>
       </data>
      </convert>
      <str val=' '/>
     </fn>
    </valueOf>
   </sequence>
  </template>
 </co>
 <overridden/>
 <output>
  <property name='method' value='xml'/>
  <property name='indent' value='yes'/>
  <property name='encoding' value='UTF-8'/>
  <property name='version' value='1.0'/>
  <property name='{http://saxon.sf.net/}stylesheet-version' value='30'/>
 </output>
 <decimalFormat/>
</package>
<?Σ 63e47c38?>
