<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:java-type="http://saxon.sf.net/java-type" version="30" packageVersion="1" saxonVersion="9.8.0.12" target="JS" targetVersion="1" relocatable="true">
 <co id="0" binds="1 2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}ReportingDevice" flags="os" line="1271" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1272">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="1273">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="ReportingDevice"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="1276" name="cdf:GpUnit" bSlot="0">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
    <choose line="1279">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="DeviceClass"/>
       </gc>
      </filter>
     </fn>
     <elem line="1281" name="DeviceClass" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="1">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="DeviceClass"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="1284">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="SerialNumber"/>
       </gc>
      </filter>
     </fn>
     <elem line="1286" name="SerialNumber" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="SerialNumber"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="3" binds="1 2 2 2 2 2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}ReportingUnit" flags="os" line="1290" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1291">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="1292">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="ReportingUnit"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="1295" name="cdf:GpUnit" bSlot="0">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
    <choose line="1298">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="AuthorityIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="1300" name="AuthorityIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf line="1305" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="1301" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="AuthorityIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="1302">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1308">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ContactInformation"/>
       </gc>
      </filter>
     </fn>
     <elem line="1310" name="ContactInformation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="1">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContactInformation"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="1313">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="CountStatus"/>
       </gc>
      </filter>
     </fn>
     <forEach line="1314">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CountStatus"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="1316" name="CountStatus" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="2">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="1320">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ElectionAdministration"/>
       </gc>
      </filter>
     </fn>
     <elem line="1322" name="ElectionAdministration" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="3">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ElectionAdministration"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="1325">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="IsDistricted"/>
       </gc>
      </filter>
     </fn>
     <elem line="1327" name="IsDistricted" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="IsDistricted"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1330">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="IsMailOnly"/>
       </gc>
      </filter>
     </fn>
     <elem line="1332" name="IsMailOnly" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="IsMailOnly"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1335">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Number"/>
       </gc>
      </filter>
     </fn>
     <elem line="1337" name="Number" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Number"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1340">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="PartyRegistration"/>
       </gc>
      </filter>
     </fn>
     <forEach line="1341">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PartyRegistration"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="1343" name="PartyRegistration" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="4">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="1347">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="SpatialDimension"/>
       </gc>
      </filter>
     </fn>
     <elem line="1349" name="SpatialDimension" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="5">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="SpatialDimension"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="1352">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="SubUnitsReported"/>
       </gc>
      </filter>
     </fn>
     <elem line="1354" name="SubUnitsReported" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="SubUnitsReported"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1357">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="TotalSubUnits"/>
       </gc>
      </filter>
     </fn>
     <elem line="1359" name="TotalSubUnits" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="TotalSubUnits"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1362">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Type"/>
       </gc>
      </filter>
     </fn>
     <elem line="1364" name="Type" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Type"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1367">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OtherType"/>
       </gc>
      </filter>
     </fn>
     <elem line="1369" name="OtherType" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OtherType"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1372">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="VotersParticipated"/>
       </gc>
      </filter>
     </fn>
     <elem line="1374" name="VotersParticipated" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="VotersParticipated"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1377">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="VotersRegistered"/>
       </gc>
      </filter>
     </fn>
     <elem line="1379" name="VotersRegistered" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="VotersRegistered"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="4" binds="2 2 2 2 2 2 2 2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}Election" flags="os" line="580" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="581">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="582">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="BallotCounts"/>
       </gc>
      </filter>
     </fn>
     <forEach line="583">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotCounts"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="585" name="BallotCounts" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="589">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="BallotStyle"/>
       </gc>
      </filter>
     </fn>
     <forEach line="590">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotStyle"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="592" name="BallotStyle" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="1">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="596">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Candidate"/>
       </gc>
      </filter>
     </fn>
     <forEach line="597">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Candidate"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="599" name="Candidate" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="2">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="603">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ContactInformation"/>
       </gc>
      </filter>
     </fn>
     <elem line="605" name="ContactInformation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="3">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContactInformation"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="608">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Contest"/>
       </gc>
      </filter>
     </fn>
     <forEach line="609">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Contest"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="611" name="Contest" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="4">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="615">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="CountStatus"/>
       </gc>
      </filter>
     </fn>
     <forEach line="616">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CountStatus"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="618" name="CountStatus" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="5">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="622">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ElectionScopeId"/>
       </gc>
      </filter>
     </fn>
     <elem line="624" name="ElectionScopeId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="ElectionScopeId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="627">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ExternalIdentifier"/>
       </gc>
      </filter>
     </fn>
     <forEach line="628">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="630" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="6">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="634">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Name"/>
       </gc>
      </filter>
     </fn>
     <elem line="636" name="Name" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="7">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="639">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="StartDate"/>
       </gc>
      </filter>
     </fn>
     <elem line="641" name="StartDate" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="StartDate"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="644">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="EndDate"/>
       </gc>
      </filter>
     </fn>
     <elem line="646" name="EndDate" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="EndDate"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="649">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Type"/>
       </gc>
      </filter>
     </fn>
     <elem line="651" name="Type" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Type"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="654">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OtherType"/>
       </gc>
      </filter>
     </fn>
     <elem line="656" name="OtherType" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OtherType"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="5" binds="2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}Schedule" flags="os" line="1402" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1403">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="1404">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Label"/>
       </gc>
      </filter>
     </fn>
     <att line="1405" name="Label">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <slash simple="1">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
              <dot flags="a"/>
             </treat>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Label"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <choose line="1407">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Hours"/>
       </gc>
      </filter>
     </fn>
     <forEach line="1408">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Hours"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="1410" name="Hours" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="1414">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="IsOnlyByAppointment"/>
       </gc>
      </filter>
     </fn>
     <elem line="1416" name="IsOnlyByAppointment" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="IsOnlyByAppointment"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1419">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="IsOrByAppointment"/>
       </gc>
      </filter>
     </fn>
     <elem line="1421" name="IsOrByAppointment" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="IsOrByAppointment"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1424">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="IsSubjectToChange"/>
       </gc>
      </filter>
     </fn>
     <elem line="1426" name="IsSubjectToChange" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="IsSubjectToChange"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1429">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="StartDate"/>
       </gc>
      </filter>
     </fn>
     <elem line="1431" name="StartDate" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="StartDate"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1434">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="EndDate"/>
       </gc>
      </filter>
     </fn>
     <elem line="1436" name="EndDate" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="EndDate"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="6" binds="2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}OtherCounts" flags="os" line="1054" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1055">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="1056">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="DeviceClass"/>
       </gc>
      </filter>
     </fn>
     <elem line="1058" name="DeviceClass" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="0">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="DeviceClass"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="1061">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="GpUnitId"/>
       </gc>
      </filter>
     </fn>
     <elem line="1063" name="GpUnitId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="GpUnitId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1066">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Overvotes"/>
       </gc>
      </filter>
     </fn>
     <elem line="1068" name="Overvotes" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Overvotes"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1071">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Undervotes"/>
       </gc>
      </filter>
     </fn>
     <elem line="1073" name="Undervotes" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Undervotes"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1076">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="WriteIns"/>
       </gc>
      </filter>
     </fn>
     <elem line="1078" name="WriteIns" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="WriteIns"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="7" binds="2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}OfficeGroup" flags="os" line="978" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="979">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="980">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Label"/>
       </gc>
      </filter>
     </fn>
     <att line="981" name="Label">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <slash simple="1">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
              <dot flags="a"/>
             </treat>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Label"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <choose line="983">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Name"/>
       </gc>
      </filter>
     </fn>
     <elem line="985" name="Name" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Name"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="988">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OfficeIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="990" name="OfficeIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf line="995" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="991" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="OfficeIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="992">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="998">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="SubOfficeGroup"/>
       </gc>
      </filter>
     </fn>
     <forEach line="999">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="SubOfficeGroup"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="1001" name="SubOfficeGroup" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="8" binds="2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}ElectionAdministration" flags="os" line="660" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="661">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="662">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ContactInformation"/>
       </gc>
      </filter>
     </fn>
     <elem line="664" name="ContactInformation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="0">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContactInformation"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="667">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ElectionOfficialPersonIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="669" name="ElectionOfficialPersonIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf line="674" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="670" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="ElectionOfficialPersonIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="671">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="677">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Name"/>
       </gc>
      </filter>
     </fn>
     <elem line="679" name="Name" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Name"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="9" binds="">
  <template name="Q{NIST_V2_election_results_reporting.xsd}DeviceClass" flags="os" line="557" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="558">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="559">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Manufacturer"/>
       </gc>
      </filter>
     </fn>
     <elem line="561" name="Manufacturer" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Manufacturer"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="564">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Model"/>
       </gc>
      </filter>
     </fn>
     <elem line="566" name="Model" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Model"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="569">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Type"/>
       </gc>
      </filter>
     </fn>
     <elem line="571" name="Type" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Type"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="574">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OtherType"/>
       </gc>
      </filter>
     </fn>
     <elem line="576" name="OtherType" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OtherType"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="10" binds="2 2 2 2 2 2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}Contest" flags="os" line="403" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="404">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <att line="405" name="ObjectId">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="@id"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line="406">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Abbreviation"/>
       </gc>
      </filter>
     </fn>
     <elem line="408" name="Abbreviation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Abbreviation"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="411">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="BallotSubTitle"/>
       </gc>
      </filter>
     </fn>
     <elem line="413" name="BallotSubTitle" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="0">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotSubTitle"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="416">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="BallotTitle"/>
       </gc>
      </filter>
     </fn>
     <elem line="418" name="BallotTitle" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="1">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotTitle"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="421">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ContestSelection"/>
       </gc>
      </filter>
     </fn>
     <forEach line="422">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContestSelection"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="424" name="ContestSelection" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="2">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="428">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="CountStatus"/>
       </gc>
      </filter>
     </fn>
     <forEach line="429">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CountStatus"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="431" name="CountStatus" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="3">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="435">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ElectionDistrictId"/>
       </gc>
      </filter>
     </fn>
     <elem line="437" name="ElectionDistrictId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="ElectionDistrictId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="440">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ExternalIdentifier"/>
       </gc>
      </filter>
     </fn>
     <forEach line="441">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="443" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="4">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="447">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="HasRotation"/>
       </gc>
      </filter>
     </fn>
     <elem line="449" name="HasRotation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="HasRotation"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="452">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Name"/>
       </gc>
      </filter>
     </fn>
     <elem line="454" name="Name" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Name"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="457">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OtherCounts"/>
       </gc>
      </filter>
     </fn>
     <forEach line="458">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherCounts"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="460" name="OtherCounts" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="5">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="464">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="SequenceOrder"/>
       </gc>
      </filter>
     </fn>
     <elem line="466" name="SequenceOrder" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="SequenceOrder"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="469">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="SubUnitsReported"/>
       </gc>
      </filter>
     </fn>
     <elem line="471" name="SubUnitsReported" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="SubUnitsReported"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="474">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="TotalSubUnits"/>
       </gc>
      </filter>
     </fn>
     <elem line="476" name="TotalSubUnits" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="TotalSubUnits"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="479">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="VoteVariation"/>
       </gc>
      </filter>
     </fn>
     <elem line="481" name="VoteVariation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="VoteVariation"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="484">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OtherVoteVariation"/>
       </gc>
      </filter>
     </fn>
     <elem line="486" name="OtherVoteVariation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OtherVoteVariation"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="11" binds="">
  <template name="Q{NIST_V2_election_results_reporting.xsd}AnnotatedUri" flags="os" line="20" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="21">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="22">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Annotation"/>
       </gc>
      </filter>
     </fn>
     <att line="23" name="Annotation">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <slash simple="1">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
              <dot flags="a"/>
             </treat>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Annotation"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <valueOf line="25">
     <fn name="string-join">
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <filter flags="b">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         </slash>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Content"/>
         </gc>
        </filter>
       </data>
      </convert>
      <str val=" "/>
     </fn>
    </valueOf>
   </sequence>
  </template>
 </co>
 <co id="12" binds="">
  <template name="Q{NIST_V2_election_results_reporting.xsd}Term" flags="os" line="1468" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1469">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="1470">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Label"/>
       </gc>
      </filter>
     </fn>
     <att line="1471" name="Label">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <slash simple="1">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
              <dot flags="a"/>
             </treat>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Label"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <choose line="1473">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="StartDate"/>
       </gc>
      </filter>
     </fn>
     <elem line="1475" name="StartDate" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="StartDate"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1478">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="EndDate"/>
       </gc>
      </filter>
     </fn>
     <elem line="1480" name="EndDate" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="EndDate"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1483">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Type"/>
       </gc>
      </filter>
     </fn>
     <elem line="1485" name="Type" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Type"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="13" binds="2 2 2 2 2 2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}Party" flags="os" line="1082" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1083">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <att line="1084" name="ObjectId">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="@id"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line="1085">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Abbreviation"/>
       </gc>
      </filter>
     </fn>
     <elem line="1087" name="Abbreviation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="0">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Abbreviation"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="1090">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Color"/>
       </gc>
      </filter>
     </fn>
     <elem line="1092" name="Color" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Color"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1095">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ContactInformation"/>
       </gc>
      </filter>
     </fn>
     <elem line="1097" name="ContactInformation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="1">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContactInformation"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="1100">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ExternalIdentifier"/>
       </gc>
      </filter>
     </fn>
     <forEach line="1101">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="1103" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="2">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="1107">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="IsRecognizedParty"/>
       </gc>
      </filter>
     </fn>
     <elem line="1109" name="IsRecognizedParty" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="IsRecognizedParty"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1112">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="LeaderPersonIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="1114" name="LeaderPersonIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf line="1119" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="1115" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="LeaderPersonIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="1116">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1122">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="LogoUri"/>
       </gc>
      </filter>
     </fn>
     <forEach line="1123">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="LogoUri"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="1125" name="LogoUri" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="3">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="1129">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Name"/>
       </gc>
      </filter>
     </fn>
     <elem line="1131" name="Name" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="4">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="1134">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="PartyScopeGpUnitIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="1136" name="PartyScopeGpUnitIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf line="1141" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="1137" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="PartyScopeGpUnitIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="1138">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1144">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Slogan"/>
       </gc>
      </filter>
     </fn>
     <elem line="1146" name="Slogan" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="5">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Slogan"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="14" binds="">
  <template name="Q{NIST_V2_election_results_reporting.xsd}Hours" flags="os" line="860" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="861">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="862">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Label"/>
       </gc>
      </filter>
     </fn>
     <att line="863" name="Label">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <slash simple="1">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
              <dot flags="a"/>
             </treat>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Label"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <choose line="865">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Day"/>
       </gc>
      </filter>
     </fn>
     <elem line="867" name="Day" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Day"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="870">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="StartTime"/>
       </gc>
      </filter>
     </fn>
     <elem line="872" name="StartTime" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="StartTime"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="875">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="EndTime"/>
       </gc>
      </filter>
     </fn>
     <elem line="877" name="EndTime" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="EndTime"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="15" binds="">
  <template name="Q{NIST_V2_election_results_reporting.xsd}CountStatus" flags="os" line="506" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="507">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="508">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Status"/>
       </gc>
      </filter>
     </fn>
     <elem line="510" name="Status" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Status"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="513">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Type"/>
       </gc>
      </filter>
     </fn>
     <elem line="515" name="Type" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Type"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="518">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OtherType"/>
       </gc>
      </filter>
     </fn>
     <elem line="520" name="OtherType" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OtherType"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="16" binds="2">
  <template name="Q{}start" flags="os" line="5" module="err_v2_json2xml.xsl" slots="2">
   <let role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="6" var="xml" as="document-node()" slot="0" eval="7">
    <doc line="8" validation="preserve">
     <elem name="ElectionReport" nsuri="NIST_V2_election_results_reporting.xsd" flags="dl">
      <applyT bSlot="0">
       <fn role="select" name="json-to-xml">
        <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:json-to-xml">
         <check card="?" diag="0|0||fn:json-to-xml">
          <cvUntyped to="xs:string">
           <data>
            <dot flags="a"/>
           </data>
          </cvUntyped>
         </check>
        </treat>
       </fn>
      </applyT>
     </elem>
    </doc>
    <copyOf line="11" flags="vc">
     <varRef name="xml" slot="0"/>
    </copyOf>
   </let>
  </template>
 </co>
 <co id="17" binds="2 2 2 2 2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}Person" flags="os" line="1191" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1192">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <att line="1193" name="ObjectId">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="@id"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line="1194">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ContactInformation"/>
       </gc>
      </filter>
     </fn>
     <forEach line="1195">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContactInformation"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="1197" name="ContactInformation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="1201">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="DateOfBirth"/>
       </gc>
      </filter>
     </fn>
     <elem line="1203" name="DateOfBirth" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="DateOfBirth"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1206">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ExternalIdentifier"/>
       </gc>
      </filter>
     </fn>
     <forEach line="1207">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="1209" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="1">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="1213">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="FirstName"/>
       </gc>
      </filter>
     </fn>
     <elem line="1215" name="FirstName" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="FirstName"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1218">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="FullName"/>
       </gc>
      </filter>
     </fn>
     <elem line="1220" name="FullName" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="2">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="FullName"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="1223">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Gender"/>
       </gc>
      </filter>
     </fn>
     <elem line="1225" name="Gender" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Gender"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1228">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="LastName"/>
       </gc>
      </filter>
     </fn>
     <elem line="1230" name="LastName" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="LastName"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1233">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="MiddleName"/>
       </gc>
      </filter>
     </fn>
     <forEach line="1234">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="MiddleName"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
      </slash>
      <elem line="1236" name="MiddleName" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line="1240">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Nickname"/>
       </gc>
      </filter>
     </fn>
     <elem line="1242" name="Nickname" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Nickname"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1245">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="PartyId"/>
       </gc>
      </filter>
     </fn>
     <elem line="1247" name="PartyId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="PartyId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1250">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Prefix"/>
       </gc>
      </filter>
     </fn>
     <elem line="1252" name="Prefix" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Prefix"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1255">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Profession"/>
       </gc>
      </filter>
     </fn>
     <elem line="1257" name="Profession" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="3">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Profession"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="1260">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Suffix"/>
       </gc>
      </filter>
     </fn>
     <elem line="1262" name="Suffix" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Suffix"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1265">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Title"/>
       </gc>
      </filter>
     </fn>
     <elem line="1267" name="Title" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="4">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Title"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="18" binds="2 2 2 2 2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}Office" flags="os" line="922" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="923">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <att line="924" name="ObjectId">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="@id"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line="925">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ContactInformation"/>
       </gc>
      </filter>
     </fn>
     <elem line="927" name="ContactInformation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="0">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContactInformation"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="930">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Description"/>
       </gc>
      </filter>
     </fn>
     <elem line="932" name="Description" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="1">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Description"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="935">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ElectionDistrictId"/>
       </gc>
      </filter>
     </fn>
     <elem line="937" name="ElectionDistrictId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="ElectionDistrictId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="940">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ExternalIdentifier"/>
       </gc>
      </filter>
     </fn>
     <forEach line="941">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="943" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="2">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="947">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="FilingDeadline"/>
       </gc>
      </filter>
     </fn>
     <elem line="949" name="FilingDeadline" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="FilingDeadline"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="952">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="IsPartisan"/>
       </gc>
      </filter>
     </fn>
     <elem line="954" name="IsPartisan" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="IsPartisan"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="957">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Name"/>
       </gc>
      </filter>
     </fn>
     <elem line="959" name="Name" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="3">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="962">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OfficeHolderPersonIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="964" name="OfficeHolderPersonIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf line="969" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="965" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="OfficeHolderPersonIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="966">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="972">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Term"/>
       </gc>
      </filter>
     </fn>
     <elem line="974" name="Term" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="4">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Term"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="19" binds="">
  <template name="Q{NIST_V2_election_results_reporting.xsd}LatLng" flags="os" line="901" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="902">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="903">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Label"/>
       </gc>
      </filter>
     </fn>
     <att line="904" name="Label">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <slash simple="1">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
              <dot flags="a"/>
             </treat>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Label"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <choose line="906">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Latitude"/>
       </gc>
      </filter>
     </fn>
     <elem line="908" name="Latitude" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Latitude"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="911">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Longitude"/>
       </gc>
      </filter>
     </fn>
     <elem line="913" name="Longitude" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Longitude"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="916">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Source"/>
       </gc>
      </filter>
     </fn>
     <elem line="918" name="Source" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Source"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="20" binds="2 2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}Header" flags="os" line="844" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="845">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <att line="846" name="ObjectId">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="@id"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line="847">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ExternalIdentifier"/>
       </gc>
      </filter>
     </fn>
     <forEach line="848">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="850" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="854">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Name"/>
       </gc>
      </filter>
     </fn>
     <elem line="856" name="Name" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="1">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="1" binds="2 2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}GpUnit" flags="os" line="818" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="819">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <att line="820" name="ObjectId">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="@id"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line="821">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ComposingGpUnitIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="823" name="ComposingGpUnitIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf line="828" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="824" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="ComposingGpUnitIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="825">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="831">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ExternalIdentifier"/>
       </gc>
      </filter>
     </fn>
     <forEach line="832">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="834" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="838">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Name"/>
       </gc>
      </filter>
     </fn>
     <elem line="840" name="Name" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="1">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="21" binds="2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}Counts" flags="os" line="524" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="525">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="526">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="DeviceClass"/>
       </gc>
      </filter>
     </fn>
     <elem line="528" name="DeviceClass" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="0">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="DeviceClass"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="531">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="GpUnitId"/>
       </gc>
      </filter>
     </fn>
     <elem line="533" name="GpUnitId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="GpUnitId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="536">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="IsSuppressedForPrivacy"/>
       </gc>
      </filter>
     </fn>
     <elem line="538" name="IsSuppressedForPrivacy" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="IsSuppressedForPrivacy"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="541">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Round"/>
       </gc>
      </filter>
     </fn>
     <elem line="543" name="Round" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Round"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="546">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Type"/>
       </gc>
      </filter>
     </fn>
     <elem line="548" name="Type" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Type"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="551">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OtherType"/>
       </gc>
      </filter>
     </fn>
     <elem line="553" name="OtherType" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OtherType"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="22" binds="23 2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}OrderedHeader" flags="os" line="1033" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1034">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="1035">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="OrderedHeader"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="1038" name="cdf:OrderedContent" bSlot="0">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
    <choose line="1041">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="HeaderId"/>
       </gc>
      </filter>
     </fn>
     <elem line="1043" name="HeaderId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="HeaderId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1046">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OrderedContent"/>
       </gc>
      </filter>
     </fn>
     <forEach line="1047">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OrderedContent"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="1049" name="OrderedContent" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="1">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="24" binds="">
  <template name="Q{NIST_V2_election_results_reporting.xsd}ExternalIdentifier" flags="os" line="797" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="798">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="799">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Label"/>
       </gc>
      </filter>
     </fn>
     <att line="800" name="Label">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <slash simple="1">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
              <dot flags="a"/>
             </treat>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Label"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <choose line="802">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Type"/>
       </gc>
      </filter>
     </fn>
     <elem line="804" name="Type" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Type"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="807">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OtherType"/>
       </gc>
      </filter>
     </fn>
     <elem line="809" name="OtherType" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OtherType"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="812">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Value"/>
       </gc>
      </filter>
     </fn>
     <elem line="814" name="Value" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Value"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="25" binds="">
  <template name="Q{NIST_V2_election_results_reporting.xsd}SpatialExtent" flags="os" line="1455" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1456">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="1457">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Coordinates"/>
       </gc>
      </filter>
     </fn>
     <elem line="1459" name="Coordinates" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Coordinates"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1462">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Format"/>
       </gc>
      </filter>
     </fn>
     <elem line="1464" name="Format" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Format"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="23" binds="">
  <template name="Q{NIST_V2_election_results_reporting.xsd}OrderedContent" flags="os" line="1006" module="err_v2_json2xml.xsl" slots="1">
   <param role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1007" name="Q{}set_type" slot="0">
    <true role="select"/>
    <supplied role="conversion" slot="0"/>
   </param>
  </template>
 </co>
 <co id="26" binds="">
  <template name="Q{NIST_V2_election_results_reporting.xsd}LanguageString" flags="os" line="894" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="895">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="896">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Language"/>
       </gc>
      </filter>
     </fn>
     <att line="897" name="Language">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <slash simple="1">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
              <dot flags="a"/>
             </treat>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Language"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <valueOf line="899">
     <fn name="string-join">
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <filter flags="b">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         </slash>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Content"/>
         </gc>
        </filter>
       </data>
      </convert>
      <str val=" "/>
     </fn>
    </valueOf>
   </sequence>
  </template>
 </co>
 <co id="27" binds="2 2 2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}BallotStyle" flags="os" line="128" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="129">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="130">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ExternalIdentifier"/>
       </gc>
      </filter>
     </fn>
     <forEach line="131">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="133" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="137">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="GpUnitIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="139" name="GpUnitIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf line="144" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="140" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="GpUnitIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="141">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="147">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ImageUri"/>
       </gc>
      </filter>
     </fn>
     <forEach line="148">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ImageUri"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="150" name="ImageUri" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="1">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="154">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OrderedContent"/>
       </gc>
      </filter>
     </fn>
     <forEach line="155">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OrderedContent"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="157" name="OrderedContent" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="2">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="161">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="PartyIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="163" name="PartyIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf line="168" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="164" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="PartyIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="165">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="28" binds="">
  <template name="Q{NIST_V2_election_results_reporting.xsd}AnnotatedString" flags="os" line="13" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="14">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="15">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Annotation"/>
       </gc>
      </filter>
     </fn>
     <att line="16" name="Annotation">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <slash simple="1">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
              <dot flags="a"/>
             </treat>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Annotation"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <valueOf line="18">
     <fn name="string-join">
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <filter flags="b">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         </slash>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Content"/>
         </gc>
        </filter>
       </data>
      </convert>
      <str val=" "/>
     </fn>
    </valueOf>
   </sequence>
  </template>
 </co>
 <co id="29" binds="13">
  <template name="Q{NIST_V2_election_results_reporting.xsd}Coalition" flags="os" line="311" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="312">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="313">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="Coalition"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="316" name="cdf:Party" bSlot="0">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
    <choose line="319">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ContestIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="321" name="ContestIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf line="326" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="322" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="ContestIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="323">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="329">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="PartyIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="331" name="PartyIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf line="336" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="332" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="PartyIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="333">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="30" binds="2 2 2 2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}Candidate" flags="os" line="172" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="173">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <att line="174" name="ObjectId">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="@id"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line="175">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="BallotName"/>
       </gc>
      </filter>
     </fn>
     <elem line="177" name="BallotName" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="0">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotName"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="180">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="CampaignSlogan"/>
       </gc>
      </filter>
     </fn>
     <elem line="182" name="CampaignSlogan" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="1">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CampaignSlogan"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="185">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ContactInformation"/>
       </gc>
      </filter>
     </fn>
     <elem line="187" name="ContactInformation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="2">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContactInformation"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="190">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ExternalIdentifier"/>
       </gc>
      </filter>
     </fn>
     <forEach line="191">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="193" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="3">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="197">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="FileDate"/>
       </gc>
      </filter>
     </fn>
     <elem line="199" name="FileDate" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="FileDate"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="202">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="IsIncumbent"/>
       </gc>
      </filter>
     </fn>
     <elem line="204" name="IsIncumbent" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="IsIncumbent"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="207">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="IsTopTicket"/>
       </gc>
      </filter>
     </fn>
     <elem line="209" name="IsTopTicket" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="IsTopTicket"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="212">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="PartyId"/>
       </gc>
      </filter>
     </fn>
     <elem line="214" name="PartyId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="PartyId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="217">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="PersonId"/>
       </gc>
      </filter>
     </fn>
     <elem line="219" name="PersonId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="PersonId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="222">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="PostElectionStatus"/>
       </gc>
      </filter>
     </fn>
     <elem line="224" name="PostElectionStatus" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="PostElectionStatus"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="227">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="PreElectionStatus"/>
       </gc>
      </filter>
     </fn>
     <elem line="229" name="PreElectionStatus" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="PreElectionStatus"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="31" binds="10 2 2 2 2 2 2 2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}BallotMeasureContest" flags="os" line="51" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="52">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="53">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="BallotMeasureContest"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="56" name="cdf:Contest" bSlot="0">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
    <choose line="59">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ConStatement"/>
       </gc>
      </filter>
     </fn>
     <elem line="61" name="ConStatement" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="1">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ConStatement"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="64">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="EffectOfAbstain"/>
       </gc>
      </filter>
     </fn>
     <elem line="66" name="EffectOfAbstain" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="2">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="EffectOfAbstain"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="69">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="FullText"/>
       </gc>
      </filter>
     </fn>
     <elem line="71" name="FullText" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="3">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="FullText"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="74">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="InfoUri"/>
       </gc>
      </filter>
     </fn>
     <forEach line="75">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="InfoUri"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="77" name="InfoUri" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="4">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="81">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="PassageThreshold"/>
       </gc>
      </filter>
     </fn>
     <elem line="83" name="PassageThreshold" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="5">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PassageThreshold"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="86">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ProStatement"/>
       </gc>
      </filter>
     </fn>
     <elem line="88" name="ProStatement" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="6">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ProStatement"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="91">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="SummaryText"/>
       </gc>
      </filter>
     </fn>
     <elem line="93" name="SummaryText" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="7">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="SummaryText"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="96">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Type"/>
       </gc>
      </filter>
     </fn>
     <elem line="98" name="Type" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Type"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="101">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OtherType"/>
       </gc>
      </filter>
     </fn>
     <elem line="103" name="OtherType" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OtherType"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="32" binds="10">
  <template name="Q{NIST_V2_election_results_reporting.xsd}CandidateContest" flags="os" line="233" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="234">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="235">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="CandidateContest"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="238" name="cdf:Contest" bSlot="0">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
    <choose line="241">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="NumberElected"/>
       </gc>
      </filter>
     </fn>
     <elem line="243" name="NumberElected" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="NumberElected"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="246">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="NumberRunoff"/>
       </gc>
      </filter>
     </fn>
     <elem line="248" name="NumberRunoff" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="NumberRunoff"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="251">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OfficeIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="253" name="OfficeIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf line="258" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="254" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="OfficeIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="255">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="261">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="PrimaryPartyIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="263" name="PrimaryPartyIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf line="268" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="264" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="PrimaryPartyIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="265">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="271">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="VotesAllowed"/>
       </gc>
      </filter>
     </fn>
     <elem line="273" name="VotesAllowed" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="VotesAllowed"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="33" binds="31">
  <template name="Q{NIST_V2_election_results_reporting.xsd}RetentionContest" flags="os" line="1383" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1384">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="1385">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="RetentionContest"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="1388" name="cdf:BallotMeasureContest" bSlot="0">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
    <choose line="1391">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="CandidateId"/>
       </gc>
      </filter>
     </fn>
     <elem line="1393" name="CandidateId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="CandidateId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1396">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OfficeId"/>
       </gc>
      </filter>
     </fn>
     <elem line="1398" name="OfficeId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OfficeId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="34" binds="35">
  <template name="Q{NIST_V2_election_results_reporting.xsd}PartySelection" flags="os" line="1172" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1173">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="1174">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="PartySelection"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="1177" name="cdf:ContestSelection" bSlot="0">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
    <choose line="1180">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="PartyIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="1182" name="PartyIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf line="1187" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="1183" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="PartyIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="1184">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="36" binds="21">
  <template name="Q{NIST_V2_election_results_reporting.xsd}BallotCounts" flags="os" line="27" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="28">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="29">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="BallotCounts"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="32" name="cdf:Counts" bSlot="0">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
    <choose line="35">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="BallotsCast"/>
       </gc>
      </filter>
     </fn>
     <elem line="37" name="BallotsCast" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="BallotsCast"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="40">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="BallotsOutstanding"/>
       </gc>
      </filter>
     </fn>
     <elem line="42" name="BallotsOutstanding" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="BallotsOutstanding"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="45">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="BallotsRejected"/>
       </gc>
      </filter>
     </fn>
     <elem line="47" name="BallotsRejected" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="BallotsRejected"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="37" binds="23">
  <template name="Q{NIST_V2_election_results_reporting.xsd}OrderedContest" flags="os" line="1009" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1010">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="1011">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="OrderedContest"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="1014" name="cdf:OrderedContent" bSlot="0">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
    <choose line="1017">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ContestId"/>
       </gc>
      </filter>
     </fn>
     <elem line="1019" name="ContestId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="ContestId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1022">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OrderedContestSelectionIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="1024" name="OrderedContestSelectionIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf line="1029" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="1025" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="OrderedContestSelectionIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="1026">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="38" binds="2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}InternationalizedText" flags="os" line="881" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="882">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="883">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Label"/>
       </gc>
      </filter>
     </fn>
     <att line="884" name="Label">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <slash simple="1">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
              <dot flags="a"/>
             </treat>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Label"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <choose line="886">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Text"/>
       </gc>
      </filter>
     </fn>
     <forEach line="887">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Text"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="889" name="Text" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="39" binds="2 2 2 2 2 2 2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}ContactInformation" flags="os" line="340" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="341">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="342">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Label"/>
       </gc>
      </filter>
     </fn>
     <att line="343" name="Label">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <slash simple="1">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
              <dot flags="a"/>
             </treat>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Label"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <choose line="345">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="AddressLine"/>
       </gc>
      </filter>
     </fn>
     <forEach line="346">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="AddressLine"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
      </slash>
      <elem line="348" name="AddressLine" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line="352">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Directions"/>
       </gc>
      </filter>
     </fn>
     <elem line="354" name="Directions" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="0">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Directions"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="357">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Email"/>
       </gc>
      </filter>
     </fn>
     <forEach line="358">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Email"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="360" name="Email" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="1">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="364">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Fax"/>
       </gc>
      </filter>
     </fn>
     <forEach line="365">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Fax"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="367" name="Fax" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="2">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="371">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="LatLng"/>
       </gc>
      </filter>
     </fn>
     <elem line="373" name="LatLng" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="3">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="LatLng"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="376">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Name"/>
       </gc>
      </filter>
     </fn>
     <elem line="378" name="Name" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Name"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="381">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Phone"/>
       </gc>
      </filter>
     </fn>
     <forEach line="382">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Phone"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="384" name="Phone" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="4">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="388">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Schedule"/>
       </gc>
      </filter>
     </fn>
     <forEach line="389">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Schedule"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="391" name="Schedule" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="5">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="395">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Uri"/>
       </gc>
      </filter>
     </fn>
     <forEach line="396">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Uri"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="398" name="Uri" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="6">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="40" binds="10">
  <template name="Q{NIST_V2_election_results_reporting.xsd}PartyContest" flags="os" line="1150" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1151">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="1152">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="PartyContest"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="1155" name="cdf:Contest" bSlot="0" flags="t">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
   </sequence>
  </template>
 </co>
 <co id="41" binds="35">
  <template name="Q{NIST_V2_election_results_reporting.xsd}CandidateSelection" flags="os" line="277" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="278">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="279">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="CandidateSelection"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="282" name="cdf:ContestSelection" bSlot="0">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
    <choose line="285">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="CandidateIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="287" name="CandidateIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf line="292" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="288" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="CandidateIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="289">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="295">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="EndorsementPartyIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="297" name="EndorsementPartyIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf line="302" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="298" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="EndorsementPartyIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="299">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="305">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="IsWriteIn"/>
       </gc>
      </filter>
     </fn>
     <elem line="307" name="IsWriteIn" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="IsWriteIn"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="42" binds="">
  <template name="Q{NIST_V2_election_results_reporting.xsd}PartyRegistration" flags="os" line="1159" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1160">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="1161">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Count"/>
       </gc>
      </filter>
     </fn>
     <elem line="1163" name="Count" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Count"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="1166">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="PartyId"/>
       </gc>
      </filter>
     </fn>
     <elem line="1168" name="PartyId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="PartyId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="43" binds="2 2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}SpatialDimension" flags="os" line="1440" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1441">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="1442">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="MapUri"/>
       </gc>
      </filter>
     </fn>
     <forEach line="1443">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="MapUri"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="1445" name="MapUri" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="1449">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="SpatialExtent"/>
       </gc>
      </filter>
     </fn>
     <elem line="1451" name="SpatialExtent" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="1">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="SpatialExtent"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="44" binds="35 2 2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}BallotMeasureSelection" flags="os" line="107" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="108">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="109">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="BallotMeasureSelection"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="112" name="cdf:ContestSelection" bSlot="0">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
    <choose line="115">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ExternalIdentifier"/>
       </gc>
      </filter>
     </fn>
     <forEach line="116">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="118" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="1">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="122">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Selection"/>
       </gc>
      </filter>
     </fn>
     <elem line="124" name="Selection" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <applyT bSlot="2">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Selection"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="45" binds="2 2 2 2 2 2 2 2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}ElectionReport" flags="os" line="683" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="684">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="685">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Election"/>
       </gc>
      </filter>
     </fn>
     <forEach line="686">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Election"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="688" name="Election" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="692">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ExternalIdentifier"/>
       </gc>
      </filter>
     </fn>
     <forEach line="693">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="695" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="1">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="699">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Format"/>
       </gc>
      </filter>
     </fn>
     <elem line="701" name="Format" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Format"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="704">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="GeneratedDate"/>
       </gc>
      </filter>
     </fn>
     <elem line="706" name="GeneratedDate" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="GeneratedDate"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="709">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="GpUnit"/>
       </gc>
      </filter>
     </fn>
     <forEach line="710">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="GpUnit"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="712" name="GpUnit" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="2">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="716">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Header"/>
       </gc>
      </filter>
     </fn>
     <forEach line="717">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Header"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="719" name="Header" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="3">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="723">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Issuer"/>
       </gc>
      </filter>
     </fn>
     <elem line="725" name="Issuer" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Issuer"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="728">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="IssuerAbbreviation"/>
       </gc>
      </filter>
     </fn>
     <elem line="730" name="IssuerAbbreviation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="IssuerAbbreviation"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="733">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="IsTest"/>
       </gc>
      </filter>
     </fn>
     <elem line="735" name="IsTest" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="IsTest"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="738">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Notes"/>
       </gc>
      </filter>
     </fn>
     <elem line="740" name="Notes" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Notes"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="743">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Office"/>
       </gc>
      </filter>
     </fn>
     <forEach line="744">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Office"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="746" name="Office" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="4">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="750">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OfficeGroup"/>
       </gc>
      </filter>
     </fn>
     <forEach line="751">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OfficeGroup"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="753" name="OfficeGroup" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="5">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="757">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Party"/>
       </gc>
      </filter>
     </fn>
     <forEach line="758">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Party"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="760" name="Party" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="6">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="764">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Person"/>
       </gc>
      </filter>
     </fn>
     <forEach line="765">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Person"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="767" name="Person" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="7">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="771">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="SequenceStart"/>
       </gc>
      </filter>
     </fn>
     <elem line="773" name="SequenceStart" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="SequenceStart"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="776">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="SequenceEnd"/>
       </gc>
      </filter>
     </fn>
     <elem line="778" name="SequenceEnd" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="SequenceEnd"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="781">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Status"/>
       </gc>
      </filter>
     </fn>
     <elem line="783" name="Status" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Status"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="786">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="TestType"/>
       </gc>
      </filter>
     </fn>
     <elem line="788" name="TestType" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="TestType"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="791">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="VendorApplicationId"/>
       </gc>
      </filter>
     </fn>
     <elem line="793" name="VendorApplicationId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="VendorApplicationId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="35" binds="2">
  <template name="Q{NIST_V2_election_results_reporting.xsd}ContestSelection" flags="os" line="490" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="491">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <att line="492" name="ObjectId">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="@id"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line="493">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="SequenceOrder"/>
       </gc>
      </filter>
     </fn>
     <elem line="495" name="SequenceOrder" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="SequenceOrder"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="498">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="VoteCounts"/>
       </gc>
      </filter>
     </fn>
     <forEach line="499">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="VoteCounts"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="501" name="VoteCounts" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="46" binds="21">
  <template name="Q{NIST_V2_election_results_reporting.xsd}VoteCounts" flags="os" line="1489" module="err_v2_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1490">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="1491">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="VoteCounts"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="1494" name="cdf:Counts" bSlot="0">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
    <choose line="1497">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Count"/>
       </gc>
      </filter>
     </fn>
     <elem line="1499" name="Count" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Count"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="2" binds="21 2 2 2 31 1 2 2 2 2 2 1 2 2 2 2 2 2 35 10 2 23 2 23 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 13 35 10 2 2 2 2 2 2 2 35 2 2 21 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 10 2 2 2 2 2 2 2 2">
  <mode onNo="TC" flags="dW" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="45" rank="1" minImp="0" slots="1" flags="s" line="1489" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1489" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.VoteCounts"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1490">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="1491">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="VoteCounts"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="1494" name="cdf:Counts" bSlot="0">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
     <choose line="1497">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Count"/>
        </gc>
       </filter>
      </fn>
      <elem line="1499" name="Count" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Count"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="44" rank="1" minImp="0" slots="1" flags="s" line="1468" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1468" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.Term"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1469">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="1470">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Label"/>
        </gc>
       </filter>
      </fn>
      <att line="1471" name="Label">
       <convert from="xs:untypedAtomic" to="xs:string">
        <cast as="xs:untypedAtomic" emptiable="0">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <filter flags="b">
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             <gc op="=" card="1:1" comp="CCC">
              <attVal name="Q{}key" chk="0"/>
              <str val="Label"/>
             </gc>
            </filter>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line="1473">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="StartDate"/>
        </gc>
       </filter>
      </fn>
      <elem line="1475" name="StartDate" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="StartDate"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1478">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="EndDate"/>
        </gc>
       </filter>
      </fn>
      <elem line="1480" name="EndDate" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="EndDate"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1483">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Type"/>
        </gc>
       </filter>
      </fn>
      <elem line="1485" name="Type" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Type"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="43" rank="1" minImp="0" slots="1" flags="s" line="1455" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1455" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.SpatialExtent"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1456">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="1457">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Coordinates"/>
        </gc>
       </filter>
      </fn>
      <elem line="1459" name="Coordinates" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Coordinates"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1462">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Format"/>
        </gc>
       </filter>
      </fn>
      <elem line="1464" name="Format" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Format"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="42" rank="1" minImp="0" slots="1" flags="s" line="1440" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1440" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.SpatialDimension"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1441">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="1442">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="MapUri"/>
        </gc>
       </filter>
      </fn>
      <forEach line="1443">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="MapUri"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="1445" name="MapUri" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="1">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="1449">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="SpatialExtent"/>
        </gc>
       </filter>
      </fn>
      <elem line="1451" name="SpatialExtent" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="2">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="SpatialExtent"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="41" rank="1" minImp="0" slots="1" flags="s" line="1402" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1402" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.Schedule"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1403">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="1404">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Label"/>
        </gc>
       </filter>
      </fn>
      <att line="1405" name="Label">
       <convert from="xs:untypedAtomic" to="xs:string">
        <cast as="xs:untypedAtomic" emptiable="0">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <filter flags="b">
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             <gc op="=" card="1:1" comp="CCC">
              <attVal name="Q{}key" chk="0"/>
              <str val="Label"/>
             </gc>
            </filter>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line="1407">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Hours"/>
        </gc>
       </filter>
      </fn>
      <forEach line="1408">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Hours"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="1410" name="Hours" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="3">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="1414">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="IsOnlyByAppointment"/>
        </gc>
       </filter>
      </fn>
      <elem line="1416" name="IsOnlyByAppointment" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="IsOnlyByAppointment"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1419">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="IsOrByAppointment"/>
        </gc>
       </filter>
      </fn>
      <elem line="1421" name="IsOrByAppointment" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="IsOrByAppointment"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1424">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="IsSubjectToChange"/>
        </gc>
       </filter>
      </fn>
      <elem line="1426" name="IsSubjectToChange" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="IsSubjectToChange"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1429">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="StartDate"/>
        </gc>
       </filter>
      </fn>
      <elem line="1431" name="StartDate" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="StartDate"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1434">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="EndDate"/>
        </gc>
       </filter>
      </fn>
      <elem line="1436" name="EndDate" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="EndDate"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="40" rank="1" minImp="0" slots="1" flags="s" line="1383" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1383" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.RetentionContest"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1384">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="1385">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="RetentionContest"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="1388" name="cdf:BallotMeasureContest" bSlot="4">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
     <choose line="1391">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CandidateId"/>
        </gc>
       </filter>
      </fn>
      <elem line="1393" name="CandidateId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="CandidateId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1396">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OfficeId"/>
        </gc>
       </filter>
      </fn>
      <elem line="1398" name="OfficeId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OfficeId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="39" rank="1" minImp="0" slots="1" flags="s" line="1290" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1290" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.ReportingUnit"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1291">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="1292">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="ReportingUnit"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="1295" name="cdf:GpUnit" bSlot="5">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
     <choose line="1298">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="AuthorityIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="1300" name="AuthorityIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf line="1305" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="1301" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="AuthorityIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="1302">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1308">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContactInformation"/>
        </gc>
       </filter>
      </fn>
      <elem line="1310" name="ContactInformation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="6">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ContactInformation"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="1313">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CountStatus"/>
        </gc>
       </filter>
      </fn>
      <forEach line="1314">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="CountStatus"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="1316" name="CountStatus" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="7">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="1320">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ElectionAdministration"/>
        </gc>
       </filter>
      </fn>
      <elem line="1322" name="ElectionAdministration" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="8">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ElectionAdministration"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="1325">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="IsDistricted"/>
        </gc>
       </filter>
      </fn>
      <elem line="1327" name="IsDistricted" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="IsDistricted"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1330">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="IsMailOnly"/>
        </gc>
       </filter>
      </fn>
      <elem line="1332" name="IsMailOnly" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="IsMailOnly"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1335">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Number"/>
        </gc>
       </filter>
      </fn>
      <elem line="1337" name="Number" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Number"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1340">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PartyRegistration"/>
        </gc>
       </filter>
      </fn>
      <forEach line="1341">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="PartyRegistration"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="1343" name="PartyRegistration" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="9">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="1347">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="SpatialDimension"/>
        </gc>
       </filter>
      </fn>
      <elem line="1349" name="SpatialDimension" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="10">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="SpatialDimension"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="1352">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="SubUnitsReported"/>
        </gc>
       </filter>
      </fn>
      <elem line="1354" name="SubUnitsReported" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="SubUnitsReported"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1357">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="TotalSubUnits"/>
        </gc>
       </filter>
      </fn>
      <elem line="1359" name="TotalSubUnits" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="TotalSubUnits"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1362">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Type"/>
        </gc>
       </filter>
      </fn>
      <elem line="1364" name="Type" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Type"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1367">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherType"/>
        </gc>
       </filter>
      </fn>
      <elem line="1369" name="OtherType" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OtherType"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1372">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="VotersParticipated"/>
        </gc>
       </filter>
      </fn>
      <elem line="1374" name="VotersParticipated" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="VotersParticipated"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1377">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="VotersRegistered"/>
        </gc>
       </filter>
      </fn>
      <elem line="1379" name="VotersRegistered" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="VotersRegistered"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="38" rank="1" minImp="0" slots="1" flags="s" line="1271" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1271" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.ReportingDevice"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1272">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="1273">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="ReportingDevice"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="1276" name="cdf:GpUnit" bSlot="11">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
     <choose line="1279">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="DeviceClass"/>
        </gc>
       </filter>
      </fn>
      <elem line="1281" name="DeviceClass" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="12">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="DeviceClass"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="1284">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="SerialNumber"/>
        </gc>
       </filter>
      </fn>
      <elem line="1286" name="SerialNumber" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="SerialNumber"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="37" rank="1" minImp="0" slots="1" flags="s" line="1191" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1191" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.Person"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1192">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <att line="1193" name="ObjectId">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="@id"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line="1194">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContactInformation"/>
        </gc>
       </filter>
      </fn>
      <forEach line="1195">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ContactInformation"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="1197" name="ContactInformation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="13">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="1201">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="DateOfBirth"/>
        </gc>
       </filter>
      </fn>
      <elem line="1203" name="DateOfBirth" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="DateOfBirth"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1206">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
      </fn>
      <forEach line="1207">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ExternalIdentifier"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="1209" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="14">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="1213">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="FirstName"/>
        </gc>
       </filter>
      </fn>
      <elem line="1215" name="FirstName" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="FirstName"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1218">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="FullName"/>
        </gc>
       </filter>
      </fn>
      <elem line="1220" name="FullName" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="15">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="FullName"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="1223">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Gender"/>
        </gc>
       </filter>
      </fn>
      <elem line="1225" name="Gender" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Gender"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1228">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="LastName"/>
        </gc>
       </filter>
      </fn>
      <elem line="1230" name="LastName" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="LastName"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1233">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="MiddleName"/>
        </gc>
       </filter>
      </fn>
      <forEach line="1234">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="MiddleName"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </slash>
       <elem line="1236" name="MiddleName" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line="1240">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Nickname"/>
        </gc>
       </filter>
      </fn>
      <elem line="1242" name="Nickname" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Nickname"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1245">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PartyId"/>
        </gc>
       </filter>
      </fn>
      <elem line="1247" name="PartyId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="PartyId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1250">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Prefix"/>
        </gc>
       </filter>
      </fn>
      <elem line="1252" name="Prefix" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Prefix"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1255">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Profession"/>
        </gc>
       </filter>
      </fn>
      <elem line="1257" name="Profession" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="16">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Profession"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="1260">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Suffix"/>
        </gc>
       </filter>
      </fn>
      <elem line="1262" name="Suffix" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Suffix"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1265">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Title"/>
        </gc>
       </filter>
      </fn>
      <elem line="1267" name="Title" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="17">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Title"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="36" rank="1" minImp="0" slots="1" flags="s" line="1172" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1172" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.PartySelection"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1173">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="1174">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="PartySelection"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="1177" name="cdf:ContestSelection" bSlot="18">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
     <choose line="1180">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PartyIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="1182" name="PartyIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf line="1187" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="1183" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="PartyIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="1184">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="35" rank="1" minImp="0" slots="1" flags="s" line="1159" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1159" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.PartyRegistration"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1160">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="1161">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Count"/>
        </gc>
       </filter>
      </fn>
      <elem line="1163" name="Count" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Count"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1166">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PartyId"/>
        </gc>
       </filter>
      </fn>
      <elem line="1168" name="PartyId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="PartyId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="34" rank="1" minImp="0" slots="1" flags="s" line="1150" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1150" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.PartyContest"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1151">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="1152">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="PartyContest"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="1155" name="cdf:Contest" bSlot="19" flags="t">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="32" rank="1" minImp="0" slots="1" flags="s" line="1054" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1054" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.OtherCounts"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1055">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="1056">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="DeviceClass"/>
        </gc>
       </filter>
      </fn>
      <elem line="1058" name="DeviceClass" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="20">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="DeviceClass"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="1061">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="GpUnitId"/>
        </gc>
       </filter>
      </fn>
      <elem line="1063" name="GpUnitId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="GpUnitId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1066">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Overvotes"/>
        </gc>
       </filter>
      </fn>
      <elem line="1068" name="Overvotes" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Overvotes"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1071">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Undervotes"/>
        </gc>
       </filter>
      </fn>
      <elem line="1073" name="Undervotes" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Undervotes"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1076">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="WriteIns"/>
        </gc>
       </filter>
      </fn>
      <elem line="1078" name="WriteIns" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="WriteIns"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="31" rank="1" minImp="0" slots="1" flags="s" line="1033" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1033" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.OrderedHeader"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1034">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="1035">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="OrderedHeader"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="1038" name="cdf:OrderedContent" bSlot="21">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
     <choose line="1041">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="HeaderId"/>
        </gc>
       </filter>
      </fn>
      <elem line="1043" name="HeaderId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="HeaderId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1046">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OrderedContent"/>
        </gc>
       </filter>
      </fn>
      <forEach line="1047">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="OrderedContent"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="1049" name="OrderedContent" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="22">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="30" rank="1" minImp="0" slots="1" flags="s" line="1009" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1009" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.OrderedContest"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1010">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="1011">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="OrderedContest"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="1014" name="cdf:OrderedContent" bSlot="23">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
     <choose line="1017">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContestId"/>
        </gc>
       </filter>
      </fn>
      <elem line="1019" name="ContestId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="ContestId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1022">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OrderedContestSelectionIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="1024" name="OrderedContestSelectionIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf line="1029" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="1025" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="OrderedContestSelectionIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="1026">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="28" rank="1" minImp="0" slots="1" flags="s" line="978" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="978" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.OfficeGroup"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="979">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="980">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Label"/>
        </gc>
       </filter>
      </fn>
      <att line="981" name="Label">
       <convert from="xs:untypedAtomic" to="xs:string">
        <cast as="xs:untypedAtomic" emptiable="0">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <filter flags="b">
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             <gc op="=" card="1:1" comp="CCC">
              <attVal name="Q{}key" chk="0"/>
              <str val="Label"/>
             </gc>
            </filter>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line="983">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </fn>
      <elem line="985" name="Name" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Name"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="988">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OfficeIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="990" name="OfficeIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf line="995" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="991" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="OfficeIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="992">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="998">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="SubOfficeGroup"/>
        </gc>
       </filter>
      </fn>
      <forEach line="999">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="SubOfficeGroup"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="1001" name="SubOfficeGroup" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="24">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="27" rank="1" minImp="0" slots="1" flags="s" line="922" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="922" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.Office"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="923">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <att line="924" name="ObjectId">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="@id"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line="925">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContactInformation"/>
        </gc>
       </filter>
      </fn>
      <elem line="927" name="ContactInformation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="25">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ContactInformation"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="930">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Description"/>
        </gc>
       </filter>
      </fn>
      <elem line="932" name="Description" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="26">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Description"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="935">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ElectionDistrictId"/>
        </gc>
       </filter>
      </fn>
      <elem line="937" name="ElectionDistrictId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="ElectionDistrictId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="940">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
      </fn>
      <forEach line="941">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ExternalIdentifier"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="943" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="27">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="947">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="FilingDeadline"/>
        </gc>
       </filter>
      </fn>
      <elem line="949" name="FilingDeadline" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="FilingDeadline"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="952">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="IsPartisan"/>
        </gc>
       </filter>
      </fn>
      <elem line="954" name="IsPartisan" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="IsPartisan"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="957">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </fn>
      <elem line="959" name="Name" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="28">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Name"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="962">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OfficeHolderPersonIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="964" name="OfficeHolderPersonIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf line="969" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="965" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="OfficeHolderPersonIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="966">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="972">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Term"/>
        </gc>
       </filter>
      </fn>
      <elem line="974" name="Term" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="29">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Term"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="26" rank="1" minImp="0" slots="1" flags="s" line="901" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="901" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.LatLng"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="902">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="903">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Label"/>
        </gc>
       </filter>
      </fn>
      <att line="904" name="Label">
       <convert from="xs:untypedAtomic" to="xs:string">
        <cast as="xs:untypedAtomic" emptiable="0">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <filter flags="b">
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             <gc op="=" card="1:1" comp="CCC">
              <attVal name="Q{}key" chk="0"/>
              <str val="Label"/>
             </gc>
            </filter>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line="906">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Latitude"/>
        </gc>
       </filter>
      </fn>
      <elem line="908" name="Latitude" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Latitude"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="911">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Longitude"/>
        </gc>
       </filter>
      </fn>
      <elem line="913" name="Longitude" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Longitude"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="916">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Source"/>
        </gc>
       </filter>
      </fn>
      <elem line="918" name="Source" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Source"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="25" rank="1" minImp="0" slots="1" flags="s" line="894" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="894" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.LanguageString"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="895">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="896">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Language"/>
        </gc>
       </filter>
      </fn>
      <att line="897" name="Language">
       <convert from="xs:untypedAtomic" to="xs:string">
        <cast as="xs:untypedAtomic" emptiable="0">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <filter flags="b">
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             <gc op="=" card="1:1" comp="CCC">
              <attVal name="Q{}key" chk="0"/>
              <str val="Language"/>
             </gc>
            </filter>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <valueOf line="899">
      <fn name="string-join">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <filter flags="b">
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}key" chk="0"/>
           <str val="Content"/>
          </gc>
         </filter>
        </data>
       </convert>
       <str val=" "/>
      </fn>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="24" rank="1" minImp="0" slots="1" flags="s" line="881" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="881" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.InternationalizedText"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="882">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="883">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Label"/>
        </gc>
       </filter>
      </fn>
      <att line="884" name="Label">
       <convert from="xs:untypedAtomic" to="xs:string">
        <cast as="xs:untypedAtomic" emptiable="0">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <filter flags="b">
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             <gc op="=" card="1:1" comp="CCC">
              <attVal name="Q{}key" chk="0"/>
              <str val="Label"/>
             </gc>
            </filter>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line="886">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Text"/>
        </gc>
       </filter>
      </fn>
      <forEach line="887">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Text"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="889" name="Text" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="30">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="23" rank="1" minImp="0" slots="1" flags="s" line="860" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="860" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.Hours"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="861">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="862">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Label"/>
        </gc>
       </filter>
      </fn>
      <att line="863" name="Label">
       <convert from="xs:untypedAtomic" to="xs:string">
        <cast as="xs:untypedAtomic" emptiable="0">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <filter flags="b">
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             <gc op="=" card="1:1" comp="CCC">
              <attVal name="Q{}key" chk="0"/>
              <str val="Label"/>
             </gc>
            </filter>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line="865">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Day"/>
        </gc>
       </filter>
      </fn>
      <elem line="867" name="Day" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Day"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="870">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="StartTime"/>
        </gc>
       </filter>
      </fn>
      <elem line="872" name="StartTime" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="StartTime"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="875">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="EndTime"/>
        </gc>
       </filter>
      </fn>
      <elem line="877" name="EndTime" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="EndTime"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="22" rank="1" minImp="0" slots="1" flags="s" line="844" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="844" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.Header"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="845">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <att line="846" name="ObjectId">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="@id"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line="847">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
      </fn>
      <forEach line="848">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ExternalIdentifier"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="850" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="31">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="854">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </fn>
      <elem line="856" name="Name" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="32">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Name"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="20" rank="1" minImp="0" slots="1" flags="s" line="797" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="797" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.ExternalIdentifier"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="798">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="799">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Label"/>
        </gc>
       </filter>
      </fn>
      <att line="800" name="Label">
       <convert from="xs:untypedAtomic" to="xs:string">
        <cast as="xs:untypedAtomic" emptiable="0">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <filter flags="b">
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             <gc op="=" card="1:1" comp="CCC">
              <attVal name="Q{}key" chk="0"/>
              <str val="Label"/>
             </gc>
            </filter>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line="802">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Type"/>
        </gc>
       </filter>
      </fn>
      <elem line="804" name="Type" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Type"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="807">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherType"/>
        </gc>
       </filter>
      </fn>
      <elem line="809" name="OtherType" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OtherType"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="812">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Value"/>
        </gc>
       </filter>
      </fn>
      <elem line="814" name="Value" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Value"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="19" rank="1" minImp="0" slots="1" flags="s" line="683" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="683" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.ElectionReport"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="684">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="685">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Election"/>
        </gc>
       </filter>
      </fn>
      <forEach line="686">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Election"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="688" name="Election" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="33">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="692">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
      </fn>
      <forEach line="693">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ExternalIdentifier"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="695" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="34">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="699">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Format"/>
        </gc>
       </filter>
      </fn>
      <elem line="701" name="Format" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Format"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="704">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="GeneratedDate"/>
        </gc>
       </filter>
      </fn>
      <elem line="706" name="GeneratedDate" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="GeneratedDate"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="709">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="GpUnit"/>
        </gc>
       </filter>
      </fn>
      <forEach line="710">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="GpUnit"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="712" name="GpUnit" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="35">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="716">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Header"/>
        </gc>
       </filter>
      </fn>
      <forEach line="717">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Header"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="719" name="Header" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="36">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="723">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Issuer"/>
        </gc>
       </filter>
      </fn>
      <elem line="725" name="Issuer" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Issuer"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="728">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="IssuerAbbreviation"/>
        </gc>
       </filter>
      </fn>
      <elem line="730" name="IssuerAbbreviation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="IssuerAbbreviation"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="733">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="IsTest"/>
        </gc>
       </filter>
      </fn>
      <elem line="735" name="IsTest" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="IsTest"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="738">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Notes"/>
        </gc>
       </filter>
      </fn>
      <elem line="740" name="Notes" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Notes"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="743">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Office"/>
        </gc>
       </filter>
      </fn>
      <forEach line="744">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Office"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="746" name="Office" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="37">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="750">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OfficeGroup"/>
        </gc>
       </filter>
      </fn>
      <forEach line="751">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="OfficeGroup"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="753" name="OfficeGroup" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="38">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="757">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Party"/>
        </gc>
       </filter>
      </fn>
      <forEach line="758">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Party"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="760" name="Party" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="39">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="764">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Person"/>
        </gc>
       </filter>
      </fn>
      <forEach line="765">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Person"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="767" name="Person" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="40">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="771">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="SequenceStart"/>
        </gc>
       </filter>
      </fn>
      <elem line="773" name="SequenceStart" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="SequenceStart"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="776">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="SequenceEnd"/>
        </gc>
       </filter>
      </fn>
      <elem line="778" name="SequenceEnd" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="SequenceEnd"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="781">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Status"/>
        </gc>
       </filter>
      </fn>
      <elem line="783" name="Status" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Status"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="786">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="TestType"/>
        </gc>
       </filter>
      </fn>
      <elem line="788" name="TestType" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="TestType"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="791">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="VendorApplicationId"/>
        </gc>
       </filter>
      </fn>
      <elem line="793" name="VendorApplicationId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="VendorApplicationId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="18" rank="1" minImp="0" slots="1" flags="s" line="660" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="660" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.ElectionAdministration"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="661">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="662">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContactInformation"/>
        </gc>
       </filter>
      </fn>
      <elem line="664" name="ContactInformation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="41">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ContactInformation"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="667">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ElectionOfficialPersonIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="669" name="ElectionOfficialPersonIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf line="674" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="670" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="ElectionOfficialPersonIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="671">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="677">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </fn>
      <elem line="679" name="Name" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Name"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="17" rank="1" minImp="0" slots="1" flags="s" line="580" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="580" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.Election"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="581">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="582">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotCounts"/>
        </gc>
       </filter>
      </fn>
      <forEach line="583">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="BallotCounts"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="585" name="BallotCounts" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="42">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="589">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotStyle"/>
        </gc>
       </filter>
      </fn>
      <forEach line="590">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="BallotStyle"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="592" name="BallotStyle" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="43">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="596">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Candidate"/>
        </gc>
       </filter>
      </fn>
      <forEach line="597">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Candidate"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="599" name="Candidate" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="44">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="603">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContactInformation"/>
        </gc>
       </filter>
      </fn>
      <elem line="605" name="ContactInformation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="45">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ContactInformation"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="608">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Contest"/>
        </gc>
       </filter>
      </fn>
      <forEach line="609">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Contest"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="611" name="Contest" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="46">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="615">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CountStatus"/>
        </gc>
       </filter>
      </fn>
      <forEach line="616">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="CountStatus"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="618" name="CountStatus" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="47">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="622">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ElectionScopeId"/>
        </gc>
       </filter>
      </fn>
      <elem line="624" name="ElectionScopeId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="ElectionScopeId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="627">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
      </fn>
      <forEach line="628">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ExternalIdentifier"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="630" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="48">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="634">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </fn>
      <elem line="636" name="Name" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="49">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Name"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="639">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="StartDate"/>
        </gc>
       </filter>
      </fn>
      <elem line="641" name="StartDate" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="StartDate"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="644">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="EndDate"/>
        </gc>
       </filter>
      </fn>
      <elem line="646" name="EndDate" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="EndDate"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="649">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Type"/>
        </gc>
       </filter>
      </fn>
      <elem line="651" name="Type" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Type"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="654">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherType"/>
        </gc>
       </filter>
      </fn>
      <elem line="656" name="OtherType" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OtherType"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="16" rank="1" minImp="0" slots="1" flags="s" line="557" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="557" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.DeviceClass"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="558">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="559">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Manufacturer"/>
        </gc>
       </filter>
      </fn>
      <elem line="561" name="Manufacturer" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Manufacturer"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="564">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Model"/>
        </gc>
       </filter>
      </fn>
      <elem line="566" name="Model" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Model"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="569">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Type"/>
        </gc>
       </filter>
      </fn>
      <elem line="571" name="Type" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Type"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="574">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherType"/>
        </gc>
       </filter>
      </fn>
      <elem line="576" name="OtherType" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OtherType"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="14" rank="1" minImp="0" slots="1" flags="s" line="506" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="506" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.CountStatus"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="507">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="508">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Status"/>
        </gc>
       </filter>
      </fn>
      <elem line="510" name="Status" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Status"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="513">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Type"/>
        </gc>
       </filter>
      </fn>
      <elem line="515" name="Type" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Type"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="518">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherType"/>
        </gc>
       </filter>
      </fn>
      <elem line="520" name="OtherType" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OtherType"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="11" rank="1" minImp="0" slots="1" flags="s" line="340" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="340" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.ContactInformation"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="341">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="342">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Label"/>
        </gc>
       </filter>
      </fn>
      <att line="343" name="Label">
       <convert from="xs:untypedAtomic" to="xs:string">
        <cast as="xs:untypedAtomic" emptiable="0">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <filter flags="b">
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             <gc op="=" card="1:1" comp="CCC">
              <attVal name="Q{}key" chk="0"/>
              <str val="Label"/>
             </gc>
            </filter>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line="345">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="AddressLine"/>
        </gc>
       </filter>
      </fn>
      <forEach line="346">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="AddressLine"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </slash>
       <elem line="348" name="AddressLine" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line="352">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Directions"/>
        </gc>
       </filter>
      </fn>
      <elem line="354" name="Directions" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="50">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Directions"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="357">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Email"/>
        </gc>
       </filter>
      </fn>
      <forEach line="358">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Email"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="360" name="Email" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="51">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="364">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Fax"/>
        </gc>
       </filter>
      </fn>
      <forEach line="365">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Fax"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="367" name="Fax" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="52">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="371">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="LatLng"/>
        </gc>
       </filter>
      </fn>
      <elem line="373" name="LatLng" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="53">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="LatLng"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="376">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </fn>
      <elem line="378" name="Name" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Name"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="381">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Phone"/>
        </gc>
       </filter>
      </fn>
      <forEach line="382">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Phone"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="384" name="Phone" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="54">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="388">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Schedule"/>
        </gc>
       </filter>
      </fn>
      <forEach line="389">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Schedule"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="391" name="Schedule" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="55">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="395">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Uri"/>
        </gc>
       </filter>
      </fn>
      <forEach line="396">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Uri"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="398" name="Uri" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="56">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="10" rank="1" minImp="0" slots="1" flags="s" line="311" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="311" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.Coalition"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="312">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="313">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="Coalition"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="316" name="cdf:Party" bSlot="57">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
     <choose line="319">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContestIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="321" name="ContestIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf line="326" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="322" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="ContestIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="323">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="329">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PartyIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="331" name="PartyIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf line="336" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="332" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="PartyIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="333">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="9" rank="1" minImp="0" slots="1" flags="s" line="277" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="277" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.CandidateSelection"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="278">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="279">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="CandidateSelection"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="282" name="cdf:ContestSelection" bSlot="58">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
     <choose line="285">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CandidateIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="287" name="CandidateIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf line="292" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="288" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="CandidateIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="289">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="295">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="EndorsementPartyIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="297" name="EndorsementPartyIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf line="302" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="298" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="EndorsementPartyIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="299">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="305">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="IsWriteIn"/>
        </gc>
       </filter>
      </fn>
      <elem line="307" name="IsWriteIn" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="IsWriteIn"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="8" rank="1" minImp="0" slots="1" flags="s" line="233" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="233" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.CandidateContest"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="234">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="235">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="CandidateContest"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="238" name="cdf:Contest" bSlot="59">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
     <choose line="241">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="NumberElected"/>
        </gc>
       </filter>
      </fn>
      <elem line="243" name="NumberElected" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="NumberElected"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="246">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="NumberRunoff"/>
        </gc>
       </filter>
      </fn>
      <elem line="248" name="NumberRunoff" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="NumberRunoff"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="251">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OfficeIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="253" name="OfficeIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf line="258" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="254" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="OfficeIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="255">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="261">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PrimaryPartyIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="263" name="PrimaryPartyIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf line="268" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="264" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="PrimaryPartyIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="265">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="271">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="VotesAllowed"/>
        </gc>
       </filter>
      </fn>
      <elem line="273" name="VotesAllowed" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="VotesAllowed"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="7" rank="1" minImp="0" slots="1" flags="s" line="172" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="172" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.Candidate"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="173">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <att line="174" name="ObjectId">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="@id"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line="175">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotName"/>
        </gc>
       </filter>
      </fn>
      <elem line="177" name="BallotName" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="60">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="BallotName"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="180">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CampaignSlogan"/>
        </gc>
       </filter>
      </fn>
      <elem line="182" name="CampaignSlogan" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="61">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="CampaignSlogan"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="185">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContactInformation"/>
        </gc>
       </filter>
      </fn>
      <elem line="187" name="ContactInformation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="62">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ContactInformation"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="190">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
      </fn>
      <forEach line="191">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ExternalIdentifier"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="193" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="63">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="197">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="FileDate"/>
        </gc>
       </filter>
      </fn>
      <elem line="199" name="FileDate" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="FileDate"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="202">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="IsIncumbent"/>
        </gc>
       </filter>
      </fn>
      <elem line="204" name="IsIncumbent" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="IsIncumbent"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="207">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="IsTopTicket"/>
        </gc>
       </filter>
      </fn>
      <elem line="209" name="IsTopTicket" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="IsTopTicket"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="212">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PartyId"/>
        </gc>
       </filter>
      </fn>
      <elem line="214" name="PartyId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="PartyId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="217">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PersonId"/>
        </gc>
       </filter>
      </fn>
      <elem line="219" name="PersonId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="PersonId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="222">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PostElectionStatus"/>
        </gc>
       </filter>
      </fn>
      <elem line="224" name="PostElectionStatus" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="PostElectionStatus"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="227">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PreElectionStatus"/>
        </gc>
       </filter>
      </fn>
      <elem line="229" name="PreElectionStatus" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="PreElectionStatus"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="6" rank="1" minImp="0" slots="1" flags="s" line="128" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="128" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.BallotStyle"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="129">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="130">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
      </fn>
      <forEach line="131">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ExternalIdentifier"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="133" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="64">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="137">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="GpUnitIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="139" name="GpUnitIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf line="144" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="140" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="GpUnitIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="141">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="147">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ImageUri"/>
        </gc>
       </filter>
      </fn>
      <forEach line="148">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ImageUri"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="150" name="ImageUri" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="65">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="154">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OrderedContent"/>
        </gc>
       </filter>
      </fn>
      <forEach line="155">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="OrderedContent"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="157" name="OrderedContent" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="66">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="161">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PartyIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="163" name="PartyIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf line="168" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="164" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="PartyIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="165">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="5" rank="1" minImp="0" slots="1" flags="s" line="107" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="107" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.BallotMeasureSelection"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="108">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="109">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="BallotMeasureSelection"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="112" name="cdf:ContestSelection" bSlot="67">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
     <choose line="115">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
      </fn>
      <forEach line="116">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ExternalIdentifier"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="118" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="68">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="122">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Selection"/>
        </gc>
       </filter>
      </fn>
      <elem line="124" name="Selection" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="69">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Selection"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="3" rank="1" minImp="0" slots="1" flags="s" line="27" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="27" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.BallotCounts"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="28">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="29">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="BallotCounts"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="32" name="cdf:Counts" bSlot="70">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
     <choose line="35">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotsCast"/>
        </gc>
       </filter>
      </fn>
      <elem line="37" name="BallotsCast" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="BallotsCast"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="40">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotsOutstanding"/>
        </gc>
       </filter>
      </fn>
      <elem line="42" name="BallotsOutstanding" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="BallotsOutstanding"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="45">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotsRejected"/>
        </gc>
       </filter>
      </fn>
      <elem line="47" name="BallotsRejected" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="BallotsRejected"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="2" rank="1" minImp="0" slots="1" flags="s" line="20" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="20" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.AnnotatedUri"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="21">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="22">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Annotation"/>
        </gc>
       </filter>
      </fn>
      <att line="23" name="Annotation">
       <convert from="xs:untypedAtomic" to="xs:string">
        <cast as="xs:untypedAtomic" emptiable="0">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <filter flags="b">
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             <gc op="=" card="1:1" comp="CCC">
              <attVal name="Q{}key" chk="0"/>
              <str val="Annotation"/>
             </gc>
            </filter>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <valueOf line="25">
      <fn name="string-join">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <filter flags="b">
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}key" chk="0"/>
           <str val="Content"/>
          </gc>
         </filter>
        </data>
       </convert>
       <str val=" "/>
      </fn>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="1" rank="1" minImp="0" slots="1" flags="s" line="13" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="13" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.AnnotatedString"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="14">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="15">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Annotation"/>
        </gc>
       </filter>
      </fn>
      <att line="16" name="Annotation">
       <convert from="xs:untypedAtomic" to="xs:string">
        <cast as="xs:untypedAtomic" emptiable="0">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <filter flags="b">
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             <gc op="=" card="1:1" comp="CCC">
              <attVal name="Q{}key" chk="0"/>
              <str val="Annotation"/>
             </gc>
            </filter>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <valueOf line="18">
      <fn name="string-join">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <filter flags="b">
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}key" chk="0"/>
           <str val="Content"/>
          </gc>
         </filter>
        </data>
       </convert>
       <str val=" "/>
      </fn>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-1.0" seq="33" rank="0" minImp="0" slots="1" flags="s" line="1082" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1082" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.Party"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1083">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <att line="1084" name="ObjectId">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="@id"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line="1085">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Abbreviation"/>
        </gc>
       </filter>
      </fn>
      <elem line="1087" name="Abbreviation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="71">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Abbreviation"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="1090">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Color"/>
        </gc>
       </filter>
      </fn>
      <elem line="1092" name="Color" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Color"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1095">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContactInformation"/>
        </gc>
       </filter>
      </fn>
      <elem line="1097" name="ContactInformation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="72">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ContactInformation"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="1100">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
      </fn>
      <forEach line="1101">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ExternalIdentifier"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="1103" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="73">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="1107">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="IsRecognizedParty"/>
        </gc>
       </filter>
      </fn>
      <elem line="1109" name="IsRecognizedParty" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="IsRecognizedParty"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1112">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="LeaderPersonIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="1114" name="LeaderPersonIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf line="1119" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="1115" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="LeaderPersonIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="1116">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1122">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="LogoUri"/>
        </gc>
       </filter>
      </fn>
      <forEach line="1123">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="LogoUri"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="1125" name="LogoUri" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="74">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="1129">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </fn>
      <elem line="1131" name="Name" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="75">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Name"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="1134">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PartyScopeGpUnitIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="1136" name="PartyScopeGpUnitIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf line="1141" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="1137" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="PartyScopeGpUnitIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="1138">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="1144">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Slogan"/>
        </gc>
       </filter>
      </fn>
      <elem line="1146" name="Slogan" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="76">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Slogan"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-1.0" seq="29" rank="0" minImp="0" slots="1" flags="s" line="1006" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1006" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.OrderedContent"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <param role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="1007" name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
   </templateRule>
   <templateRule prec="0" prio="-1.0" seq="21" rank="0" minImp="0" slots="1" flags="s" line="818" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="818" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.GpUnit"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="819">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <att line="820" name="ObjectId">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="@id"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line="821">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ComposingGpUnitIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="823" name="ComposingGpUnitIds" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf line="828" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="824" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="ComposingGpUnitIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="825">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="831">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
      </fn>
      <forEach line="832">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ExternalIdentifier"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="834" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="77">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="838">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </fn>
      <elem line="840" name="Name" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="78">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Name"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-1.0" seq="15" rank="0" minImp="0" slots="1" flags="s" line="524" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="524" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.Counts"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="525">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="526">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="DeviceClass"/>
        </gc>
       </filter>
      </fn>
      <elem line="528" name="DeviceClass" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="79">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="DeviceClass"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="531">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="GpUnitId"/>
        </gc>
       </filter>
      </fn>
      <elem line="533" name="GpUnitId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="GpUnitId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="536">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="IsSuppressedForPrivacy"/>
        </gc>
       </filter>
      </fn>
      <elem line="538" name="IsSuppressedForPrivacy" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="IsSuppressedForPrivacy"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="541">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Round"/>
        </gc>
       </filter>
      </fn>
      <elem line="543" name="Round" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Round"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="546">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Type"/>
        </gc>
       </filter>
      </fn>
      <elem line="548" name="Type" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Type"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="551">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherType"/>
        </gc>
       </filter>
      </fn>
      <elem line="553" name="OtherType" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OtherType"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-1.0" seq="13" rank="0" minImp="0" slots="1" flags="s" line="490" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="490" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.ContestSelection"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="491">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <att line="492" name="ObjectId">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="@id"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line="493">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="SequenceOrder"/>
        </gc>
       </filter>
      </fn>
      <elem line="495" name="SequenceOrder" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="SequenceOrder"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="498">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="VoteCounts"/>
        </gc>
       </filter>
      </fn>
      <forEach line="499">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="VoteCounts"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="501" name="VoteCounts" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="80">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-1.0" seq="12" rank="0" minImp="0" slots="1" flags="s" line="403" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="403" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.Contest"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="404">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <att line="405" name="ObjectId">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="@id"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line="406">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Abbreviation"/>
        </gc>
       </filter>
      </fn>
      <elem line="408" name="Abbreviation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Abbreviation"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="411">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotSubTitle"/>
        </gc>
       </filter>
      </fn>
      <elem line="413" name="BallotSubTitle" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="81">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="BallotSubTitle"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="416">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotTitle"/>
        </gc>
       </filter>
      </fn>
      <elem line="418" name="BallotTitle" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="82">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="BallotTitle"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="421">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContestSelection"/>
        </gc>
       </filter>
      </fn>
      <forEach line="422">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ContestSelection"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="424" name="ContestSelection" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="83">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="428">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CountStatus"/>
        </gc>
       </filter>
      </fn>
      <forEach line="429">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="CountStatus"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="431" name="CountStatus" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="84">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="435">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ElectionDistrictId"/>
        </gc>
       </filter>
      </fn>
      <elem line="437" name="ElectionDistrictId" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="ElectionDistrictId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="440">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ExternalIdentifier"/>
        </gc>
       </filter>
      </fn>
      <forEach line="441">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ExternalIdentifier"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="443" name="ExternalIdentifier" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="85">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="447">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="HasRotation"/>
        </gc>
       </filter>
      </fn>
      <elem line="449" name="HasRotation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="HasRotation"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="452">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </fn>
      <elem line="454" name="Name" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Name"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="457">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherCounts"/>
        </gc>
       </filter>
      </fn>
      <forEach line="458">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="OtherCounts"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="460" name="OtherCounts" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="86">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="464">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="SequenceOrder"/>
        </gc>
       </filter>
      </fn>
      <elem line="466" name="SequenceOrder" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="SequenceOrder"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="469">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="SubUnitsReported"/>
        </gc>
       </filter>
      </fn>
      <elem line="471" name="SubUnitsReported" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="SubUnitsReported"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="474">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="TotalSubUnits"/>
        </gc>
       </filter>
      </fn>
      <elem line="476" name="TotalSubUnits" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="TotalSubUnits"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="479">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="VoteVariation"/>
        </gc>
       </filter>
      </fn>
      <elem line="481" name="VoteVariation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="VoteVariation"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="484">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherVoteVariation"/>
        </gc>
       </filter>
      </fn>
      <elem line="486" name="OtherVoteVariation" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OtherVoteVariation"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-1.0" seq="4" rank="0" minImp="0" slots="1" flags="s" line="51" module="err_v2_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="51" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="ElectionResults.BallotMeasureContest"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="52">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="53">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="BallotMeasureContest"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V2_election_results_reporting.xsd" line="56" name="cdf:Contest" bSlot="87">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
     <choose line="59">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ConStatement"/>
        </gc>
       </filter>
      </fn>
      <elem line="61" name="ConStatement" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="88">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ConStatement"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="64">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="EffectOfAbstain"/>
        </gc>
       </filter>
      </fn>
      <elem line="66" name="EffectOfAbstain" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="89">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="EffectOfAbstain"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="69">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="FullText"/>
        </gc>
       </filter>
      </fn>
      <elem line="71" name="FullText" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="90">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="FullText"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="74">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="InfoUri"/>
        </gc>
       </filter>
      </fn>
      <forEach line="75">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="InfoUri"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="77" name="InfoUri" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
        <applyT bSlot="91">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="81">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PassageThreshold"/>
        </gc>
       </filter>
      </fn>
      <elem line="83" name="PassageThreshold" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="92">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="PassageThreshold"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="86">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ProStatement"/>
        </gc>
       </filter>
      </fn>
      <elem line="88" name="ProStatement" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="93">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ProStatement"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="91">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="SummaryText"/>
        </gc>
       </filter>
      </fn>
      <elem line="93" name="SummaryText" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <applyT bSlot="94">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="SummaryText"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="96">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Type"/>
        </gc>
       </filter>
      </fn>
      <elem line="98" name="Type" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Type"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="101">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherType"/>
        </gc>
       </filter>
      </fn>
      <elem line="103" name="OtherType" nsuri="NIST_V2_election_results_reporting.xsd" flags="d">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OtherType"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="0" rank="2" minImp="0" slots="2" flags="s" line="5" module="err_v2_json2xml.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2005/xpath-functions}root)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='root';"/>
    <let role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V2_election_results_reporting.xsd xsl=~ cdf=NIST_V2_election_results_reporting.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="6" var="xml" as="document-node()" slot="1" eval="7">
     <doc line="8" validation="preserve">
      <elem name="ElectionReport" nsuri="NIST_V2_election_results_reporting.xsd" flags="dl">
       <applyT bSlot="95">
        <fn role="select" name="json-to-xml">
         <cvUntyped to="xs:string">
          <data>
           <dot type="element(Q{http://www.w3.org/2005/xpath-functions}root)"/>
          </data>
         </cvUntyped>
        </fn>
       </applyT>
      </elem>
     </doc>
     <copyOf line="11" flags="vc">
      <varRef name="xml" slot="1"/>
     </copyOf>
    </let>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <output>
  <property name="indent" value="yes"/>
  <property name="version" value="1.0"/>
  <property name="encoding" value="UTF-8"/>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="30"/>
  <property name="method" value="xml"/>
 </output>
 <decimalFormat/>
</package>
<?Σ 3ac0d458?>
