<?xml version="1.0" encoding="utf-8"?>
<package xmlns='http://ns.saxonica.com/xslt/export' xmlns:fn='http://www.w3.org/2005/xpath-functions' xmlns:xs='http://www.w3.org/2001/XMLSchema' xmlns:vv='http://saxon.sf.net/generated-variable' xmlns:java-type='http://saxon.sf.net/java-type' when='2022-03-06T08:43:12.238041-05:00' id='0' version='30' packageVersion='1' saxonVersion='9.9.1.7' target='JS' targetVersion='1' relocatable='true' implicit='true'>
 <co id='0' binds='1 1 1 1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}CastVoteRecordReport' flags='os' line='372' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='373'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='374'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='CVR'/>
       </vc>
      </filter>
     </fn>
     <forEach line='375'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CVR'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='376' name='CVR' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='377' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='382'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Election'/>
       </vc>
      </filter>
     </fn>
     <forEach line='383'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Election'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='384' name='Election' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='385' bSlot='1'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='390'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='GeneratedDate'/>
       </vc>
      </filter>
     </fn>
     <elem line='391' name='GeneratedDate' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='392' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='GeneratedDate'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='395'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='GpUnit'/>
       </vc>
      </filter>
     </fn>
     <forEach line='396'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='GpUnit'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='397' name='GpUnit' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='398' bSlot='2'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='403'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Notes'/>
       </vc>
      </filter>
     </fn>
     <elem line='404' name='Notes' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='405' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Notes'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='408'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Party'/>
       </vc>
      </filter>
     </fn>
     <forEach line='409'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Party'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='410' name='Party' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='411' bSlot='3'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='416'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ReportGeneratingDeviceIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='417' name='ReportGeneratingDeviceIds' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='425' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='419' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='ReportGeneratingDeviceIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='421'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='428'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ReportingDevice'/>
       </vc>
      </filter>
     </fn>
     <forEach line='429'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ReportingDevice'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='430' name='ReportingDevice' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='431' bSlot='4'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='436'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ReportType'/>
       </vc>
      </filter>
     </fn>
     <forEach line='437'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ReportType'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
      </slash>
      <elem line='438' name='ReportType' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf line='439' flags='l'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line='444'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OtherReportType'/>
       </vc>
      </filter>
     </fn>
     <elem line='445' name='OtherReportType' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='446' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OtherReportType'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='449'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Version'/>
       </vc>
      </filter>
     </fn>
     <elem line='450' name='Version' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='451' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Version'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='2' binds='1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}CVR' flags='os' line='61' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='62'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='63'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='BallotAuditId'/>
       </vc>
      </filter>
     </fn>
     <elem line='64' name='BallotAuditId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='65' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='BallotAuditId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='68'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='BallotImage'/>
       </vc>
      </filter>
     </fn>
     <forEach line='69'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotImage'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='70' name='BallotImage' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='71' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='76'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='BallotPrePrintedId'/>
       </vc>
      </filter>
     </fn>
     <elem line='77' name='BallotPrePrintedId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='78' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='BallotPrePrintedId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='81'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='BallotSheetId'/>
       </vc>
      </filter>
     </fn>
     <elem line='82' name='BallotSheetId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='83' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='BallotSheetId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='86'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='BallotStyleId'/>
       </vc>
      </filter>
     </fn>
     <elem line='87' name='BallotStyleId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='88' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='BallotStyleId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='91'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='BallotStyleUnitId'/>
       </vc>
      </filter>
     </fn>
     <elem line='92' name='BallotStyleUnitId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='93' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='BallotStyleUnitId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='96'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='BatchId'/>
       </vc>
      </filter>
     </fn>
     <elem line='97' name='BatchId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='98' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='BatchId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='101'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='BatchSequenceId'/>
       </vc>
      </filter>
     </fn>
     <elem line='102' name='BatchSequenceId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='103' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='BatchSequenceId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='106'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='CreatingDeviceId'/>
       </vc>
      </filter>
     </fn>
     <elem line='107' name='CreatingDeviceId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='108' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='CreatingDeviceId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='111'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='CurrentSnapshotId'/>
       </vc>
      </filter>
     </fn>
     <elem line='112' name='CurrentSnapshotId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='113' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='CurrentSnapshotId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='116'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='CVRSnapshot'/>
       </vc>
      </filter>
     </fn>
     <forEach line='117'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CVRSnapshot'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='118' name='CVRSnapshot' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='119' bSlot='1'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='124'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ElectionId'/>
       </vc>
      </filter>
     </fn>
     <elem line='125' name='ElectionId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='126' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='ElectionId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='129'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='PartyIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='130' name='PartyIds' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='138' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='132' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='PartyIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='134'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='141'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='UniqueId'/>
       </vc>
      </filter>
     </fn>
     <elem line='142' name='UniqueId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='143' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='UniqueId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='3' binds='1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}Candidate' flags='os' line='298' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='299'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <att line='300' name='ObjectId'>
     <convert line='301' from='xs:untypedAtomic' to='xs:string'>
      <cast as='xs:untypedAtomic' emptiable='0'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='@id'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line='303'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Code'/>
       </vc>
      </filter>
     </fn>
     <forEach line='304'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Code'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='305' name='Code' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='306' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='311'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Name'/>
       </vc>
      </filter>
     </fn>
     <elem line='312' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='313' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Name'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='316'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='PartyId'/>
       </vc>
      </filter>
     </fn>
     <elem line='317' name='PartyId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='318' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='PartyId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='4' binds='1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}ImageData' flags='os' line='656' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='657'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='658'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Hash'/>
       </vc>
      </filter>
     </fn>
     <elem line='659' name='Hash' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <applyT line='660' bSlot='0'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Hash'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='663'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Image'/>
       </vc>
      </filter>
     </fn>
     <elem line='664' name='Image' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <applyT line='665' bSlot='1'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Image'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='668'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Location'/>
       </vc>
      </filter>
     </fn>
     <elem line='669' name='Location' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='670' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Location'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='5' binds=''>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}Hash' flags='os' line='629' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='630'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='631'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Type'/>
       </vc>
      </filter>
     </fn>
     <elem line='632' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='633' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Type'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='636'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OtherType'/>
       </vc>
      </filter>
     </fn>
     <elem line='637' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='638' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OtherType'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='641'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Value'/>
       </vc>
      </filter>
     </fn>
     <elem line='642' name='Value' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='643' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Value'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='6' binds=''>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}File' flags='os' line='574' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='575'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='576'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='FileName'/>
       </vc>
      </filter>
     </fn>
     <att line='577' name='FileName'>
      <convert line='578' from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <slash simple='1'>
             <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
              <dot flags='a'/>
             </treat>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            </slash>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='FileName'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <choose line='581'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='MimeType'/>
       </vc>
      </filter>
     </fn>
     <att line='582' name='MimeType'>
      <convert line='583' from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <slash simple='1'>
             <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
              <dot flags='a'/>
             </treat>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            </slash>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='MimeType'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <valueOf line='586'>
     <fn name='string-join'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <data>
        <filter flags='b'>
         <slash simple='1'>
          <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
           <dot flags='a'/>
          </treat>
          <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         </slash>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Data'/>
         </vc>
        </filter>
       </data>
      </convert>
      <str val=' '/>
     </fn>
    </valueOf>
   </sequence>
  </template>
 </co>
 <co id='7' binds=''>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}Code' flags='os' line='455' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='456'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='457'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Label'/>
       </vc>
      </filter>
     </fn>
     <elem line='458' name='Label' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='459' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Label'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='462'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Type'/>
       </vc>
      </filter>
     </fn>
     <elem line='463' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='464' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Type'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='467'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OtherType'/>
       </vc>
      </filter>
     </fn>
     <elem line='468' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='469' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OtherType'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='472'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Value'/>
       </vc>
      </filter>
     </fn>
     <elem line='473' name='Value' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='474' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Value'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='8' binds='6'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}Image' flags='os' line='647' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='648'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='649'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='650' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='Image'/>
     </att>
    </choose>
    <callT line='652' name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}File' bSlot='0' flags='t'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
   </sequence>
  </template>
 </co>
 <co id='9' binds='1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}ContestSelection' flags='os' line='520' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='521'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <att line='522' name='ObjectId'>
     <convert line='523' from='xs:untypedAtomic' to='xs:string'>
      <cast as='xs:untypedAtomic' emptiable='0'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='@id'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line='525'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Code'/>
       </vc>
      </filter>
     </fn>
     <forEach line='526'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Code'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='527' name='Code' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='528' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='10' binds='1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}Party' flags='os' line='674' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='675'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <att line='676' name='ObjectId'>
     <convert line='677' from='xs:untypedAtomic' to='xs:string'>
      <cast as='xs:untypedAtomic' emptiable='0'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='@id'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line='679'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Abbreviation'/>
       </vc>
      </filter>
     </fn>
     <elem line='680' name='Abbreviation' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='681' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Abbreviation'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='684'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Code'/>
       </vc>
      </filter>
     </fn>
     <forEach line='685'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Code'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='686' name='Code' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='687' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='692'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Name'/>
       </vc>
      </filter>
     </fn>
     <elem line='693' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='694' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Name'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='11' binds='1'>
  <template name='Q{}start' flags='os' line='6' module='cvr_v1_json2xml.xsl' slots='2'>
   <let role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='7' var='Q{}xml' as='document-node()' slot='0' eval='16'>
    <doc line='8' validation='preserve'>
     <elem name='CastVoteRecordReport' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='dl' namespaces='xsi'>
      <applyT line='9' bSlot='0'>
       <fn role='select' name='json-to-xml'>
        <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||fn:json-to-xml'>
         <check card='?' diag='0|0||fn:json-to-xml'>
          <cvUntyped to='xs:string'>
           <data>
            <dot flags='a'/>
           </data>
          </cvUntyped>
         </check>
        </treat>
       </fn>
      </applyT>
     </elem>
    </doc>
    <copyOf line='12' flags='vc'>
     <varRef name='Q{}xml' slot='0'/>
    </copyOf>
   </let>
  </template>
 </co>
 <co id='12' binds='1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}CVRSnapshot' flags='os' line='245' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='246'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <att line='247' name='ObjectId'>
     <convert line='248' from='xs:untypedAtomic' to='xs:string'>
      <cast as='xs:untypedAtomic' emptiable='0'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='@id'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line='250'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Annotation'/>
       </vc>
      </filter>
     </fn>
     <forEach line='251'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Annotation'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='252' name='Annotation' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='253' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='258'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='CVRContest'/>
       </vc>
      </filter>
     </fn>
     <forEach line='259'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CVRContest'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='260' name='CVRContest' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='261' bSlot='1'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='266'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Status'/>
       </vc>
      </filter>
     </fn>
     <forEach line='267'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Status'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
      </slash>
      <elem line='268' name='Status' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf line='269' flags='l'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line='274'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OtherStatus'/>
       </vc>
      </filter>
     </fn>
     <elem line='275' name='OtherStatus' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='276' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OtherStatus'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='279'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Type'/>
       </vc>
      </filter>
     </fn>
     <elem line='280' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='281' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Type'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='13' binds='9'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}PartySelection' flags='os' line='707' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='708'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='709'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='710' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='PartySelection'/>
     </att>
    </choose>
    <callT line='712' name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}ContestSelection' bSlot='0'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
    <choose line='715'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='PartyIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='716' name='PartyIds' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='724' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='718' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='PartyIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='720'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='14' binds='9'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}CandidateSelection' flags='os' line='346' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='347'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='348'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='349' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='CandidateSelection'/>
     </att>
    </choose>
    <callT line='351' name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}ContestSelection' bSlot='0'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
    <choose line='354'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='CandidateIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='355' name='CandidateIds' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='363' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='357' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='CandidateIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='359'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='366'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='IsWriteIn'/>
       </vc>
      </filter>
     </fn>
     <elem line='367' name='IsWriteIn' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='368' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='IsWriteIn'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='15' binds='16'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}RetentionContest' flags='os' line='775' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='776'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='777'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='778' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='RetentionContest'/>
     </att>
    </choose>
    <callT line='780' name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}BallotMeasureContest' bSlot='0'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
    <choose line='783'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='CandidateId'/>
       </vc>
      </filter>
     </fn>
     <elem line='784' name='CandidateId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='785' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='CandidateId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='17' binds='1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}GpUnit' flags='os' line='588' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='589'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <att line='590' name='ObjectId'>
     <convert line='591' from='xs:untypedAtomic' to='xs:string'>
      <cast as='xs:untypedAtomic' emptiable='0'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='@id'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line='593'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Code'/>
       </vc>
      </filter>
     </fn>
     <forEach line='594'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Code'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='595' name='Code' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='596' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='601'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Name'/>
       </vc>
      </filter>
     </fn>
     <elem line='602' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='603' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Name'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='606'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ReportingDeviceIds'/>
       </vc>
      </filter>
     </fn>
     <elem line='607' name='ReportingDeviceIds' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='615' flags='l'>
       <fn name='normalize-space'>
        <cvUntyped to='xs:string'>
         <cast line='609' as='xs:untypedAtomic' emptiable='0'>
          <fn name='string-join'>
           <data>
            <forEach>
             <slash simple='2'>
              <filter flags='b'>
               <slash simple='1'>
                <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
                 <dot flags='a'/>
                </treat>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' onEmpty='0' comp='CCC'>
                <cast as='xs:string' emptiable='1'>
                 <attVal name='Q{}key' chk='0'/>
                </cast>
                <str val='ReportingDeviceIds'/>
               </vc>
              </filter>
              <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
             </slash>
             <valueOf line='611'>
              <fn name='concat'>
               <str val=' '/>
               <atomSing card='?' diag='0|1||fn:concat'>
                <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=''/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='618'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Type'/>
       </vc>
      </filter>
     </fn>
     <elem line='619' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='620' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Type'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='623'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OtherType'/>
       </vc>
      </filter>
     </fn>
     <elem line='624' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='625' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OtherType'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='18' binds='1 1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}Election' flags='os' line='534' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='535'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <att line='536' name='ObjectId'>
     <convert line='537' from='xs:untypedAtomic' to='xs:string'>
      <cast as='xs:untypedAtomic' emptiable='0'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='@id'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line='539'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Candidate'/>
       </vc>
      </filter>
     </fn>
     <forEach line='540'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Candidate'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='541' name='Candidate' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='542' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='547'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Code'/>
       </vc>
      </filter>
     </fn>
     <forEach line='548'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Code'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='549' name='Code' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='550' bSlot='1'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='555'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Contest'/>
       </vc>
      </filter>
     </fn>
     <forEach line='556'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Contest'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='557' name='Contest' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='558' bSlot='2'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='563'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ElectionScopeId'/>
       </vc>
      </filter>
     </fn>
     <elem line='564' name='ElectionScopeId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='565' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='ElectionScopeId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='568'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Name'/>
       </vc>
      </filter>
     </fn>
     <elem line='569' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='570' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Name'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='19' binds='20'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}CandidateContest' flags='os' line='322' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='323'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='324'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='325' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='CandidateContest'/>
     </att>
    </choose>
    <callT line='327' name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}Contest' bSlot='0'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
    <choose line='330'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='NumberElected'/>
       </vc>
      </filter>
     </fn>
     <elem line='331' name='NumberElected' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='332' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='NumberElected'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='335'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='PrimaryPartyId'/>
       </vc>
      </filter>
     </fn>
     <elem line='336' name='PrimaryPartyId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='337' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='PrimaryPartyId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='340'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='VotesAllowed'/>
       </vc>
      </filter>
     </fn>
     <elem line='341' name='VotesAllowed' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='342' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='VotesAllowed'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='21' binds='9'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}BallotMeasureSelection' flags='os' line='47' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='48'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='49'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='50' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='BallotMeasureSelection'/>
     </att>
    </choose>
    <callT line='52' name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}ContestSelection' bSlot='0'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
    <choose line='55'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Selection'/>
       </vc>
      </filter>
     </fn>
     <elem line='56' name='Selection' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='57' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Selection'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='22' binds='1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}CVRContestSelection' flags='os' line='196' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='197'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='198'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ContestSelectionId'/>
       </vc>
      </filter>
     </fn>
     <elem line='199' name='ContestSelectionId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='200' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='ContestSelectionId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='203'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OptionPosition'/>
       </vc>
      </filter>
     </fn>
     <elem line='204' name='OptionPosition' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='205' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OptionPosition'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='208'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Rank'/>
       </vc>
      </filter>
     </fn>
     <elem line='209' name='Rank' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='210' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Rank'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='213'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='SelectionPosition'/>
       </vc>
      </filter>
     </fn>
     <forEach line='214'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='SelectionPosition'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='215' name='SelectionPosition' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='216' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='221'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Status'/>
       </vc>
      </filter>
     </fn>
     <forEach line='222'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Status'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
      </slash>
      <elem line='223' name='Status' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf line='224' flags='l'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line='229'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OtherStatus'/>
       </vc>
      </filter>
     </fn>
     <elem line='230' name='OtherStatus' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='231' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OtherStatus'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='234'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='TotalFractionalVotes'/>
       </vc>
      </filter>
     </fn>
     <elem line='235' name='TotalFractionalVotes' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='236' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='TotalFractionalVotes'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='239'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='TotalNumberVotes'/>
       </vc>
      </filter>
     </fn>
     <elem line='240' name='TotalNumberVotes' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='241' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='TotalNumberVotes'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='16' binds='20'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}BallotMeasureContest' flags='os' line='38' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='39'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='40'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='41' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='BallotMeasureContest'/>
     </att>
    </choose>
    <callT line='43' name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}Contest' bSlot='0' flags='t'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
   </sequence>
  </template>
 </co>
 <co id='23' binds='1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}CVRContest' flags='os' line='147' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='148'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='149'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ContestId'/>
       </vc>
      </filter>
     </fn>
     <elem line='150' name='ContestId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='151' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='ContestId'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='154'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='CVRContestSelection'/>
       </vc>
      </filter>
     </fn>
     <forEach line='155'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CVRContestSelection'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='156' name='CVRContestSelection' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='157' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='162'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Overvotes'/>
       </vc>
      </filter>
     </fn>
     <elem line='163' name='Overvotes' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='164' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Overvotes'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='167'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Selections'/>
       </vc>
      </filter>
     </fn>
     <elem line='168' name='Selections' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='169' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Selections'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='172'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Status'/>
       </vc>
      </filter>
     </fn>
     <forEach line='173'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Status'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
      </slash>
      <elem line='174' name='Status' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf line='175' flags='l'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line='180'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OtherStatus'/>
       </vc>
      </filter>
     </fn>
     <elem line='181' name='OtherStatus' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='182' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OtherStatus'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='185'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Undervotes'/>
       </vc>
      </filter>
     </fn>
     <elem line='186' name='Undervotes' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='187' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Undervotes'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='190'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='WriteIns'/>
       </vc>
      </filter>
     </fn>
     <elem line='191' name='WriteIns' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='192' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='WriteIns'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='24' binds='1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}ReportingDevice' flags='os' line='728' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='729'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <att line='730' name='ObjectId'>
     <convert line='731' from='xs:untypedAtomic' to='xs:string'>
      <cast as='xs:untypedAtomic' emptiable='0'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='@id'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line='733'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Application'/>
       </vc>
      </filter>
     </fn>
     <elem line='734' name='Application' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='735' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Application'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='738'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Code'/>
       </vc>
      </filter>
     </fn>
     <forEach line='739'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Code'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='740' name='Code' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='741' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='746'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Manufacturer'/>
       </vc>
      </filter>
     </fn>
     <elem line='747' name='Manufacturer' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='748' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Manufacturer'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='751'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='MarkMetricType'/>
       </vc>
      </filter>
     </fn>
     <elem line='752' name='MarkMetricType' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='753' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='MarkMetricType'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='756'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Model'/>
       </vc>
      </filter>
     </fn>
     <elem line='757' name='Model' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='758' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Model'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='761'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Notes'/>
       </vc>
      </filter>
     </fn>
     <forEach line='762'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Notes'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
      </slash>
      <elem line='763' name='Notes' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf line='764' flags='l'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line='769'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='SerialNumber'/>
       </vc>
      </filter>
     </fn>
     <elem line='770' name='SerialNumber' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='771' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='SerialNumber'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='25' binds='1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}SelectionPosition' flags='os' line='789' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='790'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='791'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Code'/>
       </vc>
      </filter>
     </fn>
     <forEach line='792'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Code'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='793' name='Code' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='794' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='799'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='CVRWriteIn'/>
       </vc>
      </filter>
     </fn>
     <elem line='800' name='CVRWriteIn' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <applyT line='801' bSlot='1'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CVRWriteIn'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line='804'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='FractionalVotes'/>
       </vc>
      </filter>
     </fn>
     <elem line='805' name='FractionalVotes' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='806' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='FractionalVotes'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='809'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='HasIndication'/>
       </vc>
      </filter>
     </fn>
     <elem line='810' name='HasIndication' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='811' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='HasIndication'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='814'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='IsAllocable'/>
       </vc>
      </filter>
     </fn>
     <elem line='815' name='IsAllocable' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='816' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='IsAllocable'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='819'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='IsGenerated'/>
       </vc>
      </filter>
     </fn>
     <elem line='820' name='IsGenerated' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='821' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='IsGenerated'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='824'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='MarkMetricValue'/>
       </vc>
      </filter>
     </fn>
     <forEach line='825'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='MarkMetricValue'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
      </slash>
      <elem line='826' name='MarkMetricValue' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf line='827' flags='l'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line='832'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='NumberVotes'/>
       </vc>
      </filter>
     </fn>
     <elem line='833' name='NumberVotes' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='834' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='NumberVotes'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='837'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Position'/>
       </vc>
      </filter>
     </fn>
     <elem line='838' name='Position' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='839' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Position'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='842'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Rank'/>
       </vc>
      </filter>
     </fn>
     <elem line='843' name='Rank' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='844' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Rank'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='847'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Status'/>
       </vc>
      </filter>
     </fn>
     <forEach line='848'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Status'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
      </slash>
      <elem line='849' name='Status' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf line='850' flags='l'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line='855'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OtherStatus'/>
       </vc>
      </filter>
     </fn>
     <elem line='856' name='OtherStatus' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='857' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OtherStatus'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='20' binds='1 1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}Contest' flags='os' line='478' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='479'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <att line='480' name='ObjectId'>
     <convert line='481' from='xs:untypedAtomic' to='xs:string'>
      <cast as='xs:untypedAtomic' emptiable='0'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='@id'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line='483'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Abbreviation'/>
       </vc>
      </filter>
     </fn>
     <elem line='484' name='Abbreviation' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='485' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Abbreviation'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='488'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Code'/>
       </vc>
      </filter>
     </fn>
     <forEach line='489'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Code'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='490' name='Code' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='491' bSlot='0'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='496'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='ContestSelection'/>
       </vc>
      </filter>
     </fn>
     <forEach line='497'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContestSelection'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
      </slash>
      <elem line='498' name='ContestSelection' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT line='499' bSlot='1'>
        <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line='504'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Name'/>
       </vc>
      </filter>
     </fn>
     <elem line='505' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='506' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Name'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='509'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='VoteVariation'/>
       </vc>
      </filter>
     </fn>
     <elem line='510' name='VoteVariation' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='511' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='VoteVariation'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='514'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='OtherVoteVariation'/>
       </vc>
      </filter>
     </fn>
     <elem line='515' name='OtherVoteVariation' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='516' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='OtherVoteVariation'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='26' binds='1'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}CVRWriteIn' flags='os' line='285' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='286'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='287'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Text'/>
       </vc>
      </filter>
     </fn>
     <elem line='288' name='Text' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='289' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='Text'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line='292'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='WriteInImage'/>
       </vc>
      </filter>
     </fn>
     <elem line='293' name='WriteInImage' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <applyT line='294' bSlot='0'>
       <filter role='select' flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='WriteInImage'/>
        </vc>
       </filter>
      </applyT>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='27' binds=''>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}Annotation' flags='os' line='14' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='15'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='16'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='AdjudicatorName'/>
       </vc>
      </filter>
     </fn>
     <forEach line='17'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='AdjudicatorName'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
      </slash>
      <elem line='18' name='AdjudicatorName' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf line='19' flags='l'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line='24'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='Message'/>
       </vc>
      </filter>
     </fn>
     <forEach line='25'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='1'>
         <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
          <dot flags='a'/>
         </treat>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Message'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
      </slash>
      <elem line='26' name='Message' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf line='27' flags='l'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line='32'>
     <fn name='exists'>
      <filter flags='b'>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}key' chk='0'/>
        </cast>
        <str val='TimeStamp'/>
       </vc>
      </filter>
     </fn>
     <elem line='33' name='TimeStamp' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
      <valueOf line='34' flags='l'>
       <fn name='string-join'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <data>
          <filter flags='b'>
           <slash simple='1'>
            <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
             <dot flags='a'/>
            </treat>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}key' chk='0'/>
            </cast>
            <str val='TimeStamp'/>
           </vc>
          </filter>
         </data>
        </convert>
        <str val=' '/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='28' binds='20'>
  <template name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}PartyContest' flags='os' line='698' module='cvr_v1_json2xml.xsl' slots='1'>
   <sequence role='body' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='699'>
    <param name='Q{}set_type' slot='0'>
     <true role='select'/>
     <supplied role='conversion' slot='0'/>
    </param>
    <choose line='700'>
     <varRef name='Q{}set_type' slot='0'/>
     <att line='701' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
      <str val='PartyContest'/>
     </att>
    </choose>
    <callT line='703' name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}Contest' bSlot='0' flags='t'>
     <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
      <false/>
     </withParam>
    </callT>
   </sequence>
  </template>
 </co>
 <co id='1' binds='1 1 16 1 9 20 1 1 1 6 1 1 1 1 1 1 1 1 1 9 20 1 1 1 1 1 1 1 1 9 1 1 1 20 1'>
  <mode onNo='TC' flags='dW' patternSlots='0'>
   <templateRule prec='0' prio='0.5' seq='27' rank='1' minImp='0' slots='1' flags='s' line='789' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='789' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.SelectionPosition'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='790'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='791'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Code'/>
        </vc>
       </filter>
      </fn>
      <forEach line='792'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Code'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='794' name='Code' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='0'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='799'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CVRWriteIn'/>
        </vc>
       </filter>
      </fn>
      <elem line='801' name='CVRWriteIn' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT bSlot='1'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='CVRWriteIn'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='804'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='FractionalVotes'/>
        </vc>
       </filter>
      </fn>
      <elem line='806' name='FractionalVotes' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='FractionalVotes'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='809'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='HasIndication'/>
        </vc>
       </filter>
      </fn>
      <elem line='811' name='HasIndication' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='HasIndication'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='814'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='IsAllocable'/>
        </vc>
       </filter>
      </fn>
      <elem line='816' name='IsAllocable' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='IsAllocable'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='819'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='IsGenerated'/>
        </vc>
       </filter>
      </fn>
      <elem line='821' name='IsGenerated' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='IsGenerated'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='824'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='MarkMetricValue'/>
        </vc>
       </filter>
      </fn>
      <forEach line='825'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='MarkMetricValue'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </slash>
       <elem line='827' name='MarkMetricValue' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <valueOf flags='l'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line='832'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='NumberVotes'/>
        </vc>
       </filter>
      </fn>
      <elem line='834' name='NumberVotes' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='NumberVotes'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='837'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Position'/>
        </vc>
       </filter>
      </fn>
      <elem line='839' name='Position' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Position'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='842'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Rank'/>
        </vc>
       </filter>
      </fn>
      <elem line='844' name='Rank' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Rank'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='847'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Status'/>
        </vc>
       </filter>
      </fn>
      <forEach line='848'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Status'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </slash>
       <elem line='850' name='Status' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <valueOf flags='l'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line='855'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherStatus'/>
        </vc>
       </filter>
      </fn>
      <elem line='857' name='OtherStatus' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OtherStatus'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='26' rank='1' minImp='0' slots='1' flags='s' line='775' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='775' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.RetentionContest'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='776'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='777'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='778' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='RetentionContest'/>
      </att>
     </choose>
     <callT line='780' name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}BallotMeasureContest' bSlot='2'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
     <choose line='783'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CandidateId'/>
        </vc>
       </filter>
      </fn>
      <elem line='785' name='CandidateId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='CandidateId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='25' rank='1' minImp='0' slots='1' flags='s' line='728' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='728' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.ReportingDevice'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='729'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <att line='730' name='ObjectId'>
      <convert line='731' from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='@id'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line='733'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Application'/>
        </vc>
       </filter>
      </fn>
      <elem line='735' name='Application' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Application'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='738'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Code'/>
        </vc>
       </filter>
      </fn>
      <forEach line='739'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Code'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='741' name='Code' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='3'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='746'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Manufacturer'/>
        </vc>
       </filter>
      </fn>
      <elem line='748' name='Manufacturer' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Manufacturer'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='751'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='MarkMetricType'/>
        </vc>
       </filter>
      </fn>
      <elem line='753' name='MarkMetricType' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='MarkMetricType'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='756'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Model'/>
        </vc>
       </filter>
      </fn>
      <elem line='758' name='Model' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Model'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='761'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Notes'/>
        </vc>
       </filter>
      </fn>
      <forEach line='762'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Notes'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </slash>
       <elem line='764' name='Notes' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <valueOf flags='l'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line='769'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='SerialNumber'/>
        </vc>
       </filter>
      </fn>
      <elem line='771' name='SerialNumber' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='SerialNumber'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='24' rank='1' minImp='0' slots='1' flags='s' line='707' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='707' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.PartySelection'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='708'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='709'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='710' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='PartySelection'/>
      </att>
     </choose>
     <callT line='712' name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}ContestSelection' bSlot='4'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
     <choose line='715'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PartyIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='717' name='PartyIds' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf line='724' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='718' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='PartyIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='720'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='23' rank='1' minImp='0' slots='1' flags='s' line='698' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='698' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.PartyContest'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='699'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='700'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='701' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='PartyContest'/>
      </att>
     </choose>
     <callT line='703' name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}Contest' bSlot='5' flags='t'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='22' rank='1' minImp='0' slots='1' flags='s' line='674' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='674' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.Party'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='675'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <att line='676' name='ObjectId'>
      <convert line='677' from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='@id'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line='679'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Abbreviation'/>
        </vc>
       </filter>
      </fn>
      <elem line='681' name='Abbreviation' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Abbreviation'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='684'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Code'/>
        </vc>
       </filter>
      </fn>
      <forEach line='685'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Code'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='687' name='Code' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='6'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='692'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </fn>
      <elem line='694' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Name'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='21' rank='1' minImp='0' slots='1' flags='s' line='656' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='656' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.ImageData'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='657'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='658'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Hash'/>
        </vc>
       </filter>
      </fn>
      <elem line='660' name='Hash' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT bSlot='7'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Hash'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='663'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Image'/>
        </vc>
       </filter>
      </fn>
      <elem line='665' name='Image' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT bSlot='8'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Image'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line='668'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Location'/>
        </vc>
       </filter>
      </fn>
      <elem line='670' name='Location' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Location'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='20' rank='1' minImp='0' slots='1' flags='s' line='647' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='647' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.Image'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='648'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='649'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='650' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='Image'/>
      </att>
     </choose>
     <callT line='652' name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}File' bSlot='9' flags='t'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='19' rank='1' minImp='0' slots='1' flags='s' line='629' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='629' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.Hash'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='630'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='631'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Type'/>
        </vc>
       </filter>
      </fn>
      <elem line='633' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Type'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='636'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherType'/>
        </vc>
       </filter>
      </fn>
      <elem line='638' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OtherType'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='641'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Value'/>
        </vc>
       </filter>
      </fn>
      <elem line='643' name='Value' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Value'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='18' rank='1' minImp='0' slots='1' flags='s' line='588' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='588' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.GpUnit'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='589'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <att line='590' name='ObjectId'>
      <convert line='591' from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='@id'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line='593'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Code'/>
        </vc>
       </filter>
      </fn>
      <forEach line='594'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Code'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='596' name='Code' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='10'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='601'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </fn>
      <elem line='603' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Name'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='606'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ReportingDeviceIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='608' name='ReportingDeviceIds' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf line='615' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='609' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='ReportingDeviceIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='611'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='618'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Type'/>
        </vc>
       </filter>
      </fn>
      <elem line='620' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Type'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='623'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherType'/>
        </vc>
       </filter>
      </fn>
      <elem line='625' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OtherType'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='16' rank='1' minImp='0' slots='1' flags='s' line='534' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='534' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.Election'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='535'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <att line='536' name='ObjectId'>
      <convert line='537' from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='@id'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line='539'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Candidate'/>
        </vc>
       </filter>
      </fn>
      <forEach line='540'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Candidate'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='542' name='Candidate' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='11'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='547'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Code'/>
        </vc>
       </filter>
      </fn>
      <forEach line='548'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Code'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='550' name='Code' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='12'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='555'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Contest'/>
        </vc>
       </filter>
      </fn>
      <forEach line='556'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Contest'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='558' name='Contest' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='13'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='563'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ElectionScopeId'/>
        </vc>
       </filter>
      </fn>
      <elem line='565' name='ElectionScopeId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='ElectionScopeId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='568'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </fn>
      <elem line='570' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Name'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='13' rank='1' minImp='0' slots='1' flags='s' line='455' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='455' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.Code'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='456'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='457'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Label'/>
        </vc>
       </filter>
      </fn>
      <elem line='459' name='Label' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Label'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='462'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Type'/>
        </vc>
       </filter>
      </fn>
      <elem line='464' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Type'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='467'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherType'/>
        </vc>
       </filter>
      </fn>
      <elem line='469' name='OtherType' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OtherType'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='472'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Value'/>
        </vc>
       </filter>
      </fn>
      <elem line='474' name='Value' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Value'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='12' rank='1' minImp='0' slots='1' flags='s' line='372' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='372' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.CastVoteRecordReport'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='373'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='374'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CVR'/>
        </vc>
       </filter>
      </fn>
      <forEach line='375'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='CVR'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='377' name='CVR' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='14'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='382'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Election'/>
        </vc>
       </filter>
      </fn>
      <forEach line='383'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Election'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='385' name='Election' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='15'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='390'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='GeneratedDate'/>
        </vc>
       </filter>
      </fn>
      <elem line='392' name='GeneratedDate' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='GeneratedDate'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='395'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='GpUnit'/>
        </vc>
       </filter>
      </fn>
      <forEach line='396'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='GpUnit'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='398' name='GpUnit' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='16'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='403'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Notes'/>
        </vc>
       </filter>
      </fn>
      <elem line='405' name='Notes' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Notes'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='408'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Party'/>
        </vc>
       </filter>
      </fn>
      <forEach line='409'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Party'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='411' name='Party' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='17'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='416'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ReportGeneratingDeviceIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='418' name='ReportGeneratingDeviceIds' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf line='425' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='419' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='ReportGeneratingDeviceIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='421'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='428'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ReportingDevice'/>
        </vc>
       </filter>
      </fn>
      <forEach line='429'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ReportingDevice'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='431' name='ReportingDevice' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='18'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='436'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ReportType'/>
        </vc>
       </filter>
      </fn>
      <forEach line='437'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ReportType'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </slash>
       <elem line='439' name='ReportType' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <valueOf flags='l'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line='444'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherReportType'/>
        </vc>
       </filter>
      </fn>
      <elem line='446' name='OtherReportType' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OtherReportType'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='449'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Version'/>
        </vc>
       </filter>
      </fn>
      <elem line='451' name='Version' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Version'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='11' rank='1' minImp='0' slots='1' flags='s' line='346' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='346' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.CandidateSelection'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='347'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='348'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='349' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='CandidateSelection'/>
      </att>
     </choose>
     <callT line='351' name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}ContestSelection' bSlot='19'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
     <choose line='354'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CandidateIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='356' name='CandidateIds' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf line='363' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='357' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='CandidateIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='359'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='366'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='IsWriteIn'/>
        </vc>
       </filter>
      </fn>
      <elem line='368' name='IsWriteIn' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='IsWriteIn'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='10' rank='1' minImp='0' slots='1' flags='s' line='322' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='322' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.CandidateContest'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='323'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='324'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='325' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='CandidateContest'/>
      </att>
     </choose>
     <callT line='327' name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}Contest' bSlot='20'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
     <choose line='330'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='NumberElected'/>
        </vc>
       </filter>
      </fn>
      <elem line='332' name='NumberElected' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='NumberElected'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='335'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PrimaryPartyId'/>
        </vc>
       </filter>
      </fn>
      <elem line='337' name='PrimaryPartyId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='PrimaryPartyId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='340'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='VotesAllowed'/>
        </vc>
       </filter>
      </fn>
      <elem line='342' name='VotesAllowed' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='VotesAllowed'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='9' rank='1' minImp='0' slots='1' flags='s' line='298' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='298' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.Candidate'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='299'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <att line='300' name='ObjectId'>
      <convert line='301' from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='@id'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line='303'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Code'/>
        </vc>
       </filter>
      </fn>
      <forEach line='304'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Code'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='306' name='Code' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='21'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='311'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </fn>
      <elem line='313' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Name'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='316'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PartyId'/>
        </vc>
       </filter>
      </fn>
      <elem line='318' name='PartyId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='PartyId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='8' rank='1' minImp='0' slots='1' flags='s' line='285' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='285' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.CVRWriteIn'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='286'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='287'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Text'/>
        </vc>
       </filter>
      </fn>
      <elem line='289' name='Text' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Text'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='292'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='WriteInImage'/>
        </vc>
       </filter>
      </fn>
      <elem line='294' name='WriteInImage' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <applyT bSlot='22'>
        <filter role='select' flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='WriteInImage'/>
         </vc>
        </filter>
       </applyT>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='7' rank='1' minImp='0' slots='1' flags='s' line='245' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='245' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.CVRSnapshot'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='246'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <att line='247' name='ObjectId'>
      <convert line='248' from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='@id'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line='250'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Annotation'/>
        </vc>
       </filter>
      </fn>
      <forEach line='251'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Annotation'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='253' name='Annotation' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='23'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='258'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CVRContest'/>
        </vc>
       </filter>
      </fn>
      <forEach line='259'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='CVRContest'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='261' name='CVRContest' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='24'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='266'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Status'/>
        </vc>
       </filter>
      </fn>
      <forEach line='267'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Status'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </slash>
       <elem line='269' name='Status' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <valueOf flags='l'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line='274'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherStatus'/>
        </vc>
       </filter>
      </fn>
      <elem line='276' name='OtherStatus' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OtherStatus'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='279'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Type'/>
        </vc>
       </filter>
      </fn>
      <elem line='281' name='Type' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Type'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='6' rank='1' minImp='0' slots='1' flags='s' line='196' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='196' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.CVRContestSelection'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='197'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='198'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContestSelectionId'/>
        </vc>
       </filter>
      </fn>
      <elem line='200' name='ContestSelectionId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='ContestSelectionId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='203'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OptionPosition'/>
        </vc>
       </filter>
      </fn>
      <elem line='205' name='OptionPosition' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OptionPosition'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='208'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Rank'/>
        </vc>
       </filter>
      </fn>
      <elem line='210' name='Rank' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Rank'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='213'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='SelectionPosition'/>
        </vc>
       </filter>
      </fn>
      <forEach line='214'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='SelectionPosition'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='216' name='SelectionPosition' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='25'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='221'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Status'/>
        </vc>
       </filter>
      </fn>
      <forEach line='222'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Status'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </slash>
       <elem line='224' name='Status' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <valueOf flags='l'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line='229'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherStatus'/>
        </vc>
       </filter>
      </fn>
      <elem line='231' name='OtherStatus' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OtherStatus'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='234'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='TotalFractionalVotes'/>
        </vc>
       </filter>
      </fn>
      <elem line='236' name='TotalFractionalVotes' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='TotalFractionalVotes'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='239'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='TotalNumberVotes'/>
        </vc>
       </filter>
      </fn>
      <elem line='241' name='TotalNumberVotes' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='TotalNumberVotes'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='5' rank='1' minImp='0' slots='1' flags='s' line='147' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='147' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.CVRContest'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='148'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='149'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContestId'/>
        </vc>
       </filter>
      </fn>
      <elem line='151' name='ContestId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='ContestId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='154'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CVRContestSelection'/>
        </vc>
       </filter>
      </fn>
      <forEach line='155'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='CVRContestSelection'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='157' name='CVRContestSelection' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='26'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='162'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Overvotes'/>
        </vc>
       </filter>
      </fn>
      <elem line='164' name='Overvotes' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Overvotes'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='167'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Selections'/>
        </vc>
       </filter>
      </fn>
      <elem line='169' name='Selections' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Selections'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='172'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Status'/>
        </vc>
       </filter>
      </fn>
      <forEach line='173'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Status'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </slash>
       <elem line='175' name='Status' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <valueOf flags='l'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line='180'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherStatus'/>
        </vc>
       </filter>
      </fn>
      <elem line='182' name='OtherStatus' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OtherStatus'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='185'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Undervotes'/>
        </vc>
       </filter>
      </fn>
      <elem line='187' name='Undervotes' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Undervotes'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='190'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='WriteIns'/>
        </vc>
       </filter>
      </fn>
      <elem line='192' name='WriteIns' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='WriteIns'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='4' rank='1' minImp='0' slots='1' flags='s' line='61' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='61' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.CVR'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='62'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='63'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotAuditId'/>
        </vc>
       </filter>
      </fn>
      <elem line='65' name='BallotAuditId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='BallotAuditId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='68'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotImage'/>
        </vc>
       </filter>
      </fn>
      <forEach line='69'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='BallotImage'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='71' name='BallotImage' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='27'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='76'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotPrePrintedId'/>
        </vc>
       </filter>
      </fn>
      <elem line='78' name='BallotPrePrintedId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='BallotPrePrintedId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='81'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotSheetId'/>
        </vc>
       </filter>
      </fn>
      <elem line='83' name='BallotSheetId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='BallotSheetId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='86'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotStyleId'/>
        </vc>
       </filter>
      </fn>
      <elem line='88' name='BallotStyleId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='BallotStyleId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='91'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BallotStyleUnitId'/>
        </vc>
       </filter>
      </fn>
      <elem line='93' name='BallotStyleUnitId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='BallotStyleUnitId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='96'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BatchId'/>
        </vc>
       </filter>
      </fn>
      <elem line='98' name='BatchId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='BatchId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='101'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='BatchSequenceId'/>
        </vc>
       </filter>
      </fn>
      <elem line='103' name='BatchSequenceId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='BatchSequenceId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='106'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CreatingDeviceId'/>
        </vc>
       </filter>
      </fn>
      <elem line='108' name='CreatingDeviceId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='CreatingDeviceId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='111'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CurrentSnapshotId'/>
        </vc>
       </filter>
      </fn>
      <elem line='113' name='CurrentSnapshotId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='CurrentSnapshotId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='116'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='CVRSnapshot'/>
        </vc>
       </filter>
      </fn>
      <forEach line='117'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='CVRSnapshot'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='119' name='CVRSnapshot' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='28'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='124'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ElectionId'/>
        </vc>
       </filter>
      </fn>
      <elem line='126' name='ElectionId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='ElectionId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='129'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='PartyIds'/>
        </vc>
       </filter>
      </fn>
      <elem line='131' name='PartyIds' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf line='138' flags='l'>
        <fn name='normalize-space'>
         <cvUntyped to='xs:string'>
          <cast line='132' as='xs:untypedAtomic' emptiable='0'>
           <fn name='string-join'>
            <data>
             <forEach>
              <slash simple='2'>
               <filter flags='b'>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}key' chk='0'/>
                 </cast>
                 <str val='PartyIds'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
              </slash>
              <valueOf line='134'>
               <fn name='concat'>
                <str val=' '/>
                <atomSing card='?' diag='0|1||fn:concat'>
                 <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=''/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='141'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='UniqueId'/>
        </vc>
       </filter>
      </fn>
      <elem line='143' name='UniqueId' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='UniqueId'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='3' rank='1' minImp='0' slots='1' flags='s' line='47' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='47' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.BallotMeasureSelection'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='48'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='49'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='50' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='BallotMeasureSelection'/>
      </att>
     </choose>
     <callT line='52' name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}ContestSelection' bSlot='29'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
     <choose line='55'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Selection'/>
        </vc>
       </filter>
      </fn>
      <elem line='57' name='Selection' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Selection'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='1' rank='1' minImp='0' slots='1' flags='s' line='14' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='14' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.Annotation'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='15'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='16'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='AdjudicatorName'/>
        </vc>
       </filter>
      </fn>
      <forEach line='17'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='AdjudicatorName'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </slash>
       <elem line='19' name='AdjudicatorName' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <valueOf flags='l'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line='24'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Message'/>
        </vc>
       </filter>
      </fn>
      <forEach line='25'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Message'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </slash>
       <elem line='27' name='Message' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <valueOf flags='l'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <dot type='element(Q{http://www.w3.org/2005/xpath-functions}string)'/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line='32'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='TimeStamp'/>
        </vc>
       </filter>
      </fn>
      <elem line='34' name='TimeStamp' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='TimeStamp'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='-1.0' seq='17' rank='0' minImp='0' slots='1' flags='s' line='574' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='574' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.File'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='575'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='576'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='FileName'/>
        </vc>
       </filter>
      </fn>
      <att line='577' name='FileName'>
       <convert line='578' from='xs:untypedAtomic' to='xs:string'>
        <cast as='xs:untypedAtomic' emptiable='0'>
         <fn name='string-join'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <data>
            <filter flags='b'>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <cast as='xs:string' emptiable='1'>
               <attVal name='Q{}key' chk='0'/>
              </cast>
              <str val='FileName'/>
             </vc>
            </filter>
           </data>
          </convert>
          <str val=' '/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line='581'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='MimeType'/>
        </vc>
       </filter>
      </fn>
      <att line='582' name='MimeType'>
       <convert line='583' from='xs:untypedAtomic' to='xs:string'>
        <cast as='xs:untypedAtomic' emptiable='0'>
         <fn name='string-join'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <data>
            <filter flags='b'>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <cast as='xs:string' emptiable='1'>
               <attVal name='Q{}key' chk='0'/>
              </cast>
              <str val='MimeType'/>
             </vc>
            </filter>
           </data>
          </convert>
          <str val=' '/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <valueOf line='586'>
      <fn name='string-join'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <data>
         <filter flags='b'>
          <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
          <vc op='eq' onEmpty='0' comp='CCC'>
           <cast as='xs:string' emptiable='1'>
            <attVal name='Q{}key' chk='0'/>
           </cast>
           <str val='Data'/>
          </vc>
         </filter>
        </data>
       </convert>
       <str val=' '/>
      </fn>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='-1.0' seq='15' rank='0' minImp='0' slots='1' flags='s' line='520' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='520' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.ContestSelection'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='521'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <att line='522' name='ObjectId'>
      <convert line='523' from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='@id'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line='525'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Code'/>
        </vc>
       </filter>
      </fn>
      <forEach line='526'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Code'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='528' name='Code' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='30'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='-1.0' seq='14' rank='0' minImp='0' slots='1' flags='s' line='478' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='478' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.Contest'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='479'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <att line='480' name='ObjectId'>
      <convert line='481' from='xs:untypedAtomic' to='xs:string'>
       <cast as='xs:untypedAtomic' emptiable='0'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='@id'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line='483'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Abbreviation'/>
        </vc>
       </filter>
      </fn>
      <elem line='485' name='Abbreviation' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Abbreviation'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='488'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Code'/>
        </vc>
       </filter>
      </fn>
      <forEach line='489'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='Code'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='491' name='Code' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='31'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='496'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='ContestSelection'/>
        </vc>
       </filter>
      </fn>
      <forEach line='497'>
       <slash simple='2'>
        <filter flags='b'>
         <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}key' chk='0'/>
          </cast>
          <str val='ContestSelection'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}map)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;map&#39;;'/>
       </slash>
       <elem line='499' name='ContestSelection' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
        <applyT bSlot='32'>
         <dot role='select' type='element(Q{http://www.w3.org/2005/xpath-functions}map)'/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line='504'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='Name'/>
        </vc>
       </filter>
      </fn>
      <elem line='506' name='Name' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='Name'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='509'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='VoteVariation'/>
        </vc>
       </filter>
      </fn>
      <elem line='511' name='VoteVariation' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='VoteVariation'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line='514'>
      <fn name='exists'>
       <filter flags='b'>
        <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}key' chk='0'/>
         </cast>
         <str val='OtherVoteVariation'/>
        </vc>
       </filter>
      </fn>
      <elem line='516' name='OtherVoteVariation' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='d' namespaces='xsi'>
       <valueOf flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <filter flags='b'>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}key' chk='0'/>
             </cast>
             <str val='OtherVoteVariation'/>
            </vc>
           </filter>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='-1.0' seq='2' rank='0' minImp='0' slots='1' flags='s' line='38' module='cvr_v1_json2xml.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
     <and defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='38' op='and'>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
       </data>
       <str val='CVR.BallotMeasureContest'/>
      </gc>
      <gc op='=' card='N:1' comp='CCC'>
       <data>
        <slash simple='2'>
         <axis name='child' nodeTest='element(Q{http://www.w3.org/2005/xpath-functions}string)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;string&#39;;'/>
         <axis name='attribute' nodeTest='attribute(Q{}key)' jsTest='return item.name===&#39;key&#39;'/>
        </slash>
       </data>
       <str val='@type'/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='39'>
     <param name='Q{}set_type' slot='0'>
      <true role='select'/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='40'>
      <varRef name='Q{}set_type' slot='0'/>
      <att line='41' name='xsi:type' nsuri='http://www.w3.org/2001/XMLSchema-instance'>
       <str val='BallotMeasureContest'/>
      </att>
     </choose>
     <callT line='43' name='Q{http://itl.nist.gov/ns/voting/1500-103/v1}Contest' bSlot='33' flags='t'>
      <withParam name='Q{}set_type' flags='c' as='xs:boolean'>
       <false/>
      </withParam>
     </callT>
    </sequence>
   </templateRule>
   <templateRule prec='0' prio='1.0' seq='0' rank='2' minImp='0' slots='2' flags='s' line='6' module='cvr_v1_json2xml.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.w3.org/2005/xpath-functions}root)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.w3.org/2005/xpath-functions&#39;&amp;&amp;q.local===&#39;root&#39;;'/>
    <let role='action' defaultElementNS='http://www.w3.org/2005/xpath-functions' ns='=http://itl.nist.gov/ns/voting/1500-103/v1 xsl=~ cdf=http://itl.nist.gov/ns/voting/1500-103/v1 err=~ array=~ fn=~ xs=~ math=~ map=~ xsi=~ xhtml=http://www.w3.org/1999/xhtml' line='7' var='Q{}xml' as='document-node()' slot='1' eval='16'>
     <doc line='8' validation='preserve'>
      <elem line='9' name='CastVoteRecordReport' nsuri='http://itl.nist.gov/ns/voting/1500-103/v1' flags='dl' namespaces='xsi'>
       <applyT bSlot='34'>
        <fn role='select' name='json-to-xml'>
         <cvUntyped to='xs:string'>
          <data>
           <dot type='element(Q{http://www.w3.org/2005/xpath-functions}root)'/>
          </data>
         </cvUntyped>
        </fn>
       </applyT>
      </elem>
     </doc>
     <copyOf line='12' flags='vc'>
      <varRef name='Q{}xml' slot='1'/>
     </copyOf>
    </let>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <output>
  <property name='method' value='xml'/>
  <property name='indent' value='yes'/>
  <property name='encoding' value='UTF-8'/>
  <property name='version' value='1.0'/>
  <property name='{http://saxon.sf.net/}stylesheet-version' value='30'/>
 </output>
 <decimalFormat/>
</package>
<?Σ 79507643?>
