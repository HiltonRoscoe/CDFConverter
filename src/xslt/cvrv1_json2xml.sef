<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:java-type="http://saxon.sf.net/java-type" version="30" packageVersion="1" saxonVersion="9.8.0.12" target="JS" targetVersion="1" relocatable="true">
 <co id="0" binds="1 1 1">
  <template name="Q{NIST_V0_cast_vote_records.xsd}Election" flags="os" line="534" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="535">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <att line="537" name="ObjectId">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="@id"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line="539">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Candidate"/>
       </gc>
      </filter>
     </fn>
     <forEach line="540">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Candidate"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="542" name="Candidate" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="547">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Code"/>
       </gc>
      </filter>
     </fn>
     <forEach line="548">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Code"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="550" name="Code" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="1">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="555">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Contest"/>
       </gc>
      </filter>
     </fn>
     <forEach line="556">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Contest"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="558" name="Contest" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="2">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="563">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ElectionScopeId"/>
       </gc>
      </filter>
     </fn>
     <elem line="565" name="ElectionScopeId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="ElectionScopeId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="568">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Name"/>
       </gc>
      </filter>
     </fn>
     <elem line="570" name="Name" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Name"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="2" binds="1">
  <template name="Q{NIST_V0_cast_vote_records.xsd}CVRContest" flags="os" line="147" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="148">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="149">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ContestId"/>
       </gc>
      </filter>
     </fn>
     <elem line="151" name="ContestId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="ContestId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="154">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="CVRContestSelection"/>
       </gc>
      </filter>
     </fn>
     <forEach line="155">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CVRContestSelection"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="157" name="CVRContestSelection" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="162">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Overvotes"/>
       </gc>
      </filter>
     </fn>
     <elem line="164" name="Overvotes" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Overvotes"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="167">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Selections"/>
       </gc>
      </filter>
     </fn>
     <elem line="169" name="Selections" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Selections"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="172">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Status"/>
       </gc>
      </filter>
     </fn>
     <forEach line="173">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Status"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
      </slash>
      <elem line="175" name="Status" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line="180">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OtherStatus"/>
       </gc>
      </filter>
     </fn>
     <elem line="182" name="OtherStatus" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OtherStatus"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="185">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Undervotes"/>
       </gc>
      </filter>
     </fn>
     <elem line="187" name="Undervotes" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Undervotes"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="190">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="WriteIns"/>
       </gc>
      </filter>
     </fn>
     <elem line="192" name="WriteIns" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="WriteIns"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="3" binds="1 1">
  <template name="Q{NIST_V0_cast_vote_records.xsd}CVRSnapshot" flags="os" line="245" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="246">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <att line="248" name="ObjectId">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="@id"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line="250">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Annotation"/>
       </gc>
      </filter>
     </fn>
     <forEach line="251">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Annotation"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="253" name="Annotation" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="258">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="CVRContest"/>
       </gc>
      </filter>
     </fn>
     <forEach line="259">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CVRContest"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="261" name="CVRContest" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="1">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="266">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Status"/>
       </gc>
      </filter>
     </fn>
     <forEach line="267">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Status"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
      </slash>
      <elem line="269" name="Status" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line="274">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OtherStatus"/>
       </gc>
      </filter>
     </fn>
     <elem line="276" name="OtherStatus" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OtherStatus"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="279">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Type"/>
       </gc>
      </filter>
     </fn>
     <elem line="281" name="Type" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Type"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="4" binds="1">
  <template name="Q{}start" flags="os" line="6" module="cvr_v1_json2xml.xsl" slots="2">
   <let role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="7" var="xml" as="document-node()" slot="0" eval="7">
    <doc line="9" validation="preserve">
     <elem name="CastVoteRecordReport" nsuri="NIST_V0_cast_vote_records.xsd" flags="dl" namespaces="xsi">
      <applyT bSlot="0">
       <fn role="select" name="json-to-xml">
        <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:json-to-xml">
         <check card="?" diag="0|0||fn:json-to-xml">
          <cvUntyped to="xs:string">
           <data>
            <dot flags="a"/>
           </data>
          </cvUntyped>
         </check>
        </treat>
       </fn>
      </applyT>
     </elem>
    </doc>
    <copyOf line="12" flags="vc">
     <varRef name="xml" slot="0"/>
    </copyOf>
   </let>
  </template>
 </co>
 <co id="5" binds="6">
  <template name="Q{NIST_V0_cast_vote_records.xsd}BallotMeasureContest" flags="os" line="38" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="39">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="40">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="BallotMeasureContest"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V0_cast_vote_records.xsd" line="43" name="cdf:Contest" bSlot="0" flags="t">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
   </sequence>
  </template>
 </co>
 <co id="7" binds="">
  <template name="Q{NIST_V0_cast_vote_records.xsd}Hash" flags="os" line="629" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="630">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="631">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Type"/>
       </gc>
      </filter>
     </fn>
     <elem line="633" name="Type" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Type"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="636">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OtherType"/>
       </gc>
      </filter>
     </fn>
     <elem line="638" name="OtherType" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OtherType"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="641">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Value"/>
       </gc>
      </filter>
     </fn>
     <elem line="643" name="Value" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Value"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="8" binds="9">
  <template name="Q{NIST_V0_cast_vote_records.xsd}Image" flags="os" line="647" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="648">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="649">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="Image"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V0_cast_vote_records.xsd" line="652" name="cdf:File" bSlot="0" flags="t">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
   </sequence>
  </template>
 </co>
 <co id="10" binds="1">
  <template name="Q{NIST_V0_cast_vote_records.xsd}GpUnit" flags="os" line="588" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="589">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <att line="591" name="ObjectId">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="@id"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line="593">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Code"/>
       </gc>
      </filter>
     </fn>
     <forEach line="594">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Code"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="596" name="Code" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="601">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Name"/>
       </gc>
      </filter>
     </fn>
     <elem line="603" name="Name" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Name"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="606">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ReportingDeviceIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="608" name="ReportingDeviceIds" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf line="615" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="609" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="ReportingDeviceIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="611">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="618">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Type"/>
       </gc>
      </filter>
     </fn>
     <elem line="620" name="Type" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Type"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="623">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OtherType"/>
       </gc>
      </filter>
     </fn>
     <elem line="625" name="OtherType" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OtherType"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="9" binds="">
  <template name="Q{NIST_V0_cast_vote_records.xsd}File" flags="os" line="574" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="575">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="576">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="FileName"/>
       </gc>
      </filter>
     </fn>
     <att line="578" name="FileName">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <slash simple="1">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
              <dot flags="a"/>
             </treat>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="FileName"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <choose line="581">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="MimeType"/>
       </gc>
      </filter>
     </fn>
     <att line="583" name="MimeType">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <slash simple="1">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
              <dot flags="a"/>
             </treat>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="MimeType"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
    </choose>
    <valueOf line="586">
     <fn name="string-join">
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <filter flags="b">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         </slash>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Data"/>
         </gc>
        </filter>
       </data>
      </convert>
      <str val=" "/>
     </fn>
    </valueOf>
   </sequence>
  </template>
 </co>
 <co id="11" binds="">
  <template name="Q{NIST_V0_cast_vote_records.xsd}Code" flags="os" line="455" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="456">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="457">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Label"/>
       </gc>
      </filter>
     </fn>
     <elem line="459" name="Label" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Label"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="462">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Type"/>
       </gc>
      </filter>
     </fn>
     <elem line="464" name="Type" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Type"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="467">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OtherType"/>
       </gc>
      </filter>
     </fn>
     <elem line="469" name="OtherType" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OtherType"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="472">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Value"/>
       </gc>
      </filter>
     </fn>
     <elem line="474" name="Value" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Value"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="12" binds="6">
  <template name="Q{NIST_V0_cast_vote_records.xsd}PartyContest" flags="os" line="698" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="699">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="700">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="PartyContest"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V0_cast_vote_records.xsd" line="703" name="cdf:Contest" bSlot="0" flags="t">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
   </sequence>
  </template>
 </co>
 <co id="13" binds="1 1 1 1 1">
  <template name="Q{NIST_V0_cast_vote_records.xsd}CastVoteRecordReport" flags="os" line="372" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="373">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="374">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="CVR"/>
       </gc>
      </filter>
     </fn>
     <forEach line="375">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CVR"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="377" name="CVR" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="382">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Election"/>
       </gc>
      </filter>
     </fn>
     <forEach line="383">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Election"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="385" name="Election" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="1">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="390">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="GeneratedDate"/>
       </gc>
      </filter>
     </fn>
     <elem line="392" name="GeneratedDate" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="GeneratedDate"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="395">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="GpUnit"/>
       </gc>
      </filter>
     </fn>
     <forEach line="396">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="GpUnit"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="398" name="GpUnit" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="2">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="403">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Notes"/>
       </gc>
      </filter>
     </fn>
     <elem line="405" name="Notes" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Notes"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="408">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Party"/>
       </gc>
      </filter>
     </fn>
     <forEach line="409">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Party"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="411" name="Party" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="3">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="416">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ReportGeneratingDeviceIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="418" name="ReportGeneratingDeviceIds" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf line="425" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="419" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="ReportGeneratingDeviceIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="421">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="428">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ReportingDevice"/>
       </gc>
      </filter>
     </fn>
     <forEach line="429">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ReportingDevice"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="431" name="ReportingDevice" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="4">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="436">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ReportType"/>
       </gc>
      </filter>
     </fn>
     <forEach line="437">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ReportType"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
      </slash>
      <elem line="439" name="ReportType" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line="444">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OtherReportType"/>
       </gc>
      </filter>
     </fn>
     <elem line="446" name="OtherReportType" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OtherReportType"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="449">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Version"/>
       </gc>
      </filter>
     </fn>
     <elem line="451" name="Version" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Version"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="14" binds="5">
  <template name="Q{NIST_V0_cast_vote_records.xsd}RetentionContest" flags="os" line="775" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="776">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="777">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="RetentionContest"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V0_cast_vote_records.xsd" line="780" name="cdf:BallotMeasureContest" bSlot="0">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
    <choose line="783">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="CandidateId"/>
       </gc>
      </filter>
     </fn>
     <elem line="785" name="CandidateId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="CandidateId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="15" binds="1">
  <template name="Q{NIST_V0_cast_vote_records.xsd}ReportingDevice" flags="os" line="728" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="729">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <att line="731" name="ObjectId">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="@id"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line="733">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Application"/>
       </gc>
      </filter>
     </fn>
     <elem line="735" name="Application" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Application"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="738">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Code"/>
       </gc>
      </filter>
     </fn>
     <forEach line="739">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Code"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="741" name="Code" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="746">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Manufacturer"/>
       </gc>
      </filter>
     </fn>
     <elem line="748" name="Manufacturer" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Manufacturer"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="751">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="MarkMetricType"/>
       </gc>
      </filter>
     </fn>
     <elem line="753" name="MarkMetricType" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="MarkMetricType"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="756">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Model"/>
       </gc>
      </filter>
     </fn>
     <elem line="758" name="Model" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Model"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="761">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Notes"/>
       </gc>
      </filter>
     </fn>
     <forEach line="762">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Notes"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
      </slash>
      <elem line="764" name="Notes" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line="769">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="SerialNumber"/>
       </gc>
      </filter>
     </fn>
     <elem line="771" name="SerialNumber" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="SerialNumber"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="16" binds="1 1">
  <template name="Q{NIST_V0_cast_vote_records.xsd}ImageData" flags="os" line="656" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="657">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="658">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Hash"/>
       </gc>
      </filter>
     </fn>
     <elem line="660" name="Hash" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <applyT bSlot="0">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Hash"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="663">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Image"/>
       </gc>
      </filter>
     </fn>
     <elem line="665" name="Image" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <applyT bSlot="1">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Image"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="668">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Location"/>
       </gc>
      </filter>
     </fn>
     <elem line="670" name="Location" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Location"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="17" binds="18">
  <template name="Q{NIST_V0_cast_vote_records.xsd}CandidateSelection" flags="os" line="346" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="347">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="348">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="CandidateSelection"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V0_cast_vote_records.xsd" line="351" name="cdf:ContestSelection" bSlot="0">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
    <choose line="354">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="CandidateIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="356" name="CandidateIds" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf line="363" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="357" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="CandidateIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="359">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="366">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="IsWriteIn"/>
       </gc>
      </filter>
     </fn>
     <elem line="368" name="IsWriteIn" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="IsWriteIn"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="6" binds="1 1">
  <template name="Q{NIST_V0_cast_vote_records.xsd}Contest" flags="os" line="478" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="479">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <att line="481" name="ObjectId">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="@id"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line="483">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Abbreviation"/>
       </gc>
      </filter>
     </fn>
     <elem line="485" name="Abbreviation" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Abbreviation"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="488">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Code"/>
       </gc>
      </filter>
     </fn>
     <forEach line="489">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Code"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="491" name="Code" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="496">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ContestSelection"/>
       </gc>
      </filter>
     </fn>
     <forEach line="497">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContestSelection"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="499" name="ContestSelection" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="1">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="504">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Name"/>
       </gc>
      </filter>
     </fn>
     <elem line="506" name="Name" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Name"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="509">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="VoteVariation"/>
       </gc>
      </filter>
     </fn>
     <elem line="511" name="VoteVariation" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="VoteVariation"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="514">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OtherVoteVariation"/>
       </gc>
      </filter>
     </fn>
     <elem line="516" name="OtherVoteVariation" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OtherVoteVariation"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="19" binds="">
  <template name="Q{NIST_V0_cast_vote_records.xsd}Annotation" flags="os" line="14" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="15">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="16">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="AdjudicatorName"/>
       </gc>
      </filter>
     </fn>
     <forEach line="17">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="AdjudicatorName"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
      </slash>
      <elem line="19" name="AdjudicatorName" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line="24">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Message"/>
       </gc>
      </filter>
     </fn>
     <forEach line="25">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Message"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
      </slash>
      <elem line="27" name="Message" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line="32">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="TimeStamp"/>
       </gc>
      </filter>
     </fn>
     <elem line="34" name="TimeStamp" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="TimeStamp"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="18" binds="1">
  <template name="Q{NIST_V0_cast_vote_records.xsd}ContestSelection" flags="os" line="520" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="521">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <att line="523" name="ObjectId">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="@id"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line="525">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Code"/>
       </gc>
      </filter>
     </fn>
     <forEach line="526">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Code"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="528" name="Code" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="20" binds="18">
  <template name="Q{NIST_V0_cast_vote_records.xsd}PartySelection" flags="os" line="707" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="708">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="709">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="PartySelection"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V0_cast_vote_records.xsd" line="712" name="cdf:ContestSelection" bSlot="0">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
    <choose line="715">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="PartyIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="717" name="PartyIds" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf line="724" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="718" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="PartyIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="720">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="21" binds="1">
  <template name="Q{NIST_V0_cast_vote_records.xsd}Candidate" flags="os" line="298" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="299">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <att line="301" name="ObjectId">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="@id"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line="303">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Code"/>
       </gc>
      </filter>
     </fn>
     <forEach line="304">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Code"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="306" name="Code" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="311">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Name"/>
       </gc>
      </filter>
     </fn>
     <elem line="313" name="Name" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Name"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="316">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="PartyId"/>
       </gc>
      </filter>
     </fn>
     <elem line="318" name="PartyId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="PartyId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="22" binds="1 1">
  <template name="Q{NIST_V0_cast_vote_records.xsd}SelectionPosition" flags="os" line="789" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="790">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="791">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Code"/>
       </gc>
      </filter>
     </fn>
     <forEach line="792">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Code"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="794" name="Code" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="799">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="CVRWriteIn"/>
       </gc>
      </filter>
     </fn>
     <elem line="801" name="CVRWriteIn" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <applyT bSlot="1">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CVRWriteIn"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
    <choose line="804">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="FractionalVotes"/>
       </gc>
      </filter>
     </fn>
     <elem line="806" name="FractionalVotes" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="FractionalVotes"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="809">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="HasIndication"/>
       </gc>
      </filter>
     </fn>
     <elem line="811" name="HasIndication" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="HasIndication"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="814">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="IsAllocable"/>
       </gc>
      </filter>
     </fn>
     <elem line="816" name="IsAllocable" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="IsAllocable"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="819">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="IsGenerated"/>
       </gc>
      </filter>
     </fn>
     <elem line="821" name="IsGenerated" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="IsGenerated"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="824">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="MarkMetricValue"/>
       </gc>
      </filter>
     </fn>
     <forEach line="825">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="MarkMetricValue"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
      </slash>
      <elem line="827" name="MarkMetricValue" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line="832">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="NumberVotes"/>
       </gc>
      </filter>
     </fn>
     <elem line="834" name="NumberVotes" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="NumberVotes"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="837">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Position"/>
       </gc>
      </filter>
     </fn>
     <elem line="839" name="Position" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Position"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="842">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Rank"/>
       </gc>
      </filter>
     </fn>
     <elem line="844" name="Rank" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Rank"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="847">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Status"/>
       </gc>
      </filter>
     </fn>
     <forEach line="848">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Status"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
      </slash>
      <elem line="850" name="Status" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line="855">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OtherStatus"/>
       </gc>
      </filter>
     </fn>
     <elem line="857" name="OtherStatus" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OtherStatus"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="23" binds="18">
  <template name="Q{NIST_V0_cast_vote_records.xsd}BallotMeasureSelection" flags="os" line="47" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="48">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="49">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="BallotMeasureSelection"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V0_cast_vote_records.xsd" line="52" name="cdf:ContestSelection" bSlot="0">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
    <choose line="55">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Selection"/>
       </gc>
      </filter>
     </fn>
     <elem line="57" name="Selection" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Selection"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="24" binds="1">
  <template name="Q{NIST_V0_cast_vote_records.xsd}CVRWriteIn" flags="os" line="285" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="286">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="287">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Text"/>
       </gc>
      </filter>
     </fn>
     <elem line="289" name="Text" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Text"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="292">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="WriteInImage"/>
       </gc>
      </filter>
     </fn>
     <elem line="294" name="WriteInImage" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <applyT bSlot="0">
       <filter role="select" flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="WriteInImage"/>
        </gc>
       </filter>
      </applyT>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="25" binds="1 1">
  <template name="Q{NIST_V0_cast_vote_records.xsd}CVR" flags="os" line="61" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="62">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="63">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="BallotAuditId"/>
       </gc>
      </filter>
     </fn>
     <elem line="65" name="BallotAuditId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="BallotAuditId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="68">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="BallotImage"/>
       </gc>
      </filter>
     </fn>
     <forEach line="69">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotImage"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="71" name="BallotImage" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="76">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="BallotPrePrintedId"/>
       </gc>
      </filter>
     </fn>
     <elem line="78" name="BallotPrePrintedId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="BallotPrePrintedId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="81">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="BallotSheetId"/>
       </gc>
      </filter>
     </fn>
     <elem line="83" name="BallotSheetId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="BallotSheetId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="86">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="BallotStyleId"/>
       </gc>
      </filter>
     </fn>
     <elem line="88" name="BallotStyleId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="BallotStyleId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="91">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="BallotStyleUnitId"/>
       </gc>
      </filter>
     </fn>
     <elem line="93" name="BallotStyleUnitId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="BallotStyleUnitId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="96">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="BatchId"/>
       </gc>
      </filter>
     </fn>
     <elem line="98" name="BatchId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="BatchId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="101">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="BatchSequenceId"/>
       </gc>
      </filter>
     </fn>
     <elem line="103" name="BatchSequenceId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="BatchSequenceId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="106">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="CreatingDeviceId"/>
       </gc>
      </filter>
     </fn>
     <elem line="108" name="CreatingDeviceId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="CreatingDeviceId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="111">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="CurrentSnapshotId"/>
       </gc>
      </filter>
     </fn>
     <elem line="113" name="CurrentSnapshotId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="CurrentSnapshotId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="116">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="CVRSnapshot"/>
       </gc>
      </filter>
     </fn>
     <forEach line="117">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CVRSnapshot"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="119" name="CVRSnapshot" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="1">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="124">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ElectionId"/>
       </gc>
      </filter>
     </fn>
     <elem line="126" name="ElectionId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="ElectionId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="129">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="PartyIds"/>
       </gc>
      </filter>
     </fn>
     <elem line="131" name="PartyIds" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf line="138" flags="l">
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <cast line="132" as="xs:untypedAtomic" emptiable="0">
          <fn name="string-join">
           <data>
            <forEach>
             <slash>
              <filter flags="b">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <gc op="=" card="1:1" comp="CCC">
                <attVal name="Q{}key" chk="0"/>
                <str val="PartyIds"/>
               </gc>
              </filter>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             </slash>
             <valueOf line="134">
              <fn name="concat">
               <str val=" "/>
               <atomSing card="?" diag="0|1||fn:concat">
                <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
               </atomSing>
              </fn>
             </valueOf>
            </forEach>
           </data>
           <str val=""/>
          </fn>
         </cast>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="141">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="UniqueId"/>
       </gc>
      </filter>
     </fn>
     <elem line="143" name="UniqueId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="UniqueId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="26" binds="1">
  <template name="Q{NIST_V0_cast_vote_records.xsd}CVRContestSelection" flags="os" line="196" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="197">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="198">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="ContestSelectionId"/>
       </gc>
      </filter>
     </fn>
     <elem line="200" name="ContestSelectionId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="ContestSelectionId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="203">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OptionPosition"/>
       </gc>
      </filter>
     </fn>
     <elem line="205" name="OptionPosition" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OptionPosition"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="208">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Rank"/>
       </gc>
      </filter>
     </fn>
     <elem line="210" name="Rank" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Rank"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="213">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="SelectionPosition"/>
       </gc>
      </filter>
     </fn>
     <forEach line="214">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="SelectionPosition"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="216" name="SelectionPosition" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="221">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Status"/>
       </gc>
      </filter>
     </fn>
     <forEach line="222">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Status"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
      </slash>
      <elem line="224" name="Status" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
         </data>
        </convert>
       </valueOf>
      </elem>
     </forEach>
    </choose>
    <choose line="229">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="OtherStatus"/>
       </gc>
      </filter>
     </fn>
     <elem line="231" name="OtherStatus" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="OtherStatus"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="234">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="TotalFractionalVotes"/>
       </gc>
      </filter>
     </fn>
     <elem line="236" name="TotalFractionalVotes" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="TotalFractionalVotes"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="239">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="TotalNumberVotes"/>
       </gc>
      </filter>
     </fn>
     <elem line="241" name="TotalNumberVotes" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="TotalNumberVotes"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="27" binds="6">
  <template name="Q{NIST_V0_cast_vote_records.xsd}CandidateContest" flags="os" line="322" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="323">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="324">
     <varRef name="set_type" slot="0"/>
     <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
      <str val="CandidateContest"/>
     </att>
    </choose>
    <callT xmlns:cdf="NIST_V0_cast_vote_records.xsd" line="327" name="cdf:Contest" bSlot="0">
     <withParam name="Q{}set_type" flags="c" as="xs:boolean">
      <false/>
     </withParam>
    </callT>
    <choose line="330">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="NumberElected"/>
       </gc>
      </filter>
     </fn>
     <elem line="332" name="NumberElected" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="NumberElected"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="335">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="PrimaryPartyId"/>
       </gc>
      </filter>
     </fn>
     <elem line="337" name="PrimaryPartyId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="PrimaryPartyId"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="340">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="VotesAllowed"/>
       </gc>
      </filter>
     </fn>
     <elem line="342" name="VotesAllowed" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="VotesAllowed"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="28" binds="1">
  <template name="Q{NIST_V0_cast_vote_records.xsd}Party" flags="os" line="674" module="cvr_v1_json2xml.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="675">
    <param name="Q{}set_type" slot="0">
     <true role="select"/>
     <supplied role="conversion" slot="0"/>
    </param>
    <att line="677" name="ObjectId">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="@id"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </cast>
     </convert>
    </att>
    <choose line="679">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Abbreviation"/>
       </gc>
      </filter>
     </fn>
     <elem line="681" name="Abbreviation" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Abbreviation"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
    <choose line="684">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Code"/>
       </gc>
      </filter>
     </fn>
     <forEach line="685">
      <slash>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Code"/>
        </gc>
       </filter>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      </slash>
      <elem line="687" name="Code" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="0">
        <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
       </applyT>
      </elem>
     </forEach>
    </choose>
    <choose line="692">
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}key" chk="0"/>
        <str val="Name"/>
       </gc>
      </filter>
     </fn>
     <elem line="694" name="Name" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
      <valueOf flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <gc op="=" card="1:1" comp="CCC">
            <attVal name="Q{}key" chk="0"/>
            <str val="Name"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="1" binds="1 1 5 1 18 6 1 1 1 9 1 1 1 1 1 1 1 1 1 18 6 1 1 1 1 1 1 1 1 18 1 1 1 6 1">
  <mode onNo="TC" flags="dW" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="27" rank="1" minImp="0" slots="1" flags="s" line="789" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="789" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.SelectionPosition"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="790">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="791">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Code"/>
        </gc>
       </filter>
      </fn>
      <forEach line="792">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Code"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="794" name="Code" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="0">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="799">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CVRWriteIn"/>
        </gc>
       </filter>
      </fn>
      <elem line="801" name="CVRWriteIn" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="1">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="CVRWriteIn"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="804">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="FractionalVotes"/>
        </gc>
       </filter>
      </fn>
      <elem line="806" name="FractionalVotes" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="FractionalVotes"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="809">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="HasIndication"/>
        </gc>
       </filter>
      </fn>
      <elem line="811" name="HasIndication" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="HasIndication"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="814">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="IsAllocable"/>
        </gc>
       </filter>
      </fn>
      <elem line="816" name="IsAllocable" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="IsAllocable"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="819">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="IsGenerated"/>
        </gc>
       </filter>
      </fn>
      <elem line="821" name="IsGenerated" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="IsGenerated"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="824">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="MarkMetricValue"/>
        </gc>
       </filter>
      </fn>
      <forEach line="825">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="MarkMetricValue"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </slash>
       <elem line="827" name="MarkMetricValue" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line="832">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="NumberVotes"/>
        </gc>
       </filter>
      </fn>
      <elem line="834" name="NumberVotes" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="NumberVotes"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="837">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Position"/>
        </gc>
       </filter>
      </fn>
      <elem line="839" name="Position" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Position"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="842">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Rank"/>
        </gc>
       </filter>
      </fn>
      <elem line="844" name="Rank" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Rank"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="847">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Status"/>
        </gc>
       </filter>
      </fn>
      <forEach line="848">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Status"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </slash>
       <elem line="850" name="Status" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line="855">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherStatus"/>
        </gc>
       </filter>
      </fn>
      <elem line="857" name="OtherStatus" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OtherStatus"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="26" rank="1" minImp="0" slots="1" flags="s" line="775" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="775" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.RetentionContest"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="776">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="777">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="RetentionContest"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V0_cast_vote_records.xsd" line="780" name="cdf:BallotMeasureContest" bSlot="2">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
     <choose line="783">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CandidateId"/>
        </gc>
       </filter>
      </fn>
      <elem line="785" name="CandidateId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="CandidateId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="25" rank="1" minImp="0" slots="1" flags="s" line="728" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="728" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.ReportingDevice"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="729">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <att line="731" name="ObjectId">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="@id"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line="733">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Application"/>
        </gc>
       </filter>
      </fn>
      <elem line="735" name="Application" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Application"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="738">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Code"/>
        </gc>
       </filter>
      </fn>
      <forEach line="739">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Code"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="741" name="Code" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="3">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="746">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Manufacturer"/>
        </gc>
       </filter>
      </fn>
      <elem line="748" name="Manufacturer" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Manufacturer"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="751">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="MarkMetricType"/>
        </gc>
       </filter>
      </fn>
      <elem line="753" name="MarkMetricType" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="MarkMetricType"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="756">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Model"/>
        </gc>
       </filter>
      </fn>
      <elem line="758" name="Model" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Model"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="761">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Notes"/>
        </gc>
       </filter>
      </fn>
      <forEach line="762">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Notes"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </slash>
       <elem line="764" name="Notes" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line="769">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="SerialNumber"/>
        </gc>
       </filter>
      </fn>
      <elem line="771" name="SerialNumber" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="SerialNumber"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="24" rank="1" minImp="0" slots="1" flags="s" line="707" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="707" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.PartySelection"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="708">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="709">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="PartySelection"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V0_cast_vote_records.xsd" line="712" name="cdf:ContestSelection" bSlot="4">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
     <choose line="715">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PartyIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="717" name="PartyIds" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf line="724" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="718" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="PartyIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="720">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="23" rank="1" minImp="0" slots="1" flags="s" line="698" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="698" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.PartyContest"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="699">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="700">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="PartyContest"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V0_cast_vote_records.xsd" line="703" name="cdf:Contest" bSlot="5" flags="t">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="22" rank="1" minImp="0" slots="1" flags="s" line="674" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="674" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.Party"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="675">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <att line="677" name="ObjectId">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="@id"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line="679">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Abbreviation"/>
        </gc>
       </filter>
      </fn>
      <elem line="681" name="Abbreviation" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Abbreviation"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="684">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Code"/>
        </gc>
       </filter>
      </fn>
      <forEach line="685">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Code"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="687" name="Code" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="6">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="692">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </fn>
      <elem line="694" name="Name" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Name"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="21" rank="1" minImp="0" slots="1" flags="s" line="656" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="656" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.ImageData"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="657">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="658">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Hash"/>
        </gc>
       </filter>
      </fn>
      <elem line="660" name="Hash" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="7">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Hash"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="663">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Image"/>
        </gc>
       </filter>
      </fn>
      <elem line="665" name="Image" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="8">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Image"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
     <choose line="668">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Location"/>
        </gc>
       </filter>
      </fn>
      <elem line="670" name="Location" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Location"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="20" rank="1" minImp="0" slots="1" flags="s" line="647" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="647" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.Image"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="648">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="649">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="Image"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V0_cast_vote_records.xsd" line="652" name="cdf:File" bSlot="9" flags="t">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="19" rank="1" minImp="0" slots="1" flags="s" line="629" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="629" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.Hash"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="630">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="631">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Type"/>
        </gc>
       </filter>
      </fn>
      <elem line="633" name="Type" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Type"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="636">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherType"/>
        </gc>
       </filter>
      </fn>
      <elem line="638" name="OtherType" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OtherType"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="641">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Value"/>
        </gc>
       </filter>
      </fn>
      <elem line="643" name="Value" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Value"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="18" rank="1" minImp="0" slots="1" flags="s" line="588" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="588" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.GpUnit"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="589">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <att line="591" name="ObjectId">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="@id"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line="593">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Code"/>
        </gc>
       </filter>
      </fn>
      <forEach line="594">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Code"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="596" name="Code" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="10">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="601">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </fn>
      <elem line="603" name="Name" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Name"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="606">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ReportingDeviceIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="608" name="ReportingDeviceIds" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf line="615" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="609" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="ReportingDeviceIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="611">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="618">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Type"/>
        </gc>
       </filter>
      </fn>
      <elem line="620" name="Type" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Type"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="623">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherType"/>
        </gc>
       </filter>
      </fn>
      <elem line="625" name="OtherType" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OtherType"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="16" rank="1" minImp="0" slots="1" flags="s" line="534" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="534" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.Election"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="535">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <att line="537" name="ObjectId">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="@id"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line="539">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Candidate"/>
        </gc>
       </filter>
      </fn>
      <forEach line="540">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Candidate"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="542" name="Candidate" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="11">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="547">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Code"/>
        </gc>
       </filter>
      </fn>
      <forEach line="548">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Code"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="550" name="Code" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="12">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="555">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Contest"/>
        </gc>
       </filter>
      </fn>
      <forEach line="556">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Contest"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="558" name="Contest" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="13">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="563">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ElectionScopeId"/>
        </gc>
       </filter>
      </fn>
      <elem line="565" name="ElectionScopeId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="ElectionScopeId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="568">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </fn>
      <elem line="570" name="Name" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Name"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="13" rank="1" minImp="0" slots="1" flags="s" line="455" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="455" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.Code"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="456">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="457">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Label"/>
        </gc>
       </filter>
      </fn>
      <elem line="459" name="Label" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Label"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="462">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Type"/>
        </gc>
       </filter>
      </fn>
      <elem line="464" name="Type" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Type"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="467">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherType"/>
        </gc>
       </filter>
      </fn>
      <elem line="469" name="OtherType" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OtherType"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="472">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Value"/>
        </gc>
       </filter>
      </fn>
      <elem line="474" name="Value" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Value"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="12" rank="1" minImp="0" slots="1" flags="s" line="372" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="372" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.CastVoteRecordReport"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="373">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="374">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CVR"/>
        </gc>
       </filter>
      </fn>
      <forEach line="375">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="CVR"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="377" name="CVR" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="14">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="382">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Election"/>
        </gc>
       </filter>
      </fn>
      <forEach line="383">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Election"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="385" name="Election" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="15">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="390">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="GeneratedDate"/>
        </gc>
       </filter>
      </fn>
      <elem line="392" name="GeneratedDate" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="GeneratedDate"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="395">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="GpUnit"/>
        </gc>
       </filter>
      </fn>
      <forEach line="396">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="GpUnit"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="398" name="GpUnit" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="16">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="403">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Notes"/>
        </gc>
       </filter>
      </fn>
      <elem line="405" name="Notes" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Notes"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="408">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Party"/>
        </gc>
       </filter>
      </fn>
      <forEach line="409">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Party"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="411" name="Party" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="17">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="416">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ReportGeneratingDeviceIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="418" name="ReportGeneratingDeviceIds" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf line="425" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="419" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="ReportGeneratingDeviceIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="421">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="428">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ReportingDevice"/>
        </gc>
       </filter>
      </fn>
      <forEach line="429">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ReportingDevice"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="431" name="ReportingDevice" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="18">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="436">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ReportType"/>
        </gc>
       </filter>
      </fn>
      <forEach line="437">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ReportType"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </slash>
       <elem line="439" name="ReportType" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line="444">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherReportType"/>
        </gc>
       </filter>
      </fn>
      <elem line="446" name="OtherReportType" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OtherReportType"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="449">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Version"/>
        </gc>
       </filter>
      </fn>
      <elem line="451" name="Version" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Version"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="11" rank="1" minImp="0" slots="1" flags="s" line="346" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="346" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.CandidateSelection"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="347">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="348">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="CandidateSelection"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V0_cast_vote_records.xsd" line="351" name="cdf:ContestSelection" bSlot="19">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
     <choose line="354">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CandidateIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="356" name="CandidateIds" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf line="363" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="357" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="CandidateIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="359">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="366">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="IsWriteIn"/>
        </gc>
       </filter>
      </fn>
      <elem line="368" name="IsWriteIn" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="IsWriteIn"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="10" rank="1" minImp="0" slots="1" flags="s" line="322" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="322" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.CandidateContest"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="323">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="324">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="CandidateContest"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V0_cast_vote_records.xsd" line="327" name="cdf:Contest" bSlot="20">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
     <choose line="330">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="NumberElected"/>
        </gc>
       </filter>
      </fn>
      <elem line="332" name="NumberElected" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="NumberElected"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="335">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PrimaryPartyId"/>
        </gc>
       </filter>
      </fn>
      <elem line="337" name="PrimaryPartyId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="PrimaryPartyId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="340">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="VotesAllowed"/>
        </gc>
       </filter>
      </fn>
      <elem line="342" name="VotesAllowed" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="VotesAllowed"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="9" rank="1" minImp="0" slots="1" flags="s" line="298" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="298" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.Candidate"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="299">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <att line="301" name="ObjectId">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="@id"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line="303">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Code"/>
        </gc>
       </filter>
      </fn>
      <forEach line="304">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Code"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="306" name="Code" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="21">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="311">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </fn>
      <elem line="313" name="Name" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Name"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="316">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PartyId"/>
        </gc>
       </filter>
      </fn>
      <elem line="318" name="PartyId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="PartyId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="8" rank="1" minImp="0" slots="1" flags="s" line="285" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="285" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.CVRWriteIn"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="286">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="287">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Text"/>
        </gc>
       </filter>
      </fn>
      <elem line="289" name="Text" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Text"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="292">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="WriteInImage"/>
        </gc>
       </filter>
      </fn>
      <elem line="294" name="WriteInImage" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <applyT bSlot="22">
        <filter role="select" flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="WriteInImage"/>
         </gc>
        </filter>
       </applyT>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="7" rank="1" minImp="0" slots="1" flags="s" line="245" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="245" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.CVRSnapshot"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="246">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <att line="248" name="ObjectId">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="@id"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line="250">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Annotation"/>
        </gc>
       </filter>
      </fn>
      <forEach line="251">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Annotation"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="253" name="Annotation" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="23">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="258">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CVRContest"/>
        </gc>
       </filter>
      </fn>
      <forEach line="259">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="CVRContest"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="261" name="CVRContest" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="24">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="266">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Status"/>
        </gc>
       </filter>
      </fn>
      <forEach line="267">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Status"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </slash>
       <elem line="269" name="Status" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line="274">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherStatus"/>
        </gc>
       </filter>
      </fn>
      <elem line="276" name="OtherStatus" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OtherStatus"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="279">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Type"/>
        </gc>
       </filter>
      </fn>
      <elem line="281" name="Type" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Type"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="6" rank="1" minImp="0" slots="1" flags="s" line="196" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="196" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.CVRContestSelection"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="197">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="198">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContestSelectionId"/>
        </gc>
       </filter>
      </fn>
      <elem line="200" name="ContestSelectionId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="ContestSelectionId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="203">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OptionPosition"/>
        </gc>
       </filter>
      </fn>
      <elem line="205" name="OptionPosition" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OptionPosition"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="208">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Rank"/>
        </gc>
       </filter>
      </fn>
      <elem line="210" name="Rank" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Rank"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="213">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="SelectionPosition"/>
        </gc>
       </filter>
      </fn>
      <forEach line="214">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="SelectionPosition"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="216" name="SelectionPosition" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="25">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="221">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Status"/>
        </gc>
       </filter>
      </fn>
      <forEach line="222">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Status"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </slash>
       <elem line="224" name="Status" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line="229">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherStatus"/>
        </gc>
       </filter>
      </fn>
      <elem line="231" name="OtherStatus" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OtherStatus"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="234">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="TotalFractionalVotes"/>
        </gc>
       </filter>
      </fn>
      <elem line="236" name="TotalFractionalVotes" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="TotalFractionalVotes"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="239">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="TotalNumberVotes"/>
        </gc>
       </filter>
      </fn>
      <elem line="241" name="TotalNumberVotes" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="TotalNumberVotes"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="5" rank="1" minImp="0" slots="1" flags="s" line="147" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="147" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.CVRContest"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="148">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="149">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContestId"/>
        </gc>
       </filter>
      </fn>
      <elem line="151" name="ContestId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="ContestId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="154">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CVRContestSelection"/>
        </gc>
       </filter>
      </fn>
      <forEach line="155">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="CVRContestSelection"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="157" name="CVRContestSelection" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="26">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="162">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Overvotes"/>
        </gc>
       </filter>
      </fn>
      <elem line="164" name="Overvotes" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Overvotes"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="167">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Selections"/>
        </gc>
       </filter>
      </fn>
      <elem line="169" name="Selections" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Selections"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="172">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Status"/>
        </gc>
       </filter>
      </fn>
      <forEach line="173">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Status"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </slash>
       <elem line="175" name="Status" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line="180">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherStatus"/>
        </gc>
       </filter>
      </fn>
      <elem line="182" name="OtherStatus" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OtherStatus"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="185">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Undervotes"/>
        </gc>
       </filter>
      </fn>
      <elem line="187" name="Undervotes" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Undervotes"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="190">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="WriteIns"/>
        </gc>
       </filter>
      </fn>
      <elem line="192" name="WriteIns" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="WriteIns"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="4" rank="1" minImp="0" slots="1" flags="s" line="61" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="61" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.CVR"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="62">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="63">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotAuditId"/>
        </gc>
       </filter>
      </fn>
      <elem line="65" name="BallotAuditId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="BallotAuditId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="68">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotImage"/>
        </gc>
       </filter>
      </fn>
      <forEach line="69">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="BallotImage"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="71" name="BallotImage" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="27">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="76">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotPrePrintedId"/>
        </gc>
       </filter>
      </fn>
      <elem line="78" name="BallotPrePrintedId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="BallotPrePrintedId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="81">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotSheetId"/>
        </gc>
       </filter>
      </fn>
      <elem line="83" name="BallotSheetId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="BallotSheetId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="86">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotStyleId"/>
        </gc>
       </filter>
      </fn>
      <elem line="88" name="BallotStyleId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="BallotStyleId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="91">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BallotStyleUnitId"/>
        </gc>
       </filter>
      </fn>
      <elem line="93" name="BallotStyleUnitId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="BallotStyleUnitId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="96">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BatchId"/>
        </gc>
       </filter>
      </fn>
      <elem line="98" name="BatchId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="BatchId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="101">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="BatchSequenceId"/>
        </gc>
       </filter>
      </fn>
      <elem line="103" name="BatchSequenceId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="BatchSequenceId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="106">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CreatingDeviceId"/>
        </gc>
       </filter>
      </fn>
      <elem line="108" name="CreatingDeviceId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="CreatingDeviceId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="111">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CurrentSnapshotId"/>
        </gc>
       </filter>
      </fn>
      <elem line="113" name="CurrentSnapshotId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="CurrentSnapshotId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="116">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="CVRSnapshot"/>
        </gc>
       </filter>
      </fn>
      <forEach line="117">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="CVRSnapshot"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="119" name="CVRSnapshot" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="28">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="124">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ElectionId"/>
        </gc>
       </filter>
      </fn>
      <elem line="126" name="ElectionId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="ElectionId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="129">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="PartyIds"/>
        </gc>
       </filter>
      </fn>
      <elem line="131" name="PartyIds" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf line="138" flags="l">
        <fn name="normalize-space">
         <cvUntyped to="xs:string">
          <cast line="132" as="xs:untypedAtomic" emptiable="0">
           <fn name="string-join">
            <data>
             <forEach>
              <slash>
               <filter flags="b">
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                <gc op="=" card="1:1" comp="CCC">
                 <attVal name="Q{}key" chk="0"/>
                 <str val="PartyIds"/>
                </gc>
               </filter>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
              </slash>
              <valueOf line="134">
               <fn name="concat">
                <str val=" "/>
                <atomSing card="?" diag="0|1||fn:concat">
                 <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
                </atomSing>
               </fn>
              </valueOf>
             </forEach>
            </data>
            <str val=""/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="141">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="UniqueId"/>
        </gc>
       </filter>
      </fn>
      <elem line="143" name="UniqueId" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="UniqueId"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="3" rank="1" minImp="0" slots="1" flags="s" line="47" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="47" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.BallotMeasureSelection"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="48">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="49">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="BallotMeasureSelection"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V0_cast_vote_records.xsd" line="52" name="cdf:ContestSelection" bSlot="29">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
     <choose line="55">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Selection"/>
        </gc>
       </filter>
      </fn>
      <elem line="57" name="Selection" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Selection"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="1" rank="1" minImp="0" slots="1" flags="s" line="14" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="14" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.Annotation"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="15">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="16">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="AdjudicatorName"/>
        </gc>
       </filter>
      </fn>
      <forEach line="17">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="AdjudicatorName"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </slash>
       <elem line="19" name="AdjudicatorName" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line="24">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Message"/>
        </gc>
       </filter>
      </fn>
      <forEach line="25">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Message"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </slash>
       <elem line="27" name="Message" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <dot type="element(Q{http://www.w3.org/2005/xpath-functions}string)"/>
          </data>
         </convert>
        </valueOf>
       </elem>
      </forEach>
     </choose>
     <choose line="32">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="TimeStamp"/>
        </gc>
       </filter>
      </fn>
      <elem line="34" name="TimeStamp" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="TimeStamp"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-1.0" seq="17" rank="0" minImp="0" slots="1" flags="s" line="574" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="574" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.File"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="575">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="576">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="FileName"/>
        </gc>
       </filter>
      </fn>
      <att line="578" name="FileName">
       <convert from="xs:untypedAtomic" to="xs:string">
        <cast as="xs:untypedAtomic" emptiable="0">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <filter flags="b">
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             <gc op="=" card="1:1" comp="CCC">
              <attVal name="Q{}key" chk="0"/>
              <str val="FileName"/>
             </gc>
            </filter>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line="581">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="MimeType"/>
        </gc>
       </filter>
      </fn>
      <att line="583" name="MimeType">
       <convert from="xs:untypedAtomic" to="xs:string">
        <cast as="xs:untypedAtomic" emptiable="0">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <filter flags="b">
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             <gc op="=" card="1:1" comp="CCC">
              <attVal name="Q{}key" chk="0"/>
              <str val="MimeType"/>
             </gc>
            </filter>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <valueOf line="586">
      <fn name="string-join">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <filter flags="b">
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}key" chk="0"/>
           <str val="Data"/>
          </gc>
         </filter>
        </data>
       </convert>
       <str val=" "/>
      </fn>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-1.0" seq="15" rank="0" minImp="0" slots="1" flags="s" line="520" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="520" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.ContestSelection"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="521">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <att line="523" name="ObjectId">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="@id"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line="525">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Code"/>
        </gc>
       </filter>
      </fn>
      <forEach line="526">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Code"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="528" name="Code" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="30">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-1.0" seq="14" rank="0" minImp="0" slots="1" flags="s" line="478" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="478" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.Contest"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="479">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <att line="481" name="ObjectId">
      <convert from="xs:untypedAtomic" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="@id"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </cast>
      </convert>
     </att>
     <choose line="483">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Abbreviation"/>
        </gc>
       </filter>
      </fn>
      <elem line="485" name="Abbreviation" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Abbreviation"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="488">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Code"/>
        </gc>
       </filter>
      </fn>
      <forEach line="489">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="Code"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="491" name="Code" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="31">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="496">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="ContestSelection"/>
        </gc>
       </filter>
      </fn>
      <forEach line="497">
       <slash>
        <filter flags="b">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <str val="ContestSelection"/>
         </gc>
        </filter>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
       </slash>
       <elem line="499" name="ContestSelection" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
        <applyT bSlot="32">
         <dot role="select" type="element(Q{http://www.w3.org/2005/xpath-functions}map)"/>
        </applyT>
       </elem>
      </forEach>
     </choose>
     <choose line="504">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="Name"/>
        </gc>
       </filter>
      </fn>
      <elem line="506" name="Name" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="Name"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="509">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="VoteVariation"/>
        </gc>
       </filter>
      </fn>
      <elem line="511" name="VoteVariation" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="VoteVariation"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
     <choose line="514">
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val="OtherVoteVariation"/>
        </gc>
       </filter>
      </fn>
      <elem line="516" name="OtherVoteVariation" nsuri="NIST_V0_cast_vote_records.xsd" flags="d" namespaces="xsi">
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="OtherVoteVariation"/>
            </gc>
           </filter>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-1.0" seq="2" rank="0" minImp="0" slots="1" flags="s" line="38" module="cvr_v1_json2xml.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <and defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="38" op="and">
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
       </data>
       <str val="CVR.BallotMeasureContest"/>
      </gc>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
         <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
        </slash>
       </data>
       <str val="@type"/>
      </gc>
     </and>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="39">
     <param name="Q{}set_type" slot="0">
      <true role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="40">
      <varRef name="set_type" slot="0"/>
      <att xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="xsi:type" nsuri="http://www.w3.org/2001/XMLSchema-instance">
       <str val="BallotMeasureContest"/>
      </att>
     </choose>
     <callT xmlns:cdf="NIST_V0_cast_vote_records.xsd" line="43" name="cdf:Contest" bSlot="33" flags="t">
      <withParam name="Q{}set_type" flags="c" as="xs:boolean">
       <false/>
      </withParam>
     </callT>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="0" rank="2" minImp="0" slots="2" flags="s" line="6" module="cvr_v1_json2xml.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2005/xpath-functions}root)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='root';"/>
    <let role="action" defaultElementNS="http://www.w3.org/2005/xpath-functions" ns="=NIST_V0_cast_vote_records.xsd xsl=~ cdf=NIST_V0_cast_vote_records.xsd err=http://www.w3.org/2005/xqt-errors array=http://www.w3.org/2005/xpath-functions/array fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map xsi=~ xhtml=http://www.w3.org/1999/xhtml" line="7" var="xml" as="document-node()" slot="1" eval="7">
     <doc line="9" validation="preserve">
      <elem name="CastVoteRecordReport" nsuri="NIST_V0_cast_vote_records.xsd" flags="dl" namespaces="xsi">
       <applyT bSlot="34">
        <fn role="select" name="json-to-xml">
         <cvUntyped to="xs:string">
          <data>
           <dot type="element(Q{http://www.w3.org/2005/xpath-functions}root)"/>
          </data>
         </cvUntyped>
        </fn>
       </applyT>
      </elem>
     </doc>
     <copyOf line="12" flags="vc">
      <varRef name="xml" slot="1"/>
     </copyOf>
    </let>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <output>
  <property name="indent" value="yes"/>
  <property name="version" value="1.0"/>
  <property name="encoding" value="UTF-8"/>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="30"/>
  <property name="method" value="xml"/>
 </output>
 <decimalFormat/>
</package>
<?Σ b08bf022?>
